<svg version="1.1"
    viewBox="-2 -2 751 956"
    xmlns="http://www.w3.org/2000/svg">
    <style>
        .todo {
            --bg: rgba(255, 255, 255, 0.25);
            --fg: rgba(100, 100, 100, 0.5);
        }
        .known {
            --bg: rgba(255, 255, 0, 0.25);
            --fg: rgba(250, 150, 0, 0.85);
        }
        .decompiled {
            --bg: rgba(0, 255, 0, 0.5);
            --fg: rgba(0, 150, 0, 0.85);
        }
        .unused {
            --bg: rgba(255, 0, 0, 0.05);
            --fg: rgba(250, 0, 0, 0.5);
        }
        rect {
            fill: var(--bg);
            stroke: var(--fg);
            stroke-width: 0.5;
        }
        rect.unused {
            fill: url("#unused-cross");
        }
        text {
            alignment-baseline: central;
            font-family: sans-serif;
            font-size: 15px;
            fill: var(--fg, black);
            stroke: none;
        }
        @media (prefers-color-scheme: dark) {
          text {
            fill: var(--fg, white);
          }
        }
        tspan {
            alignment-baseline: central;
            fill: var(--fg, inherit);
        }
    </style>
    <defs>
        <pattern id='unused-cross' x='0' y='0' width='100%' height='100%' viewBox='0 0 12 12' preserveAspectRatio='none'>
            <path d='M0,0L12,12M0,12L12,0' stroke-width='0.5' stroke='red'/>
        </pattern>
    </defs>
<g transform="translate(0 0)">
<text x="0" y="7.50">Legend:</text>
<g transform="translate(0 20)">
<text x="17" y="7.50">Function fully decompiled</text>
<rect width="12" height="12" x="0" y="1.50" class="decompiled"/>
</g>
<g transform="translate(0 38)">
<text x="17" y="7.50">Function not yet decompiled, but with a known signature</text>
<rect width="12" height="12" x="0" y="1.50" class="known"/>
</g>
<g transform="translate(0 56)">
<text x="17" y="7.50">Function not yet decompiled, with an unknown signature</text>
<rect width="12" height="12" x="0" y="1.50" class="todo"/>
</g>
<g transform="translate(0 74)">
<text x="17" y="7.50">Function not used by the game</text>
<rect width="12" height="12" x="0" y="1.50" class="unused"/>
</g>
</g>
<g transform="translate(0 116)">
<text x="0" y="7.50">Tomb2.exe progress according to the physical function order:</text>
<text class="todo" style="font-size: 12px; " x="747" y="9"><tspan text-anchor="end"><tspan class="decompiled">69.13% (860)</tspan> · <tspan class="known">28.46% (354)</tspan> · <tspan class="todo">0% (0)</tspan> · <tspan class="unused">2.41% (30)</tspan></tspan></text>
<g transform="translate(0 20)">
<rect width="516.41" height="6" x="0" y="0" class="decompiled"/>
<rect width="212.57" height="6" x="516.41" y="0" class="known"/>
<rect width="18.01" height="6" x="728.99" y="0" class="unused"/>
</g>
<g transform="translate(0 31)">
<rect width="12" height="12" x="0" y="0" class="decompiled"><title>void __cdecl Matrix_GenerateW2V(PHD_3DPOS *viewpos);</title></rect>
<rect width="12" height="12" x="15" y="0" class="decompiled"><title>void __cdecl Matrix_LookAt(int32_t xsrc, int32_t ysrc, int32_t zsrc, int32_t xtar, int32_t ytar, int32_t ztar, int16_t roll);</title></rect>
<rect width="12" height="12" x="30" y="0" class="decompiled"><title>void __cdecl Math_GetVectorAngles(int32_t x, int32_t y, int32_t z, int16_t *dest);</title></rect>
<rect width="12" height="12" x="45" y="0" class="decompiled"><title>void __cdecl Matrix_RotX(int16_t rx);</title></rect>
<rect width="12" height="12" x="60" y="0" class="decompiled"><title>void __cdecl Matrix_RotY(int16_t ry);</title></rect>
<rect width="12" height="12" x="75" y="0" class="decompiled"><title>void __cdecl Matrix_RotZ(int16_t rz);</title></rect>
<rect width="12" height="12" x="90" y="0" class="decompiled"><title>void __cdecl Matrix_RotYXZ(int16_t ry, int16_t rx, int16_t rz);</title></rect>
<rect width="12" height="12" x="105" y="0" class="decompiled"><title>void __cdecl Matrix_RotYXZpack(uint32_t rpack);</title></rect>
<rect width="12" height="12" x="120" y="0" class="decompiled"><title>bool __cdecl Matrix_TranslateRel(int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="12" height="12" x="135" y="0" class="decompiled"><title>void __cdecl Matrix_TranslateAbs(int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="12" height="12" x="150" y="0" class="decompiled"><title>void __cdecl Output_InsertPolygons(const int16_t *obj_ptr, int32_t clip);</title></rect>
<rect width="12" height="12" x="165" y="0" class="decompiled"><title>void __cdecl Output_InsertRoom(const int16_t *obj_ptr, int32_t is_outside);</title></rect>
<rect width="12" height="12" x="180" y="0" class="decompiled"><title>const int16_t *__cdecl Output_CalcSkyboxLight(const int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="195" y="0" class="decompiled"><title>void __cdecl Output_InsertSkybox(const int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="210" y="0" class="unused"><title>void __cdecl Output_InsertInventoryBackground(const int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="225" y="0" class="decompiled"><title>const int16_t *__cdecl Output_CalcObjectVertices(const int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="240" y="0" class="decompiled"><title>const int16_t *__cdecl Output_CalcVerticeLight(const int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="255" y="0" class="decompiled"><title>const int16_t *__cdecl Output_CalcRoomVertices(const int16_t *obj_ptr, int32_t far_clip);</title></rect>
<rect width="12" height="12" x="270" y="0" class="decompiled"><title>void __cdecl Output_RotateLight(int16_t pitch, int16_t yaw);</title></rect>
<rect width="12" height="12" x="285" y="0" class="decompiled"><title>void __cdecl Output_InitPolyList(void);</title></rect>
<rect width="12" height="12" x="300" y="0" class="decompiled"><title>void __cdecl Output_SortPolyList(void);</title></rect>
<rect width="12" height="12" x="315" y="0" class="decompiled"><title>void __cdecl Output_QuickSort(int32_t left, int32_t right);</title></rect>
<rect width="12" height="12" x="330" y="0" class="decompiled"><title>void __cdecl Output_PrintPolyList(uint8_t *surface_ptr);</title></rect>
<rect width="12" height="12" x="345" y="0" class="decompiled"><title>void __cdecl Output_AlterFOV(int16_t fov);</title></rect>
<rect width="12" height="12" x="360" y="0" class="decompiled"><title>void __cdecl Output_SetNearZ(int32_t near_z);</title></rect>
<rect width="12" height="12" x="375" y="0" class="decompiled"><title>void __cdecl Output_SetFarZ(int32_t far_z);</title></rect>
<rect width="12" height="12" x="390" y="0" class="decompiled"><title>void __cdecl Output_Init(int16_t x, int16_t y, int32_t width, int32_t height, int32_t near_z, int32_t far_z, int16_t view_angle, int32_t screen_width, int32_t screen_height);</title></rect>
<rect width="12" height="12" x="405" y="0" class="decompiled"><title>void __cdecl Output_DrawPolyLine(const int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="420" y="0" class="decompiled"><title>void __cdecl Output_DrawPolyFlat(const int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="435" y="0" class="decompiled"><title>void __cdecl Output_DrawPolyTrans(const int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="450" y="0" class="decompiled"><title>void __cdecl Output_DrawPolyGouraud(const int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="465" y="0" class="decompiled"><title>void __cdecl Output_DrawPolyGTMap(const int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="480" y="0" class="decompiled"><title>void __cdecl Output_DrawPolyWGTMap(const int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="495" y="0" class="decompiled"><title>int32_t __cdecl Output_XGenX(const int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="510" y="0" class="decompiled"><title>int32_t __cdecl Output_XGenXG(const int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="525" y="0" class="decompiled"><title>int32_t __cdecl Output_XGenXGUV(const int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="540" y="0" class="decompiled"><title>int32_t __cdecl Output_XGenXGUVPerspFP(const int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="555" y="0" class="decompiled"><title>void __cdecl Output_GTMapPersp32FP(int32_t y1, int32_t y2, uint8_t *tex_page);</title></rect>
<rect width="12" height="12" x="570" y="0" class="decompiled"><title>void __cdecl Output_WGTMapPersp32FP(int32_t y1, int32_t y2, uint8_t *tex_page);</title></rect>
<rect width="12" height="12" x="585" y="0" class="decompiled"><title>void __cdecl Output_DrawPolyGTMapPersp(const int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="600" y="0" class="decompiled"><title>void __cdecl Output_DrawPolyWGTMapPersp(const int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="615" y="0" class="decompiled"><title>int32_t __cdecl Output_VisibleZClip(const PHD_VBUF *vtx0, const PHD_VBUF *vtx1, const PHD_VBUF *vtx2);</title></rect>
<rect width="12" height="12" x="630" y="0" class="decompiled"><title>int32_t __cdecl Output_ZedClipper(int32_t vtx_count, POINT_INFO *pts, VERTEX_INFO *vtx);</title></rect>
<rect width="12" height="12" x="645" y="0" class="decompiled"><title>int32_t __cdecl Output_XYGUVClipper(int32_t vtx_count, VERTEX_INFO *vtx);</title></rect>
<rect width="12" height="12" x="660" y="0" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectGT4(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="12" height="12" x="675" y="0" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectGT3(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="12" height="12" x="690" y="0" class="decompiled"><title>int32_t __cdecl Output_XYGClipper(int32_t vtx_count, VERTEX_INFO *vtx);</title></rect>
<rect width="12" height="12" x="705" y="0" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectG4(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="12" height="12" x="720" y="0" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectG3(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="12" height="12" x="735" y="0" class="decompiled"><title>int32_t __cdecl Output_XYClipper(int32_t vtx_count, VERTEX_INFO *vtx);</title></rect>
<rect width="12" height="12" x="0" y="15" class="decompiled"><title>void __cdecl Output_InsertTrans8(const PHD_VBUF *vbuf, int16_t shade);</title></rect>
<rect width="12" height="12" x="15" y="15" class="decompiled"><title>void __cdecl Output_InsertTransQuad(int32_t x, int32_t y, int32_t width, int32_t height, int32_t z);</title></rect>
<rect width="12" height="12" x="30" y="15" class="decompiled"><title>void __cdecl Output_InsertFlatRect(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t z, uint8_t color_idx);</title></rect>
<rect width="12" height="12" x="45" y="15" class="decompiled"><title>void __cdecl Output_InsertLine(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t z, uint8_t color_idx);</title></rect>
<rect width="12" height="12" x="60" y="15" class="decompiled"><title>void __cdecl Output_InsertGT3_ZBuffered(const PHD_VBUF *vtx0, const PHD_VBUF *vtx1, const PHD_VBUF *vtx2, const PHD_TEXTURE *texture, const PHD_UV *uv0, const PHD_UV *uv1, const PHD_UV *uv2);</title></rect>
<rect width="12" height="12" x="75" y="15" class="decompiled"><title>void __cdecl Output_DrawClippedPoly_Textured(int32_t vtx_count);</title></rect>
<rect width="12" height="12" x="90" y="15" class="decompiled"><title>void __cdecl Output_InsertGT4_ZBuffered(const PHD_VBUF *vtx0, const PHD_VBUF *vtx1, const PHD_VBUF *vtx2, const PHD_VBUF *vtx3, const PHD_TEXTURE *texture);</title></rect>
<rect width="12" height="12" x="105" y="15" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectGT4_ZBuffered(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="12" height="12" x="120" y="15" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectGT3_ZBuffered(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="12" height="12" x="135" y="15" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectG4_ZBuffered(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="12" height="12" x="150" y="15" class="decompiled"><title>void __cdecl Output_DrawPoly_Gouraud(int32_t vtx_count, int32_t red, int32_t green, int32_t blue);</title></rect>
<rect width="12" height="12" x="165" y="15" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectG3_ZBuffered(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="12" height="12" x="180" y="15" class="decompiled"><title>void __cdecl Output_InsertFlatRect_ZBuffered(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t z, uint8_t color_idx);</title></rect>
<rect width="12" height="12" x="195" y="15" class="decompiled"><title>void __cdecl Output_InsertLine_ZBuffered(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t z, uint8_t color_idx);</title></rect>
<rect width="12" height="12" x="210" y="15" class="decompiled"><title>void __cdecl Output_InsertGT3_Sorted(const PHD_VBUF *vtx0, const PHD_VBUF *vtx1, const PHD_VBUF *vtx2, const PHD_TEXTURE *texture, const PHD_UV *uv0, const PHD_UV *uv1, const PHD_UV *uv2, SORT_TYPE sort_type);</title></rect>
<rect width="12" height="12" x="225" y="15" class="decompiled"><title>void __cdecl Output_InsertClippedPoly_Textured(int32_t vtx_count, float z, int16_t poly_type, int16_t tex_page);</title></rect>
<rect width="12" height="12" x="240" y="15" class="decompiled"><title>void __cdecl Output_InsertGT4_Sorted(const PHD_VBUF *vtx0, const PHD_VBUF *vtx1, const PHD_VBUF *vtx2, const PHD_VBUF *vtx3, const PHD_TEXTURE *texture, SORT_TYPE sort_type);</title></rect>
<rect width="12" height="12" x="255" y="15" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectGT4_Sorted(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="12" height="12" x="270" y="15" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectGT3_Sorted(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="12" height="12" x="285" y="15" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectG4_Sorted(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="12" height="12" x="300" y="15" class="decompiled"><title>void __cdecl Output_InsertPoly_Gouraud(int32_t vtx_count, float z, int32_t red, int32_t green, int32_t blue, int16_t poly_type);</title></rect>
<rect width="12" height="12" x="315" y="15" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectG3_Sorted(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="12" height="12" x="330" y="15" class="decompiled"><title>void __cdecl Output_InsertSprite_Sorted(int32_t z, int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t sprite_idx, int16_t shade);</title></rect>
<rect width="12" height="12" x="345" y="15" class="decompiled"><title>void __cdecl Output_InsertFlatRect_Sorted(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t z, uint8_t color_idx);</title></rect>
<rect width="12" height="12" x="360" y="15" class="decompiled"><title>void __cdecl Output_InsertLine_Sorted(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t z, uint8_t color_idx);</title></rect>
<rect width="12" height="12" x="375" y="15" class="decompiled"><title>void __cdecl Output_InsertTrans8_Sorted(const PHD_VBUF *vbuf, int16_t shade);</title></rect>
<rect width="12" height="12" x="390" y="15" class="decompiled"><title>void __cdecl Output_InsertTransQuad_Sorted(int32_t x, int32_t y, int32_t width, int32_t height, int32_t z);</title></rect>
<rect width="12" height="12" x="405" y="15" class="decompiled"><title>void __cdecl Output_InsertSprite(int32_t z, int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t sprite_idx, int16_t shade);</title></rect>
<rect width="12" height="12" x="420" y="15" class="decompiled"><title>void __cdecl Output_DrawSprite(uint32_t flags, int32_t x, int32_t y, int32_t z, int16_t sprite_idx, int16_t shade, int16_t scale);</title></rect>
<rect width="12" height="12" x="435" y="15" class="decompiled"><title>void __cdecl Output_DrawPickup(int32_t sx, int32_t sy, int32_t scale, int16_t sprite_idx, int16_t shade);</title></rect>
<rect width="12" height="12" x="450" y="15" class="decompiled"><title>const int16_t *__cdecl Output_InsertRoomSprite(const int16_t *obj_ptr, int32_t vtx_count);</title></rect>
<rect width="12" height="12" x="465" y="15" class="decompiled"><title>void __cdecl Output_DrawScreenSprite2D(int32_t sx, int32_t sy, int32_t sz, int32_t scale_h, int32_t scale_v, int16_t sprite_idx, int16_t shade, uint16_t flags);</title></rect>
<rect width="12" height="12" x="480" y="15" class="decompiled"><title>void __cdecl Output_DrawScreenSprite(int32_t sx, int32_t sy, int32_t sz, int32_t scale_h, int32_t scale_v, int16_t sprite_idx, int16_t shade, uint16_t flags);</title></rect>
<rect width="12" height="12" x="495" y="15" class="decompiled"><title>void __cdecl Output_DrawScaledSpriteC(const int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="510" y="15" class="decompiled"><title>void __cdecl Bird_Initialise(int16_t item_num);</title></rect>
<rect width="12" height="12" x="525" y="15" class="decompiled"><title>void __cdecl Bird_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="540" y="15" class="decompiled"><title>void __cdecl Boat_Initialise(int16_t item_num);</title></rect>
<rect width="12" height="12" x="555" y="15" class="decompiled"><title>int32_t __cdecl Boat_CheckGetOn(int16_t item_num, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="570" y="15" class="decompiled"><title>void __cdecl Boat_Collision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="585" y="15" class="decompiled"><title>int32_t __cdecl Boat_TestWaterHeight(ITEM *item, int32_t z_off, int32_t x_off, XYZ_32 *pos);</title></rect>
<rect width="12" height="12" x="600" y="15" class="decompiled"><title>void __cdecl Boat_DoShift(int32_t boat_num);</title></rect>
<rect width="12" height="12" x="615" y="15" class="decompiled"><title>void __cdecl Boat_DoWakeEffect(ITEM *boat);</title></rect>
<rect width="12" height="12" x="630" y="15" class="decompiled"><title>int32_t __cdecl Boat_DoDynamics(int32_t height, int32_t fall_speed, int32_t *y);</title></rect>
<rect width="12" height="12" x="645" y="15" class="decompiled"><title>int32_t __cdecl Boat_Dynamics(int16_t boat_num);</title></rect>
<rect width="12" height="12" x="660" y="15" class="decompiled"><title>int32_t __cdecl Boat_UserControl(ITEM *boat);</title></rect>
<rect width="12" height="12" x="675" y="15" class="decompiled"><title>void __cdecl Boat_Animation(ITEM *boat, int32_t collide);</title></rect>
<rect width="12" height="12" x="690" y="15" class="decompiled"><title>void __cdecl Boat_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="705" y="15" class="decompiled"><title>void __cdecl Gondola_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="720" y="15" class="decompiled"><title>void __cdecl Creature_Initialise(int16_t item_num);</title></rect>
<rect width="12" height="12" x="735" y="15" class="decompiled"><title>int32_t __cdecl Creature_Activate(int16_t item_num);</title></rect>
<rect width="12" height="12" x="0" y="30" class="decompiled"><title>void __cdecl Creature_AIInfo(ITEM *item, AI_INFO *info);</title></rect>
<rect width="12" height="12" x="15" y="30" class="decompiled"><title>int32_t __cdecl Box_SearchLOT(LOT_INFO *lot, int32_t expansion);</title></rect>
<rect width="12" height="12" x="30" y="30" class="decompiled"><title>int32_t __cdecl Box_UpdateLOT(LOT_INFO *lot, int32_t expansion);</title></rect>
<rect width="12" height="12" x="45" y="30" class="decompiled"><title>void __cdecl Box_TargetBox(LOT_INFO *lot, int16_t box_num);</title></rect>
<rect width="12" height="12" x="60" y="30" class="decompiled"><title>int32_t __cdecl Box_StalkBox(const ITEM *item, const ITEM *enemy, int16_t box_num);</title></rect>
<rect width="12" height="12" x="75" y="30" class="decompiled"><title>int32_t __cdecl Box_EscapeBox(const ITEM *item, const ITEM *enemy, int16_t box_num);</title></rect>
<rect width="12" height="12" x="90" y="30" class="decompiled"><title>int32_t __cdecl Box_ValidBox(const ITEM *item, int16_t zone_num, int16_t box_num);</title></rect>
<rect width="12" height="12" x="105" y="30" class="decompiled"><title>void __cdecl Creature_Mood(ITEM *item, AI_INFO *info, int32_t violent);</title></rect>
<rect width="12" height="12" x="120" y="30" class="decompiled"><title>TARGET_TYPE __cdecl Box_CalculateTarget(XYZ_32 *target, ITEM *item, LOT_INFO *lot);</title></rect>
<rect width="12" height="12" x="135" y="30" class="decompiled"><title>int32_t __cdecl Creature_CheckBaddieOverlap(int16_t item_num);</title></rect>
<rect width="12" height="12" x="150" y="30" class="decompiled"><title>int32_t __cdecl Box_BadFloor(int32_t x, int32_t y, int32_t z, int32_t box_height, int32_t next_height, int16_t room_num, LOT_INFO *lot);</title></rect>
<rect width="12" height="12" x="165" y="30" class="decompiled"><title>void __cdecl Creature_Die(int16_t item_num, int32_t explode);</title></rect>
<rect width="12" height="12" x="180" y="30" class="decompiled"><title>int32_t __cdecl Creature_Animate(int16_t item_num, int16_t angle, int16_t tilt);</title></rect>
<rect width="12" height="12" x="195" y="30" class="decompiled"><title>int16_t __cdecl Creature_Turn(ITEM *item, int16_t maximum_turn);</title></rect>
<rect width="12" height="12" x="210" y="30" class="decompiled"><title>void __cdecl Creature_Tilt(ITEM *item, int16_t angle);</title></rect>
<rect width="12" height="12" x="225" y="30" class="decompiled"><title>void __cdecl Creature_Head(ITEM *item, int16_t required);</title></rect>
<rect width="12" height="12" x="240" y="30" class="decompiled"><title>void __cdecl Creature_Neck(ITEM *item, int16_t required);</title></rect>
<rect width="12" height="12" x="255" y="30" class="decompiled"><title>void __cdecl Creature_Float(int16_t item_num);</title></rect>
<rect width="12" height="12" x="270" y="30" class="decompiled"><title>void __cdecl Creature_Underwater(ITEM *item, int32_t depth);</title></rect>
<rect width="12" height="12" x="285" y="30" class="decompiled"><title>int16_t __cdecl Creature_Effect(ITEM *item, BITE *bite, int16_t (*__cdecl spawn)(int32_t x, int32_t y, int32_t z, int16_t speed, int16_t y_rot, int16_t room_num));</title></rect>
<rect width="12" height="12" x="300" y="30" class="decompiled"><title>int32_t __cdecl Creature_Vault(int16_t item_num, int16_t angle, int32_t vault, int32_t shift);</title></rect>
<rect width="12" height="12" x="315" y="30" class="decompiled"><title>void __cdecl Creature_Kill(ITEM *item, int32_t kill_anim, int32_t kill_state, int32_t lara_kill_state);</title></rect>
<rect width="12" height="12" x="330" y="30" class="decompiled"><title>void __cdecl Creature_GetBaddieTarget(int16_t item_num, int32_t goody);</title></rect>
<rect width="12" height="12" x="345" y="30" class="decompiled"><title>void __cdecl Camera_Initialise(void);</title></rect>
<rect width="12" height="12" x="360" y="30" class="decompiled"><title>void __cdecl Camera_Move(const GAME_VECTOR *target, int32_t speed);</title></rect>
<rect width="12" height="12" x="375" y="30" class="decompiled"><title>void __cdecl Camera_Clip(int32_t *x, int32_t *y, int32_t *h, int32_t target_x, int32_t target_y, int32_t target_h, int32_t left, int32_t top, int32_t right, int32_t bottom);</title></rect>
<rect width="12" height="12" x="390" y="30" class="decompiled"><title>void __cdecl Camera_Shift(int32_t *x, int32_t *y, int32_t *h, int32_t target_x, int32_t target_y, int32_t target_h, int32_t left, int32_t top, int32_t right, int32_t bottom);</title></rect>
<rect width="12" height="12" x="405" y="30" class="decompiled"><title>const SECTOR *__cdecl Camera_GoodPosition(int32_t x, int32_t y, int32_t z, int16_t room_num);</title></rect>
<rect width="12" height="12" x="420" y="30" class="decompiled"><title>void __cdecl Camera_SmartShift(GAME_VECTOR *target, void (*__cdecl shift)(int32_t *x, int32_t *y, int32_t *h, int32_t target_x, int32_t target_y, int32_t target_h, int32_t left, int32_t top, int32_t right, int32_t bottom));</title></rect>
<rect width="12" height="12" x="435" y="30" class="decompiled"><title>void __cdecl Camera_Chase(const ITEM *item);</title></rect>
<rect width="12" height="12" x="450" y="30" class="decompiled"><title>int32_t __cdecl Camera_ShiftClamp(GAME_VECTOR *pos, int32_t clamp);</title></rect>
<rect width="12" height="12" x="465" y="30" class="decompiled"><title>void __cdecl Camera_Combat(const ITEM *item);</title></rect>
<rect width="12" height="12" x="480" y="30" class="decompiled"><title>void __cdecl Camera_Look(const ITEM *item);</title></rect>
<rect width="12" height="12" x="495" y="30" class="decompiled"><title>void __cdecl Camera_Fixed(void);</title></rect>
<rect width="12" height="12" x="510" y="30" class="decompiled"><title>void __cdecl Camera_Update(void);</title></rect>
<rect width="12" height="12" x="525" y="30" class="decompiled"><title>void __cdecl Game_SetCutsceneTrack(int32_t track);</title></rect>
<rect width="12" height="12" x="540" y="30" class="decompiled"><title>int32_t __cdecl Game_Cutscene_Start(int32_t level_num);</title></rect>
<rect width="12" height="12" x="555" y="30" class="decompiled"><title>void __cdecl Misc_InitCinematicRooms(void);</title></rect>
<rect width="12" height="12" x="570" y="30" class="decompiled"><title>int32_t __cdecl Game_Cutscene_Control(int32_t nframes);</title></rect>
<rect width="12" height="12" x="585" y="30" class="decompiled"><title>void __cdecl Camera_UpdateCutscene(void);</title></rect>
<rect width="12" height="12" x="600" y="30" class="decompiled"><title>int32_t __cdecl Room_FindByPos(int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="12" height="12" x="615" y="30" class="decompiled"><title>void __cdecl CutscenePlayer_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="630" y="30" class="decompiled"><title>void __cdecl Lara_Control_Cutscene(int16_t item_num);</title></rect>
<rect width="12" height="12" x="645" y="30" class="decompiled"><title>void __cdecl CutscenePlayer1_Initialise(int16_t item_num);</title></rect>
<rect width="12" height="12" x="660" y="30" class="decompiled"><title>void __cdecl CutscenePlayerGen_Initialise(int16_t item_num);</title></rect>
<rect width="12" height="12" x="675" y="30" class="decompiled"><title>void __cdecl Camera_LoadCutsceneFrame(void);</title></rect>
<rect width="12" height="12" x="690" y="30" class="decompiled"><title>void __cdecl Collide_GetCollisionInfo(COLL_INFO *coll, int32_t xpos, int32_t ypos, int32_t zpos, int16_t room_num, int32_t obj_height);</title></rect>
<rect width="12" height="12" x="705" y="30" class="decompiled"><title>int32_t __cdecl Room_FindGridShift(int32_t src, int32_t dst);</title></rect>
<rect width="12" height="12" x="720" y="30" class="decompiled"><title>int32_t __cdecl Collide_CollideStaticObjects(COLL_INFO *coll, int32_t x, int32_t y, int32_t z, int16_t room_num, int32_t height);</title></rect>
<rect width="12" height="12" x="735" y="30" class="decompiled"><title>void __cdecl Room_GetNearbyRooms(int32_t x, int32_t y, int32_t z, int32_t r, int32_t h, int16_t room_num);</title></rect>
<rect width="12" height="12" x="0" y="45" class="decompiled"><title>void __cdecl Room_GetNewRoom(int32_t x, int32_t y, int32_t z, int16_t room_num);</title></rect>
<rect width="12" height="12" x="15" y="45" class="decompiled"><title>void __cdecl Item_ShiftCol(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="30" y="45" class="decompiled"><title>void __cdecl Item_UpdateRoom(ITEM *item, int32_t height);</title></rect>
<rect width="12" height="12" x="45" y="45" class="decompiled"><title>int16_t __cdecl Room_GetTiltType(const SECTOR *sector, int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="12" height="12" x="60" y="45" class="decompiled"><title>void __cdecl Lara_BaddieCollision(ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="75" y="45" class="decompiled"><title>void __cdecl Lara_TakeHit(ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="90" y="45" class="decompiled"><title>void __cdecl Creature_Collision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="105" y="45" class="decompiled"><title>void __cdecl Object_Collision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="120" y="45" class="decompiled"><title>void __cdecl Door_Collision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="135" y="45" class="decompiled"><title>void __cdecl Object_Collision_Trap(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="150" y="45" class="decompiled"><title>void __cdecl Lara_Push(ITEM *item, ITEM *lara_item, COLL_INFO *coll, int32_t spaz_on, int32_t big_push);</title></rect>
<rect width="12" height="12" x="165" y="45" class="decompiled"><title>int32_t __cdecl Item_TestBoundsCollide(const ITEM *src_item, const ITEM *dst_item, int32_t radius);</title></rect>
<rect width="12" height="12" x="180" y="45" class="decompiled"><title>int32_t __cdecl Item_TestPosition(int16_t *bounds, ITEM *src_item, ITEM *dst_item);</title></rect>
<rect width="12" height="12" x="195" y="45" class="decompiled"><title>void __cdecl Item_AlignPosition(XYZ_32 *vec, ITEM *src_item, ITEM *dst_item);</title></rect>
<rect width="12" height="12" x="210" y="45" class="decompiled"><title>int32_t __cdecl Lara_MovePosition(XYZ_32 *vec, ITEM *item, ITEM *lara_item);</title></rect>
<rect width="12" height="12" x="225" y="45" class="decompiled"><title>int32_t __cdecl Misc_Move3DPosTo3DPos(PHD_3DPOS *src_pos, const PHD_3DPOS *dest_pos, int32_t velocity, PHD_ANGLE ang_add);</title></rect>
<rect width="12" height="12" x="240" y="45" class="decompiled"><title>int32_t __cdecl Game_Control(int32_t nframes, int32_t demo_mode);</title></rect>
<rect width="12" height="12" x="255" y="45" class="decompiled"><title>void __cdecl Item_Animate(ITEM *item);</title></rect>
<rect width="12" height="12" x="270" y="45" class="decompiled"><title>int32_t __cdecl Item_GetAnimChange(ITEM *item, const ANIM *anim);</title></rect>
<rect width="12" height="12" x="285" y="45" class="decompiled"><title>void __cdecl Item_Translate(ITEM *item, int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="12" height="12" x="300" y="45" class="decompiled"><title>SECTOR *__cdecl Room_GetSector(int32_t x, int32_t y, int32_t z, int16_t *room_num);</title></rect>
<rect width="12" height="12" x="315" y="45" class="decompiled"><title>int32_t __cdecl Room_GetWaterHeight(int32_t x, int32_t y, int32_t z, int16_t room_num);</title></rect>
<rect width="12" height="12" x="330" y="45" class="decompiled"><title>int32_t __cdecl Room_GetHeight(const SECTOR *sector, int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="12" height="12" x="345" y="45" class="decompiled"><title>void __cdecl Camera_RefreshFromTrigger(int16_t type, const int16_t *data);</title></rect>
<rect width="12" height="12" x="360" y="45" class="decompiled"><title>void __cdecl Room_TestTriggers(int16_t *data, int32_t heavy);</title></rect>
<rect width="12" height="12" x="375" y="45" class="decompiled"><title>int32_t __cdecl Item_IsTriggerActive(ITEM *item);</title></rect>
<rect width="12" height="12" x="390" y="45" class="decompiled"><title>int32_t __cdecl Room_GetCeiling(const SECTOR *sector, int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="12" height="12" x="405" y="45" class="decompiled"><title>int16_t __cdecl Room_GetDoor(const SECTOR *sector);</title></rect>
<rect width="12" height="12" x="420" y="45" class="decompiled"><title>int32_t __cdecl LOS_Check(const GAME_VECTOR *start, GAME_VECTOR *target);</title></rect>
<rect width="12" height="12" x="435" y="45" class="decompiled"><title>int32_t __cdecl LOS_CheckZ(const GAME_VECTOR *start, GAME_VECTOR *target);</title></rect>
<rect width="12" height="12" x="450" y="45" class="decompiled"><title>int32_t __cdecl LOS_CheckX(const GAME_VECTOR *start, GAME_VECTOR *target);</title></rect>
<rect width="12" height="12" x="465" y="45" class="decompiled"><title>int32_t __cdecl LOS_ClipTarget(const GAME_VECTOR *start, GAME_VECTOR *target, const SECTOR *sector);</title></rect>
<rect width="12" height="12" x="480" y="45" class="decompiled"><title>int32_t __cdecl LOS_CheckSmashable(const GAME_VECTOR *start, GAME_VECTOR *target);</title></rect>
<rect width="12" height="12" x="495" y="45" class="decompiled"><title>void __cdecl Room_FlipMap(void);</title></rect>
<rect width="12" height="12" x="510" y="45" class="decompiled"><title>void __cdecl Room_RemoveFlipItems(ROOM *r);</title></rect>
<rect width="12" height="12" x="525" y="45" class="decompiled"><title>void __cdecl Room_AddFlipItems(ROOM *r);</title></rect>
<rect width="12" height="12" x="540" y="45" class="decompiled"><title>void __cdecl Room_TriggerMusicTrack(int16_t value, int16_t flags, int16_t type);</title></rect>
<rect width="12" height="12" x="555" y="45" class="decompiled"><title>void __cdecl Room_TriggerMusicTrackImpl(int16_t value, int16_t flags, int16_t type);</title></rect>
<rect width="12" height="12" x="570" y="45" class="decompiled"><title>int32_t __cdecl Demo_Control(int32_t level_num);</title></rect>
<rect width="12" height="12" x="585" y="45" class="decompiled"><title>int32_t __cdecl Demo_Start(int32_t level_num);</title></rect>
<rect width="12" height="12" x="600" y="45" class="decompiled"><title>void __cdecl Demo_LoadLaraPos(void);</title></rect>
<rect width="12" height="12" x="615" y="45" class="decompiled"><title>void __cdecl Demo_GetInput(void);</title></rect>
<rect width="12" height="12" x="630" y="45" class="known"><title>int16_t __cdecl Diver_Harpoon(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE y_rot, int16_t room_num);</title></rect>
<rect width="12" height="12" x="645" y="45" class="known"><title>int32_t __cdecl Diver_GetWaterSurface(int32_t x, int32_t y, int32_t z, int16_t room_num);</title></rect>
<rect width="12" height="12" x="660" y="45" class="decompiled"><title>void __cdecl Diver_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="675" y="45" class="known"><title>void __cdecl Dog_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="690" y="45" class="known"><title>void __cdecl Tiger_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="705" y="45" class="decompiled"><title>void __cdecl Twinkle_Control(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="720" y="45" class="decompiled"><title>void __cdecl Effect_CreateBartoliLight(int16_t item_num);</title></rect>
<rect width="12" height="12" x="735" y="45" class="decompiled"><title>int16_t __cdecl Effect_MissileFlame(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE yrot, int16_t room_num);</title></rect>
<rect width="12" height="12" x="0" y="60" class="decompiled"><title>void __cdecl Dragon_Collision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="15" y="60" class="decompiled"><title>void __cdecl Dragon_Bones(int16_t item_num);</title></rect>
<rect width="12" height="12" x="30" y="60" class="decompiled"><title>void __cdecl Dragon_Control(int16_t back_num);</title></rect>
<rect width="12" height="12" x="45" y="60" class="decompiled"><title>void __cdecl Bartoli_Initialise(int16_t item_num);</title></rect>
<rect width="12" height="12" x="60" y="60" class="decompiled"><title>void __cdecl Bartoli_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="75" y="60" class="known"><title>void __cdecl TRex_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="90" y="60" class="decompiled"><title>int32_t __cdecl Game_DrawCinematic(void);</title></rect>
<rect width="12" height="12" x="105" y="60" class="decompiled"><title>int32_t __cdecl Game_Draw(void);</title></rect>
<rect width="12" height="12" x="120" y="60" class="decompiled"><title>void __cdecl Room_DrawAllRooms(int16_t current_room);</title></rect>
<rect width="12" height="12" x="135" y="60" class="decompiled"><title>void __cdecl Room_GetBounds(void);</title></rect>
<rect width="12" height="12" x="150" y="60" class="decompiled"><title>void __cdecl Room_SetBounds(const int16_t *objptr, int32_t room_num, ROOM *parent);</title></rect>
<rect width="12" height="12" x="165" y="60" class="decompiled"><title>void __cdecl Room_Clip(ROOM *r);</title></rect>
<rect width="12" height="12" x="180" y="60" class="decompiled"><title>void __cdecl Room_DrawSingleRoomGeometry(int16_t room_num);</title></rect>
<rect width="12" height="12" x="195" y="60" class="decompiled"><title>void __cdecl Room_DrawSingleRoomObjects(int16_t room_num);</title></rect>
<rect width="12" height="12" x="210" y="60" class="decompiled"><title>void __cdecl Effect_Draw(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="225" y="60" class="known"><title>void __cdecl Object_DrawSpriteItem(const ITEM *item);</title></rect>
<rect width="12" height="12" x="240" y="60" class="known"><title>void __cdecl Object_DrawAnimatingItem(const ITEM *item);</title></rect>
<rect width="12" height="12" x="255" y="60" class="decompiled"><title>void __cdecl Lara_Draw(const ITEM *item);</title></rect>
<rect width="12" height="12" x="270" y="60" class="decompiled"><title>void __cdecl Lara_Draw_I(const ITEM *item, const FRAME_INFO *frame1, const FRAME_INFO *frame2, int32_t frac, int32_t rate);</title></rect>
<rect width="12" height="12" x="285" y="60" class="decompiled"><title>void __cdecl Matrix_InitInterpolate(int32_t frac, int32_t rate);</title></rect>
<rect width="12" height="12" x="300" y="60" class="decompiled"><title>void __cdecl Matrix_Pop_I(void);</title></rect>
<rect width="12" height="12" x="315" y="60" class="decompiled"><title>void __cdecl Matrix_Push_I(void);</title></rect>
<rect width="12" height="12" x="330" y="60" class="decompiled"><title>void __cdecl Matrix_RotY_I(int16_t ang);</title></rect>
<rect width="12" height="12" x="345" y="60" class="decompiled"><title>void __cdecl Matrix_RotX_I(int16_t ang);</title></rect>
<rect width="12" height="12" x="360" y="60" class="decompiled"><title>void __cdecl Matrix_RotZ_I(int16_t ang);</title></rect>
<rect width="12" height="12" x="375" y="60" class="decompiled"><title>void __cdecl Matrix_TranslateRel_I(int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="12" height="12" x="390" y="60" class="decompiled"><title>void __cdecl Matrix_TranslateRel_ID(int32_t x, int32_t y, int32_t z, int32_t x2, int32_t y2, int32_t z2);</title></rect>
<rect width="12" height="12" x="405" y="60" class="decompiled"><title>void __cdecl Matrix_RotYXZ_I(int16_t y, int16_t x, int16_t z);</title></rect>
<rect width="12" height="12" x="420" y="60" class="decompiled"><title>void __cdecl Matrix_RotYXZsuperpack_I(const int16_t **pprot1, const int16_t **pprot2, int32_t skip);</title></rect>
<rect width="12" height="12" x="435" y="60" class="decompiled"><title>void __cdecl Matrix_RotYXZsuperpack(const int16_t **pprot, int32_t skip);</title></rect>
<rect width="12" height="12" x="450" y="60" class="decompiled"><title>void __cdecl Output_InsertPolygons_I(int16_t *ptr, int32_t clip);</title></rect>
<rect width="12" height="12" x="465" y="60" class="decompiled"><title>void __cdecl Matrix_Interpolate(void);</title></rect>
<rect width="12" height="12" x="480" y="60" class="decompiled"><title>void __cdecl Matrix_InterpolateArm(void);</title></rect>
<rect width="12" height="12" x="495" y="60" class="known"><title>void __cdecl Gun_DrawFlash(LARA_GUN_TYPE weapon_type, int32_t clip);</title></rect>
<rect width="12" height="12" x="510" y="60" class="known"><title>void __cdecl Output_CalculateObjectLighting(const ITEM *item, const FRAME_INFO *frame);</title></rect>
<rect width="12" height="12" x="525" y="60" class="decompiled"><title>int32_t __cdecl Item_GetFrames(const ITEM *item, FRAME_INFO *frmptr[], int32_t *rate);</title></rect>
<rect width="12" height="12" x="540" y="60" class="decompiled"><title>BOUNDS_16 *__cdecl Item_GetBoundsAccurate(const ITEM *item);</title></rect>
<rect width="12" height="12" x="555" y="60" class="decompiled"><title>FRAME_INFO *__cdecl Item_GetBestFrame(const ITEM *item);</title></rect>
<rect width="12" height="12" x="570" y="60" class="known"><title>void __cdecl AddDynamicLight(int32_t x, int32_t y, int32_t z, int32_t intensity, int32_t falloff);</title></rect>
<rect width="12" height="12" x="585" y="60" class="known"><title>void __cdecl BigEel_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="600" y="60" class="known"><title>void __cdecl Eel_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="615" y="60" class="decompiled"><title>int32_t __cdecl Lara_IsNearItem(PHD_3DPOS *pos, int32_t distance);</title></rect>
<rect width="12" height="12" x="630" y="60" class="decompiled"><title>void __cdecl Sound_UpdateEffects(void);</title></rect>
<rect width="12" height="12" x="645" y="60" class="known"><title>int16_t __cdecl DoBloodSplat(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE direction, int16_t room_num);</title></rect>
<rect width="12" height="12" x="660" y="60" class="known"><title>void __cdecl DoLotsOfBlood(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE direction, int16_t room_num, int32_t num);</title></rect>
<rect width="12" height="12" x="675" y="60" class="known"><title>void __cdecl ControlBlood1(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="690" y="60" class="known"><title>void __cdecl ControlExplosion1(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="705" y="60" class="known"><title>void __cdecl Richochet(GAME_VECTOR *pos);</title></rect>
<rect width="12" height="12" x="720" y="60" class="known"><title>void __cdecl ControlRichochet1(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="735" y="60" class="known"><title>void __cdecl CreateBubble(PHD_3DPOS *pos, int16_t room_num);</title></rect>
<rect width="12" height="12" x="0" y="75" class="known"><title>void __cdecl LaraBubbles(ITEM *item);</title></rect>
<rect width="12" height="12" x="15" y="75" class="known"><title>void __cdecl ControlBubble1(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="30" y="75" class="known"><title>void __cdecl Splash(ITEM *item);</title></rect>
<rect width="12" height="12" x="45" y="75" class="known"><title>void __cdecl ControlSplash1(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="60" y="75" class="known"><title>void __cdecl ControlWaterSprite(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="75" y="75" class="known"><title>void __cdecl ControlSnowSprite(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="90" y="75" class="known"><title>void __cdecl ControlHotLiquid(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="105" y="75" class="known"><title>void __cdecl WaterFall(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="120" y="75" class="known"><title>void __cdecl finish_level_effect(ITEM *item);</title></rect>
<rect width="12" height="12" x="135" y="75" class="known"><title>void __cdecl turn180_effect(ITEM *item);</title></rect>
<rect width="12" height="12" x="150" y="75" class="known"><title>void __cdecl floor_shake_effect(ITEM *item);</title></rect>
<rect width="12" height="12" x="165" y="75" class="known"><title>void __cdecl lara_normal_effect(ITEM *item);</title></rect>
<rect width="12" height="12" x="180" y="75" class="known"><title>void __cdecl BoilerFX(ITEM *item);</title></rect>
<rect width="12" height="12" x="195" y="75" class="known"><title>void __cdecl FloodFX(ITEM *item);</title></rect>
<rect width="12" height="12" x="210" y="75" class="known"><title>void __cdecl RubbleFX(ITEM *item);</title></rect>
<rect width="12" height="12" x="225" y="75" class="known"><title>void __cdecl ChandelierFX(ITEM *item);</title></rect>
<rect width="12" height="12" x="240" y="75" class="known"><title>void __cdecl ExplosionFX(ITEM *item);</title></rect>
<rect width="12" height="12" x="255" y="75" class="known"><title>void __cdecl PistonFX(ITEM *item);</title></rect>
<rect width="12" height="12" x="270" y="75" class="known"><title>void __cdecl CurtainFX(ITEM *item);</title></rect>
<rect width="12" height="12" x="285" y="75" class="known"><title>void __cdecl StatueFX(ITEM *item);</title></rect>
<rect width="12" height="12" x="300" y="75" class="known"><title>void __cdecl SetChangeFX(ITEM *item);</title></rect>
<rect width="12" height="12" x="315" y="75" class="known"><title>void __cdecl ControlDingDong(int16_t item_num);</title></rect>
<rect width="12" height="12" x="330" y="75" class="known"><title>void __cdecl ControlLaraAlarm(int16_t item_num);</title></rect>
<rect width="12" height="12" x="345" y="75" class="known"><title>void __cdecl ControlAlarmSound(int16_t item_num);</title></rect>
<rect width="12" height="12" x="360" y="75" class="known"><title>void __cdecl ControlBirdTweeter(int16_t item_num);</title></rect>
<rect width="12" height="12" x="375" y="75" class="known"><title>void __cdecl DoChimeSound(ITEM *item);</title></rect>
<rect width="12" height="12" x="390" y="75" class="known"><title>void __cdecl ControlClockChimes(int16_t item_num);</title></rect>
<rect width="12" height="12" x="405" y="75" class="known"><title>void __cdecl SphereOfDoomCollision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="420" y="75" class="known"><title>void __cdecl SphereOfDoom(int16_t item_num);</title></rect>
<rect width="12" height="12" x="435" y="75" class="known"><title>void __cdecl DrawSphereOfDoom(ITEM *item);</title></rect>
<rect width="12" height="12" x="450" y="75" class="known"><title>void __cdecl lara_hands_free(ITEM *item);</title></rect>
<rect width="12" height="12" x="465" y="75" class="known"><title>void __cdecl flip_map_effect(ITEM *item);</title></rect>
<rect width="12" height="12" x="480" y="75" class="known"><title>void __cdecl draw_right_gun(ITEM *item);</title></rect>
<rect width="12" height="12" x="495" y="75" class="known"><title>void __cdecl draw_left_gun(ITEM *item);</title></rect>
<rect width="12" height="12" x="510" y="75" class="known"><title>void __cdecl swap_meshes_with_meshswap1(ITEM *item);</title></rect>
<rect width="12" height="12" x="525" y="75" class="known"><title>void __cdecl swap_meshes_with_meshswap2(ITEM *item);</title></rect>
<rect width="12" height="12" x="540" y="75" class="known"><title>void __cdecl swap_meshes_with_meshswap3(ITEM *item);</title></rect>
<rect width="12" height="12" x="555" y="75" class="known"><title>void __cdecl invisibility_on(ITEM *item);</title></rect>
<rect width="12" height="12" x="570" y="75" class="known"><title>void __cdecl invisibility_off(ITEM *item);</title></rect>
<rect width="12" height="12" x="585" y="75" class="known"><title>void __cdecl dynamic_light_on(ITEM *item);</title></rect>
<rect width="12" height="12" x="600" y="75" class="known"><title>void __cdecl dynamic_light_off(ITEM *item);</title></rect>
<rect width="12" height="12" x="615" y="75" class="known"><title>void __cdecl reset_hair(ITEM *item);</title></rect>
<rect width="12" height="12" x="630" y="75" class="known"><title>void __cdecl AssaultStart(ITEM *item);</title></rect>
<rect width="12" height="12" x="645" y="75" class="known"><title>void __cdecl AssaultStop(ITEM *item);</title></rect>
<rect width="12" height="12" x="660" y="75" class="known"><title>void __cdecl AssaultReset(ITEM *item);</title></rect>
<rect width="12" height="12" x="675" y="75" class="known"><title>void __cdecl AssaultFinished(ITEM *item);</title></rect>
<rect width="12" height="12" x="690" y="75" class="known"><title>int16_t __cdecl Knife(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE yrot, int16_t room_num);</title></rect>
<rect width="12" height="12" x="705" y="75" class="known"><title>void __cdecl Cultist2_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="720" y="75" class="known"><title>void __cdecl Monk_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="735" y="75" class="known"><title>void __cdecl Worker3_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="0" y="90" class="known"><title>void __cdecl XianKnight_Draw(const ITEM *item);</title></rect>
<rect width="12" height="12" x="15" y="90" class="known"><title>void __cdecl XianDamage(ITEM *item, CREATURE *xian, int32_t damage);</title></rect>
<rect width="12" height="12" x="30" y="90" class="known"><title>void __cdecl XianKnight_Initialise(int16_t item_num);</title></rect>
<rect width="12" height="12" x="45" y="90" class="known"><title>void __cdecl XianSpearman_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="60" y="90" class="known"><title>void __cdecl WarriorSparkleTrail(ITEM *item);</title></rect>
<rect width="12" height="12" x="75" y="90" class="known"><title>void __cdecl XianKnight_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="90" y="90" class="decompiled"><title>int32_t __cdecl GF_LoadScriptFile(const char *fname);</title></rect>
<rect width="12" height="12" x="105" y="90" class="decompiled"><title>int32_t __cdecl GF_DoFrontendSequence(void);</title></rect>
<rect width="12" height="12" x="120" y="90" class="decompiled"><title>int32_t __cdecl GF_DoLevelSequence(int32_t level, GAMEFLOW_LEVEL_TYPE type);</title></rect>
<rect width="12" height="12" x="135" y="90" class="decompiled"><title>int32_t __cdecl GF_InterpretSequence(int16_t *ptr, GAMEFLOW_LEVEL_TYPE type, int32_t seq_type);</title></rect>
<rect width="12" height="12" x="150" y="90" class="decompiled"><title>void __cdecl GF_ModifyInventory(int32_t level, int32_t type);</title></rect>
<rect width="12" height="12" x="165" y="90" class="known"><title>void __cdecl InitialiseHair(void);</title></rect>
<rect width="12" height="12" x="180" y="90" class="known"><title>void __cdecl HairControl(int32_t in_cutscene);</title></rect>
<rect width="12" height="12" x="195" y="90" class="known"><title>void __cdecl DrawHair(void);</title></rect>
<rect width="12" height="12" x="210" y="90" class="decompiled"><title>BOOL __cdecl Overlay_FlashCounter(void);</title></rect>
<rect width="12" height="12" x="225" y="90" class="decompiled"><title>void __cdecl Overlay_DrawAssaultTimer(void);</title></rect>
<rect width="12" height="12" x="240" y="90" class="decompiled"><title>void __cdecl Overlay_DrawGameInfo(bool pickup_state);</title></rect>
<rect width="12" height="12" x="255" y="90" class="decompiled"><title>void __cdecl Overlay_DrawHealthBar(bool flash_state);</title></rect>
<rect width="12" height="12" x="270" y="90" class="decompiled"><title>void __cdecl Overlay_DrawAirBar(bool flash_state);</title></rect>
<rect width="12" height="12" x="285" y="90" class="decompiled"><title>void __cdecl Overlay_MakeAmmoString(char *string);</title></rect>
<rect width="12" height="12" x="300" y="90" class="decompiled"><title>void __cdecl Overlay_DrawAmmoInfo(void);</title></rect>
<rect width="12" height="12" x="315" y="90" class="decompiled"><title>void __cdecl Overlay_InitialisePickUpDisplay(void);</title></rect>
<rect width="12" height="12" x="330" y="90" class="decompiled"><title>void __cdecl Overlay_DrawPickups(bool pickup_state);</title></rect>
<rect width="12" height="12" x="345" y="90" class="decompiled"><title>void __cdecl Overlay_AddDisplayPickup(GAME_OBJECT_ID object_id);</title></rect>
<rect width="12" height="12" x="360" y="90" class="decompiled"><title>void __cdecl Overlay_DisplayModeInfo(char* string);</title></rect>
<rect width="12" height="12" x="375" y="90" class="decompiled"><title>void __cdecl Overlay_DrawModeInfo(void);</title></rect>
<rect width="12" height="12" x="390" y="90" class="decompiled"><title>int32_t __cdecl Inv_Display(int32_t inventory_mode);</title></rect>
<rect width="12" height="12" x="405" y="90" class="decompiled"><title>void __cdecl Inv_Construct(void);</title></rect>
<rect width="12" height="12" x="420" y="90" class="decompiled"><title>void __cdecl Inv_SelectMeshes(INVENTORY_ITEM *inv_item);</title></rect>
<rect width="12" height="12" x="435" y="90" class="decompiled"><title>int32_t __cdecl Inv_AnimateInventoryItem(INVENTORY_ITEM *inv_item);</title></rect>
<rect width="12" height="12" x="450" y="90" class="decompiled"><title>void __cdecl Inv_DrawInventoryItem(INVENTORY_ITEM *inv_item);</title></rect>
<rect width="12" height="12" x="465" y="90" class="decompiled"><title>int32_t __cdecl Input_GetDebounced(int32_t input);</title></rect>
<rect width="12" height="12" x="480" y="90" class="decompiled"><title>void __cdecl Inv_DoInventoryPicture(void);</title></rect>
<rect width="12" height="12" x="495" y="90" class="decompiled"><title>void __cdecl Inv_DoInventoryBackground(void);</title></rect>
<rect width="12" height="12" x="510" y="90" class="decompiled"><title>void __cdecl Inv_InitColors(void);</title></rect>
<rect width="12" height="12" x="525" y="90" class="decompiled"><title>void __cdecl Inv_RingIsOpen(RING_INFO *ring);</title></rect>
<rect width="12" height="12" x="540" y="90" class="decompiled"><title>void __cdecl Inv_RingIsNotOpen(RING_INFO *ring);</title></rect>
<rect width="12" height="12" x="555" y="90" class="decompiled"><title>void __cdecl Inv_RingNotActive(INVENTORY_ITEM *inv_item);</title></rect>
<rect width="12" height="12" x="570" y="90" class="decompiled"><title>void __cdecl Inv_RingActive(void);</title></rect>
<rect width="12" height="12" x="585" y="90" class="decompiled"><title>int32_t __cdecl Inv_AddItem(GAME_OBJECT_ID object_id);</title></rect>
<rect width="12" height="12" x="600" y="90" class="decompiled"><title>void __cdecl Inv_InsertItem(INVENTORY_ITEM *inv_item);</title></rect>
<rect width="12" height="12" x="615" y="90" class="decompiled"><title>int32_t __cdecl Inv_RequestItem(GAME_OBJECT_ID object_id);</title></rect>
<rect width="12" height="12" x="630" y="90" class="decompiled"><title>void __cdecl Inv_RemoveAllItems(void);</title></rect>
<rect width="12" height="12" x="645" y="90" class="decompiled"><title>int32_t __cdecl Inv_RemoveItem(GAME_OBJECT_ID object_id);</title></rect>
<rect width="12" height="12" x="660" y="90" class="decompiled"><title>int32_t __cdecl Inv_GetItemOption(GAME_OBJECT_ID object_id);</title></rect>
<rect width="12" height="12" x="675" y="90" class="decompiled"><title>void __cdecl Inv_RemoveInventoryText(void);</title></rect>
<rect width="12" height="12" x="690" y="90" class="decompiled"><title>void __cdecl Inv_Ring_Init(RING_INFO *ring, int16_t type, INVENTORY_ITEM **list, int16_t qty, int16_t current, IMOTION_INFO *imo);</title></rect>
<rect width="12" height="12" x="705" y="90" class="decompiled"><title>void __cdecl Inv_Ring_GetView(RING_INFO *ring, PHD_3DPOS *viewer);</title></rect>
<rect width="12" height="12" x="720" y="90" class="decompiled"><title>void __cdecl Inv_Ring_Light(RING_INFO *ring);</title></rect>
<rect width="12" height="12" x="735" y="90" class="decompiled"><title>void __cdecl Inv_Ring_CalcAdders(RING_INFO *ring, int16_t rotation_duration);</title></rect>
<rect width="12" height="12" x="0" y="105" class="decompiled"><title>void __cdecl Inv_Ring_DoMotions(RING_INFO *ring);</title></rect>
<rect width="12" height="12" x="15" y="105" class="decompiled"><title>void __cdecl Inv_Ring_RotateLeft(RING_INFO *ring);</title></rect>
<rect width="12" height="12" x="30" y="105" class="decompiled"><title>void __cdecl Inv_Ring_RotateRight(RING_INFO *ring);</title></rect>
<rect width="12" height="12" x="45" y="105" class="decompiled"><title>void __cdecl Inv_Ring_MotionInit(RING_INFO *ring, int16_t frames, int16_t status, int16_t status_target);</title></rect>
<rect width="12" height="12" x="60" y="105" class="decompiled"><title>void __cdecl Inv_Ring_MotionSetup(RING_INFO *ring, int16_t status, int16_t status_target, int16_t frames);</title></rect>
<rect width="12" height="12" x="75" y="105" class="decompiled"><title>void __cdecl Inv_Ring_MotionRadius(RING_INFO *ring, int16_t target);</title></rect>
<rect width="12" height="12" x="90" y="105" class="decompiled"><title>void __cdecl Inv_Ring_MotionRotation(RING_INFO *ring, int16_t rotation, int16_t target);</title></rect>
<rect width="12" height="12" x="105" y="105" class="decompiled"><title>void __cdecl Inv_Ring_MotionCameraPos(RING_INFO *ring, int16_t target);</title></rect>
<rect width="12" height="12" x="120" y="105" class="decompiled"><title>void __cdecl Inv_Ring_MotionCameraPitch(RING_INFO *ring, int16_t target);</title></rect>
<rect width="12" height="12" x="135" y="105" class="decompiled"><title>void __cdecl Inv_Ring_MotionItemSelect(RING_INFO *ring, INVENTORY_ITEM *inv_item);</title></rect>
<rect width="12" height="12" x="150" y="105" class="decompiled"><title>void __cdecl Inv_Ring_MotionItemDeselect(RING_INFO *ring, INVENTORY_ITEM *inv_item);</title></rect>
<rect width="12" height="12" x="165" y="105" class="decompiled"><title>void __cdecl Requester_Init(REQUEST_INFO *req);</title></rect>
<rect width="12" height="12" x="180" y="105" class="decompiled"><title>void __cdecl Requester_Shutdown(REQUEST_INFO *req);</title></rect>
<rect width="12" height="12" x="195" y="105" class="decompiled"><title>void __cdecl Requester_Item_CenterAlign(REQUEST_INFO *req, TEXTSTRING *txt);</title></rect>
<rect width="12" height="12" x="210" y="105" class="decompiled"><title>void __cdecl Requester_Item_LeftAlign(REQUEST_INFO *req, TEXTSTRING *txt);</title></rect>
<rect width="12" height="12" x="225" y="105" class="decompiled"><title>void __cdecl Requester_Item_RightAlign(REQUEST_INFO *req, TEXTSTRING *txt);</title></rect>
<rect width="12" height="12" x="240" y="105" class="decompiled"><title>int32_t __cdecl Requester_Display(REQUEST_INFO *req, int32_t des, int32_t backgrounds);</title></rect>
<rect width="12" height="12" x="255" y="105" class="decompiled"><title>void __cdecl Requester_SetHeading(REQUEST_INFO *req, char *text1, uint32_t flags1, char *text2, uint32_t flags2);</title></rect>
<rect width="12" height="12" x="270" y="105" class="decompiled"><title>void __cdecl Requester_RemoveAllItems(REQUEST_INFO *req);</title></rect>
<rect width="12" height="12" x="285" y="105" class="decompiled"><title>void __cdecl Requester_ChangeItem(REQUEST_INFO *req, int32_t item, const char *text1, uint32_t flags1, const char *text2, uint32_t flags2);</title></rect>
<rect width="12" height="12" x="300" y="105" class="decompiled"><title>void __cdecl Requester_AddItem(REQUEST_INFO *req, const char *text1, uint32_t flags1, const char *text2, uint32_t flags2);</title></rect>
<rect width="12" height="12" x="315" y="105" class="decompiled"><title>void __cdecl Requester_SetSize(REQUEST_INFO *req, int32_t maxlines, int32_t ypos);</title></rect>
<rect width="12" height="12" x="330" y="105" class="decompiled"><title>int32_t __cdecl AddAssaultTime(uint32_t time);</title></rect>
<rect width="12" height="12" x="345" y="105" class="decompiled"><title>void __cdecl ShowGymStatsText(char *time_str, int32_t type);</title></rect>
<rect width="12" height="12" x="360" y="105" class="decompiled"><title>void __cdecl ShowStatsText(char *time_str, int32_t type);</title></rect>
<rect width="12" height="12" x="375" y="105" class="decompiled"><title>void __cdecl ShowEndStatsText(void);</title></rect>
<rect width="12" height="12" x="390" y="105" class="decompiled"><title>void __cdecl Item_InitialiseArray(int32_t num_items);</title></rect>
<rect width="12" height="12" x="405" y="105" class="decompiled"><title>void __cdecl Item_Kill(int16_t item_num);</title></rect>
<rect width="12" height="12" x="420" y="105" class="decompiled"><title>int16_t __cdecl Item_Create(void);</title></rect>
<rect width="12" height="12" x="435" y="105" class="decompiled"><title>void __cdecl Item_Initialise(int16_t item_num);</title></rect>
<rect width="12" height="12" x="450" y="105" class="decompiled"><title>void __cdecl Item_RemoveActive(int16_t item_num);</title></rect>
<rect width="12" height="12" x="465" y="105" class="decompiled"><title>void __cdecl Item_RemoveDrawn(int16_t item_num);</title></rect>
<rect width="12" height="12" x="480" y="105" class="decompiled"><title>void __cdecl Item_AddActive(int16_t item_num);</title></rect>
<rect width="12" height="12" x="495" y="105" class="decompiled"><title>void __cdecl Item_NewRoom(int16_t item_num, int16_t room_num);</title></rect>
<rect width="12" height="12" x="510" y="105" class="decompiled"><title>int32_t __cdecl Item_GlobalReplace(GAME_OBJECT_ID src_object_id, GAME_OBJECT_ID dst_object_id);</title></rect>
<rect width="12" height="12" x="525" y="105" class="decompiled"><title>void __cdecl Effect_InitialiseArray(void);</title></rect>
<rect width="12" height="12" x="540" y="105" class="decompiled"><title>int16_t __cdecl Effect_Create(int16_t room_num);</title></rect>
<rect width="12" height="12" x="555" y="105" class="decompiled"><title>void __cdecl Effect_Kill(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="570" y="105" class="decompiled"><title>void __cdecl Effect_NewRoom(int16_t fx_num, int16_t room_num);</title></rect>
<rect width="12" height="12" x="585" y="105" class="decompiled"><title>void __cdecl Item_ClearKilled(void);</title></rect>
<rect width="12" height="12" x="600" y="105" class="decompiled"><title>void __cdecl Lara_HandleAboveWater(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="615" y="105" class="decompiled"><title>void __cdecl Lara_LookUpDown(void);</title></rect>
<rect width="12" height="12" x="630" y="105" class="decompiled"><title>void __cdecl Lara_LookLeftRight(void);</title></rect>
<rect width="12" height="12" x="645" y="105" class="decompiled"><title>void __cdecl Lara_ResetLook(void);</title></rect>
<rect width="12" height="12" x="660" y="105" class="decompiled"><title>void __cdecl Lara_State_Walk(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="675" y="105" class="decompiled"><title>void __cdecl Lara_State_Run(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="690" y="105" class="decompiled"><title>void __cdecl Lara_State_Stop(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="705" y="105" class="decompiled"><title>void __cdecl Lara_State_ForwardJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="720" y="105" class="decompiled"><title>void __cdecl Lara_State_FastBack(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="735" y="105" class="decompiled"><title>void __cdecl Lara_State_TurnRight(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="0" y="120" class="decompiled"><title>void __cdecl Lara_State_TurnLeft(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="15" y="120" class="decompiled"><title>void __cdecl Lara_State_Death(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="30" y="120" class="decompiled"><title>void __cdecl Lara_State_FastFall(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="45" y="120" class="decompiled"><title>void __cdecl Lara_State_Hang(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="60" y="120" class="decompiled"><title>void __cdecl Lara_State_Reach(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="75" y="120" class="decompiled"><title>void __cdecl Lara_State_Splat(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="90" y="120" class="decompiled"><title>void __cdecl Lara_State_Compress(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="105" y="120" class="decompiled"><title>void __cdecl Lara_State_Back(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="120" y="120" class="decompiled"><title>void __cdecl Lara_State_Null(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="135" y="120" class="decompiled"><title>void __cdecl Lara_State_FastTurn(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="150" y="120" class="decompiled"><title>void __cdecl Lara_State_StepRight(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="165" y="120" class="decompiled"><title>void __cdecl Lara_State_StepLeft(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="180" y="120" class="decompiled"><title>void __cdecl Lara_State_Slide(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="195" y="120" class="decompiled"><title>void __cdecl Lara_State_BackJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="210" y="120" class="decompiled"><title>void __cdecl Lara_State_RightJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="225" y="120" class="decompiled"><title>void __cdecl Lara_State_LeftJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="240" y="120" class="decompiled"><title>void __cdecl Lara_State_UpJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="255" y="120" class="decompiled"><title>void __cdecl Lara_State_Fallback(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="270" y="120" class="decompiled"><title>void __cdecl Lara_State_HangLeft(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="285" y="120" class="decompiled"><title>void __cdecl Lara_State_HangRight(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="300" y="120" class="decompiled"><title>void __cdecl Lara_State_SlideBack(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="315" y="120" class="decompiled"><title>void __cdecl Lara_State_PushBlock(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="330" y="120" class="decompiled"><title>void __cdecl Lara_State_PPReady(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="345" y="120" class="decompiled"><title>void __cdecl Lara_State_Pickup(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="360" y="120" class="decompiled"><title>void __cdecl Lara_State_PickupFlare(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="375" y="120" class="decompiled"><title>void __cdecl Lara_State_SwitchOn(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="390" y="120" class="decompiled"><title>void __cdecl Lara_State_UseKey(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="405" y="120" class="decompiled"><title>void __cdecl Lara_State_Special(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="420" y="120" class="decompiled"><title>void __cdecl Lara_State_SwanDive(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="435" y="120" class="decompiled"><title>void __cdecl Lara_State_FastDive(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="450" y="120" class="decompiled"><title>void __cdecl Lara_State_WaterOut(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="465" y="120" class="decompiled"><title>void __cdecl Lara_State_Wade(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="480" y="120" class="decompiled"><title>void __cdecl Lara_State_Zipline(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="495" y="120" class="decompiled"><title>void __cdecl Lara_State_Extra_Breath(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="510" y="120" class="decompiled"><title>void __cdecl Lara_State_Extra_YetiKill(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="525" y="120" class="decompiled"><title>void __cdecl Lara_State_Extra_SharkKill(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="540" y="120" class="decompiled"><title>void __cdecl Lara_State_Extra_Airlock(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="555" y="120" class="decompiled"><title>void __cdecl Lara_State_Extra_GongBong(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="570" y="120" class="decompiled"><title>void __cdecl Lara_State_Extra_DinoKill(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="585" y="120" class="decompiled"><title>void __cdecl Lara_State_Extra_PullDagger(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="600" y="120" class="decompiled"><title>void __cdecl Lara_State_Extra_StartAnim(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="615" y="120" class="decompiled"><title>void __cdecl Lara_State_Extra_StartHouse(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="630" y="120" class="decompiled"><title>void __cdecl Lara_State_Extra_FinalAnim(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="645" y="120" class="decompiled"><title>int32_t __cdecl Lara_Fallen(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="660" y="120" class="decompiled"><title>void __cdecl Lara_CollideStop(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="675" y="120" class="decompiled"><title>void __cdecl Lara_Col_Walk(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="690" y="120" class="decompiled"><title>void __cdecl Lara_Col_Run(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="705" y="120" class="decompiled"><title>void __cdecl Lara_Col_Stop(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="720" y="120" class="decompiled"><title>void __cdecl Lara_Col_ForwardJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="735" y="120" class="decompiled"><title>void __cdecl Lara_Col_FastBack(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="0" y="135" class="decompiled"><title>void __cdecl Lara_Col_TurnRight(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="15" y="135" class="decompiled"><title>void __cdecl Lara_Col_TurnLeft(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="30" y="135" class="decompiled"><title>void __cdecl Lara_Col_Death(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="45" y="135" class="decompiled"><title>void __cdecl Lara_Col_FastFall(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="60" y="135" class="decompiled"><title>void __cdecl Lara_Col_Hang(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="75" y="135" class="decompiled"><title>void __cdecl Lara_Col_Reach(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="90" y="135" class="decompiled"><title>void __cdecl Lara_Col_Splat(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="105" y="135" class="decompiled"><title>void __cdecl Lara_Col_Land(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="120" y="135" class="decompiled"><title>void __cdecl Lara_Col_Compress( ITEM *item, COLL_INFO *coll );</title></rect>
<rect width="12" height="12" x="135" y="135" class="decompiled"><title>void __cdecl Lara_Col_Back(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="150" y="135" class="decompiled"><title>void __cdecl Lara_Col_StepRight(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="165" y="135" class="decompiled"><title>void __cdecl Lara_Col_StepLeft(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="180" y="135" class="decompiled"><title>void __cdecl Lara_Col_Slide(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="195" y="135" class="decompiled"><title>void __cdecl Lara_Col_BackJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="210" y="135" class="decompiled"><title>void __cdecl Lara_Col_RightJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="225" y="135" class="decompiled"><title>void __cdecl Lara_Col_LeftJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="240" y="135" class="decompiled"><title>void __cdecl Lara_Col_UpJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="255" y="135" class="decompiled"><title>void __cdecl Lara_Col_Fallback(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="270" y="135" class="decompiled"><title>void __cdecl Lara_Col_HangLeft(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="285" y="135" class="decompiled"><title>void __cdecl Lara_Col_HangRight(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="300" y="135" class="decompiled"><title>void __cdecl Lara_Col_SlideBack(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="315" y="135" class="decompiled"><title>void __cdecl Lara_Col_Null(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="330" y="135" class="decompiled"><title>void __cdecl Lara_Col_Roll(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="345" y="135" class="decompiled"><title>void __cdecl Lara_Col_Roll2(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="360" y="135" class="decompiled"><title>void __cdecl Lara_Col_SwanDive(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="375" y="135" class="decompiled"><title>void __cdecl Lara_Col_FastDive(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="390" y="135" class="decompiled"><title>void __cdecl Lara_Col_Wade(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="405" y="135" class="decompiled"><title>void __cdecl Lara_Col_Default(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="420" y="135" class="decompiled"><title>void __cdecl Lara_Col_Jumper(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="435" y="135" class="decompiled"><title>void __cdecl Lara_GetCollisionInfo(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="450" y="135" class="decompiled"><title>void __cdecl Lara_SlideSlope(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="465" y="135" class="decompiled"><title>int32_t __cdecl Lara_HitCeiling(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="480" y="135" class="decompiled"><title>int32_t __cdecl Lara_DeflectEdge(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="495" y="135" class="decompiled"><title>void __cdecl Lara_DeflectEdgeJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="510" y="135" class="decompiled"><title>void __cdecl Lara_SlideEdgeJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="525" y="135" class="decompiled"><title>int32_t __cdecl Lara_TestWall(ITEM *item, int32_t front, int32_t right, int32_t down);</title></rect>
<rect width="12" height="12" x="540" y="135" class="decompiled"><title>int32_t __cdecl Lara_TestHangOnClimbWall(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="555" y="135" class="decompiled"><title>int32_t __cdecl Lara_TestClimbStance(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="570" y="135" class="decompiled"><title>void __cdecl Lara_HangTest(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="585" y="135" class="decompiled"><title>int32_t __cdecl Lara_TestEdgeCatch(ITEM *item, COLL_INFO *coll, int32_t *edge);</title></rect>
<rect width="12" height="12" x="600" y="135" class="decompiled"><title>int32_t __cdecl Lara_TestHangJumpUp(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="615" y="135" class="decompiled"><title>int32_t __cdecl Lara_TestHangJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="630" y="135" class="decompiled"><title>int32_t __cdecl Lara_TestHangSwingIn(ITEM *item, PHD_ANGLE angle);</title></rect>
<rect width="12" height="12" x="645" y="135" class="decompiled"><title>int32_t __cdecl Lara_TestVault(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="660" y="135" class="decompiled"><title>int32_t __cdecl Lara_TestSlide(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="675" y="135" class="decompiled"><title>int16_t __cdecl Lara_FloorFront(ITEM *item, PHD_ANGLE ang, int32_t dist);</title></rect>
<rect width="12" height="12" x="690" y="135" class="decompiled"><title>int32_t __cdecl Lara_LandedBad(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="705" y="135" class="decompiled"><title>void __cdecl Lara_GetJointAbsPosition(XYZ_32 *vec, int32_t joint);</title></rect>
<rect width="12" height="12" x="720" y="135" class="decompiled"><title>void __cdecl Lara_GetJointAbsPosition_I(ITEM *item, XYZ_32 *vec, int16_t *frame1, int16_t *frame2, int32_t frac, int32_t rate);</title></rect>
<rect width="12" height="12" x="735" y="135" class="decompiled"><title>void __cdecl Gun_Rifle_DrawMeshes(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="12" height="12" x="0" y="150" class="decompiled"><title>void __cdecl Gun_Rifle_UndrawMeshes(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="12" height="12" x="15" y="150" class="decompiled"><title>void __cdecl Gun_Rifle_Ready(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="12" height="12" x="30" y="150" class="decompiled"><title>void __cdecl Gun_Rifle_Control(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="12" height="12" x="45" y="150" class="decompiled"><title>void __cdecl Gun_Rifle_FireShotgun(void);</title></rect>
<rect width="12" height="12" x="60" y="150" class="decompiled"><title>void __cdecl Gun_Rifle_FireM16(bool running);</title></rect>
<rect width="12" height="12" x="75" y="150" class="decompiled"><title>void __cdecl Gun_Rifle_FireHarpoon(void);</title></rect>
<rect width="12" height="12" x="90" y="150" class="known"><title>void __cdecl HarpoonBolt_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="105" y="150" class="decompiled"><title>void __cdecl Gun_Rifle_FireGrenade(void);</title></rect>
<rect width="12" height="12" x="120" y="150" class="known"><title>void __cdecl Rocket_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="135" y="150" class="decompiled"><title>void __cdecl Gun_Rifle_Draw(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="12" height="12" x="150" y="150" class="decompiled"><title>void __cdecl Gun_Rifle_Undraw(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="12" height="12" x="165" y="150" class="decompiled"><title>void __cdecl Gun_Rifle_Animate(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="12" height="12" x="180" y="150" class="decompiled"><title>void __cdecl Gun_Pistols_SetArmInfo(LARA_ARM *arm, int32_t frame);</title></rect>
<rect width="12" height="12" x="195" y="150" class="decompiled"><title>void __cdecl Gun_Pistols_Draw(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="12" height="12" x="210" y="150" class="decompiled"><title>void __cdecl Gun_Pistols_Undraw(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="12" height="12" x="225" y="150" class="decompiled"><title>void __cdecl Gun_Pistols_Ready(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="12" height="12" x="240" y="150" class="decompiled"><title>void __cdecl Gun_Pistols_DrawMeshes(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="12" height="12" x="255" y="150" class="decompiled"><title>void __cdecl Gun_Pistols_UndrawMeshLeft(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="12" height="12" x="270" y="150" class="decompiled"><title>void __cdecl Gun_Pistols_UndrawMeshRight(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="12" height="12" x="285" y="150" class="decompiled"><title>void __cdecl Gun_Pistols_Control(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="12" height="12" x="300" y="150" class="decompiled"><title>void __cdecl Gun_Pistols_Animate(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="12" height="12" x="315" y="150" class="decompiled"><title>void __cdecl Lara_State_ClimbLeft(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="330" y="150" class="decompiled"><title>void __cdecl Lara_State_ClimbRight(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="345" y="150" class="decompiled"><title>void __cdecl Lara_State_ClimbStance(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="360" y="150" class="decompiled"><title>void __cdecl Lara_State_Climbing(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="375" y="150" class="decompiled"><title>void __cdecl Lara_State_ClimbEnd(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="390" y="150" class="decompiled"><title>void __cdecl Lara_State_ClimbDown(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="405" y="150" class="decompiled"><title>void __cdecl Lara_Col_ClimbLeft(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="420" y="150" class="decompiled"><title>void __cdecl Lara_Col_ClimbRight(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="435" y="150" class="decompiled"><title>void __cdecl Lara_Col_ClimbStance(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="450" y="150" class="decompiled"><title>void __cdecl Lara_Col_Climbing(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="465" y="150" class="decompiled"><title>void __cdecl Lara_Col_ClimbDown(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="480" y="150" class="decompiled"><title>int32_t __cdecl Lara_CheckForLetGo(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="495" y="150" class="decompiled"><title>int32_t __cdecl Lara_TestClimb(int32_t x, int32_t y, int32_t z, int32_t xfront, int32_t zfront, int32_t item_height, int16_t item_room, int32_t *shift);</title></rect>
<rect width="12" height="12" x="510" y="150" class="decompiled"><title>int32_t __cdecl Lara_TestClimbPos(ITEM *item, int32_t front, int32_t right, int32_t origin, int32_t height, int32_t *shift);</title></rect>
<rect width="12" height="12" x="525" y="150" class="decompiled"><title>void __cdecl Lara_DoClimbLeftRight(ITEM *item, COLL_INFO *coll, int32_t result, int32_t shift);</title></rect>
<rect width="12" height="12" x="540" y="150" class="decompiled"><title>int32_t __cdecl Lara_TestClimbUpPos(ITEM *item, int32_t front, int32_t right, int32_t *shift, int32_t *ledge);</title></rect>
<rect width="12" height="12" x="555" y="150" class="decompiled"><title>void __cdecl Gun_Control(void);</title></rect>
<rect width="12" height="12" x="570" y="150" class="decompiled"><title>int32_t __cdecl Gun_CheckForHoldingState(int32_t state);</title></rect>
<rect width="12" height="12" x="585" y="150" class="decompiled"><title>void __cdecl Gun_InitialiseNewWeapon(void);</title></rect>
<rect width="12" height="12" x="600" y="150" class="decompiled"><title>void __cdecl Gun_TargetInfo(const WEAPON_INFO *winfo);</title></rect>
<rect width="12" height="12" x="615" y="150" class="decompiled"><title>void __cdecl Gun_GetNewTarget(WEAPON_INFO *winfo);</title></rect>
<rect width="12" height="12" x="630" y="150" class="decompiled"><title>void __cdecl Gun_FindTargetPoint(const ITEM *item, GAME_VECTOR *target);</title></rect>
<rect width="12" height="12" x="645" y="150" class="decompiled"><title>void __cdecl Gun_AimWeapon(WEAPON_INFO *winfo, LARA_ARM *arm);</title></rect>
<rect width="12" height="12" x="660" y="150" class="decompiled"><title>int32_t __cdecl Gun_FireWeapon(LARA_GUN_TYPE weapon_type, ITEM *target, const ITEM *src, const PHD_ANGLE *angles);</title></rect>
<rect width="12" height="12" x="675" y="150" class="decompiled"><title>void __cdecl Gun_HitTarget(ITEM *item, GAME_VECTOR *hitpos, int32_t damage);</title></rect>
<rect width="12" height="12" x="690" y="150" class="decompiled"><title>void __cdecl Gun_SmashItem(int16_t item_num, LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="12" height="12" x="705" y="150" class="decompiled"><title>GAME_OBJECT_ID Gun_GetWeaponAnim(const LARA_GUN_TYPE gun_type);</title></rect>
<rect width="12" height="12" x="720" y="150" class="known"><title>int32_t __cdecl Flare_DoLight(XYZ_32 *pos, int32_t flare_age);</title></rect>
<rect width="12" height="12" x="735" y="150" class="known"><title>void __cdecl Flare_DoInHand(int32_t flare_age);</title></rect>
<rect width="12" height="12" x="0" y="165" class="known"><title>void __cdecl Flare_DrawInAir(ITEM *item);</title></rect>
<rect width="12" height="12" x="15" y="165" class="known"><title>void __cdecl Flare_Create(int32_t thrown);</title></rect>
<rect width="12" height="12" x="30" y="165" class="known"><title>void __cdecl Flare_SetArm(int32_t frame);</title></rect>
<rect width="12" height="12" x="45" y="165" class="known"><title>void __cdecl Flare_Draw(void);</title></rect>
<rect width="12" height="12" x="60" y="165" class="known"><title>void __cdecl Flare_Undraw(void);</title></rect>
<rect width="12" height="12" x="75" y="165" class="known"><title>void __cdecl Flare_DrawMeshes(void);</title></rect>
<rect width="12" height="12" x="90" y="165" class="known"><title>void __cdecl Flare_UndrawMeshes(void);</title></rect>
<rect width="12" height="12" x="105" y="165" class="known"><title>void __cdecl Flare_Ready(void);</title></rect>
<rect width="12" height="12" x="120" y="165" class="known"><title>void __cdecl Flare_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="135" y="165" class="decompiled"><title>void __cdecl Lara_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="150" y="165" class="decompiled"><title>void __cdecl Lara_Animate(ITEM *item);</title></rect>
<rect width="12" height="12" x="165" y="165" class="decompiled"><title>void __cdecl Lara_UseItem(GAME_OBJECT_ID object_id);</title></rect>
<rect width="12" height="12" x="180" y="165" class="decompiled"><title>void __cdecl Lara_CheatGetStuff(void);</title></rect>
<rect width="12" height="12" x="195" y="165" class="decompiled"><title>void __cdecl Lara_ControlExtra(int16_t item_num);</title></rect>
<rect width="12" height="12" x="210" y="165" class="decompiled"><title>void __cdecl Lara_InitialiseLoad(int16_t item_num);</title></rect>
<rect width="12" height="12" x="225" y="165" class="decompiled"><title>void __cdecl Lara_Initialise(int32_t type);</title></rect>
<rect width="12" height="12" x="240" y="165" class="decompiled"><title>void __cdecl Lara_InitialiseInventory(int32_t level_num);</title></rect>
<rect width="12" height="12" x="255" y="165" class="decompiled"><title>void __cdecl Lara_InitialiseMeshes(int32_t level_num);</title></rect>
<rect width="12" height="12" x="270" y="165" class="decompiled"><title>void __cdecl Lara_HandleSurface(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="285" y="165" class="decompiled"><title>void __cdecl Lara_State_SurfSwim(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="300" y="165" class="decompiled"><title>void __cdecl Lara_State_SurfBack(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="315" y="165" class="decompiled"><title>void __cdecl Lara_State_SurfLeft(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="330" y="165" class="decompiled"><title>void __cdecl Lara_State_SurfRight(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="345" y="165" class="decompiled"><title>void __cdecl Lara_State_SurfTread(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="360" y="165" class="decompiled"><title>void __cdecl Lara_Col_SurfSwim(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="375" y="165" class="decompiled"><title>void __cdecl Lara_Col_SurfBack(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="390" y="165" class="decompiled"><title>void __cdecl Lara_Col_SurfLeft(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="405" y="165" class="decompiled"><title>void __cdecl Lara_Col_SurfRight(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="420" y="165" class="decompiled"><title>void __cdecl Lara_Col_SurfTread(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="435" y="165" class="decompiled"><title>void __cdecl Lara_SurfaceCollision(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="450" y="165" class="decompiled"><title>int32_t __cdecl Lara_TestWaterStepOut(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="465" y="165" class="decompiled"><title>int32_t __cdecl Lara_TestWaterClimbOut(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="480" y="165" class="decompiled"><title>void __cdecl Lara_HandleUnderwater(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="495" y="165" class="decompiled"><title>void __cdecl Lara_SwimTurn(ITEM *item);</title></rect>
<rect width="12" height="12" x="510" y="165" class="decompiled"><title>void __cdecl Lara_State_Swim(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="525" y="165" class="decompiled"><title>void __cdecl Lara_State_Glide(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="540" y="165" class="decompiled"><title>void __cdecl Lara_State_Tread(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="555" y="165" class="decompiled"><title>void __cdecl Lara_State_Dive(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="570" y="165" class="decompiled"><title>void __cdecl Lara_State_UWDeath(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="585" y="165" class="decompiled"><title>void __cdecl Lara_State_UWTwist(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="600" y="165" class="decompiled"><title>void __cdecl Lara_Col_Swim(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="615" y="165" class="decompiled"><title>void __cdecl Lara_Col_UWDeath(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="630" y="165" class="decompiled"><title>int32_t __cdecl Lara_GetWaterDepth(int32_t x, int32_t y, int32_t z, int16_t room_num);</title></rect>
<rect width="12" height="12" x="645" y="165" class="decompiled"><title>void __cdecl Lara_TestWaterDepth(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="660" y="165" class="decompiled"><title>void __cdecl Lara_SwimCollision(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="675" y="165" class="decompiled"><title>void __cdecl Lara_WaterCurrent(COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="690" y="165" class="decompiled"><title>void __cdecl LOT_InitialiseArray(void);</title></rect>
<rect width="12" height="12" x="705" y="165" class="decompiled"><title>void __cdecl LOT_DisableBaddieAI(int16_t item_num);</title></rect>
<rect width="12" height="12" x="720" y="165" class="decompiled"><title>bool __cdecl LOT_EnableBaddieAI(int16_t item_num, bool always);</title></rect>
<rect width="12" height="12" x="735" y="165" class="decompiled"><title>void __cdecl LOT_InitialiseSlot(int16_t item_num, int32_t slot);</title></rect>
<rect width="12" height="12" x="0" y="180" class="decompiled"><title>void __cdecl LOT_CreateZone(ITEM *item);</title></rect>
<rect width="12" height="12" x="15" y="180" class="decompiled"><title>void __cdecl LOT_ClearLOT(LOT_INFO *lot);</title></rect>
<rect width="12" height="12" x="30" y="180" class="known"><title>void __cdecl ControlMissile(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="45" y="180" class="known"><title>void __cdecl ShootAtLara(FX *fx);</title></rect>
<rect width="12" height="12" x="60" y="180" class="decompiled"><title>int32_t __cdecl Effect_ExplodingDeath(int16_t item_num, int32_t mesh_bits, int16_t damage);</title></rect>
<rect width="12" height="12" x="75" y="180" class="known"><title>void __cdecl BodyPart_Control(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="90" y="180" class="decompiled"><title>void __cdecl MovableBlock_Initialise(int16_t item_num);</title></rect>
<rect width="12" height="12" x="105" y="180" class="decompiled"><title>void __cdecl MovableBlock_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="120" y="180" class="decompiled"><title>void __cdecl MovableBlock_Collision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="135" y="180" class="decompiled"><title>int32_t __cdecl MovableBlock_TestDestination(ITEM *item, int32_t block_height);</title></rect>
<rect width="12" height="12" x="150" y="180" class="decompiled"><title>int32_t __cdecl MovableBlock_TestPush(ITEM *item, int32_t block_height, uint16_t quadrant);</title></rect>
<rect width="12" height="12" x="165" y="180" class="decompiled"><title>int32_t __cdecl MovableBlock_TestPull(ITEM *item, int32_t block_height, uint16_t quadrant);</title></rect>
<rect width="12" height="12" x="180" y="180" class="decompiled"><title>void __cdecl Room_AlterFloorHeight(ITEM *item, int32_t height);</title></rect>
<rect width="12" height="12" x="195" y="180" class="decompiled"><title>void __cdecl MovableBlock_Draw(const ITEM *item);</title></rect>
<rect width="12" height="12" x="210" y="180" class="known"><title>void __cdecl Object_DrawUnclippedItem(const ITEM *item);</title></rect>
<rect width="12" height="12" x="225" y="180" class="known"><title>void __cdecl EarthQuake(int16_t item_num);</title></rect>
<rect width="12" height="12" x="240" y="180" class="known"><title>void __cdecl ControlCutShotgun(int16_t item_num);</title></rect>
<rect width="12" height="12" x="255" y="180" class="known"><title>void __cdecl InitialiseFinalLevel(void);</title></rect>
<rect width="12" height="12" x="270" y="180" class="decompiled"><title>void __cdecl FinalLevelCounter_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="285" y="180" class="known"><title>void __cdecl MiniCopterControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="300" y="180" class="known"><title>void __cdecl InitialiseDyingMonk(int16_t item_num);</title></rect>
<rect width="12" height="12" x="315" y="180" class="known"><title>void __cdecl DyingMonk(int16_t item_num);</title></rect>
<rect width="12" height="12" x="330" y="180" class="decompiled"><title>void __cdecl GongBonger_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="345" y="180" class="decompiled"><title>void __cdecl Zipline_Collision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="360" y="180" class="decompiled"><title>void __cdecl Zipline_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="375" y="180" class="known"><title>void __cdecl BigBowlControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="390" y="180" class="known"><title>void __cdecl BellControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="405" y="180" class="known"><title>void __cdecl InitialiseWindow(int16_t item_num);</title></rect>
<rect width="12" height="12" x="420" y="180" class="known"><title>void __cdecl SmashWindow(int16_t item_num);</title></rect>
<rect width="12" height="12" x="435" y="180" class="known"><title>void __cdecl WindowControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="450" y="180" class="known"><title>void __cdecl SmashIceControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="465" y="180" class="decompiled"><title>void __cdecl Door_Shut(DOORPOS_DATA *d);</title></rect>
<rect width="12" height="12" x="480" y="180" class="decompiled"><title>void __cdecl Door_Open(DOORPOS_DATA *d);</title></rect>
<rect width="12" height="12" x="495" y="180" class="decompiled"><title>void __cdecl Door_Initialise(int16_t item_num);</title></rect>
<rect width="12" height="12" x="510" y="180" class="decompiled"><title>void __cdecl Door_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="525" y="180" class="decompiled"><title>int32_t __cdecl Drawbridge_IsItemOnTop(const ITEM *item, int32_t x, int32_t y);</title></rect>
<rect width="12" height="12" x="540" y="180" class="decompiled"><title>void __cdecl Drawbridge_Floor(const ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *out_height);</title></rect>
<rect width="12" height="12" x="555" y="180" class="decompiled"><title>void __cdecl Drawbridge_Ceiling(const ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *out_height);</title></rect>
<rect width="12" height="12" x="570" y="180" class="decompiled"><title>void __cdecl Drawbridge_Collision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="585" y="180" class="decompiled"><title>void __cdecl Lift_Initialise(int16_t item_num);</title></rect>
<rect width="12" height="12" x="600" y="180" class="decompiled"><title>void __cdecl Lift_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="615" y="180" class="decompiled"><title>void __cdecl Lift_FloorCeiling(const ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *floor, int32_t *ceiling);</title></rect>
<rect width="12" height="12" x="630" y="180" class="decompiled"><title>void __cdecl Lift_Floor(const ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *out_height);</title></rect>
<rect width="12" height="12" x="645" y="180" class="decompiled"><title>void __cdecl Lift_Ceiling(const ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *out_height);</title></rect>
<rect width="12" height="12" x="660" y="180" class="decompiled"><title>void __cdecl BridgeFlat_Floor(const ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *out_height);</title></rect>
<rect width="12" height="12" x="675" y="180" class="decompiled"><title>void __cdecl BridgeFlat_Ceiling(const ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *out_height);</title></rect>
<rect width="12" height="12" x="690" y="180" class="decompiled"><title>int32_t __cdecl Bridge_GetOffset(const ITEM *item, int32_t x, int32_t z);</title></rect>
<rect width="12" height="12" x="705" y="180" class="decompiled"><title>void __cdecl BridgeTilt1_Floor(const ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *out_height);</title></rect>
<rect width="12" height="12" x="720" y="180" class="decompiled"><title>void __cdecl BridgeTilt1_Ceiling(const ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *out_height);</title></rect>
<rect width="12" height="12" x="735" y="180" class="decompiled"><title>void __cdecl BridgeTilt2_Floor(const ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *out_height);</title></rect>
<rect width="12" height="12" x="0" y="195" class="decompiled"><title>void __cdecl BridgeTilt2_Ceiling(const ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *out_height);</title></rect>
<rect width="12" height="12" x="15" y="195" class="known"><title>void __cdecl CopterControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="30" y="195" class="known"><title>void __cdecl GeneralControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="45" y="195" class="decompiled"><title>void __cdecl Detonator_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="60" y="195" class="decompiled"><title>bool __cdecl Creature_CanTargetEnemy(const ITEM *item, const AI_INFO *info);</title></rect>
<rect width="12" height="12" x="75" y="195" class="known"><title>void __cdecl ControlGlow(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="90" y="195" class="known"><title>void __cdecl ControlGunShot(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="105" y="195" class="known"><title>int16_t __cdecl GunShot(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE yrot, int16_t room_num);</title></rect>
<rect width="12" height="12" x="120" y="195" class="known"><title>int16_t __cdecl GunHit(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE yrot, int16_t room_num);</title></rect>
<rect width="12" height="12" x="135" y="195" class="known"><title>int16_t __cdecl GunMiss(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE yrot, int16_t room_num);</title></rect>
<rect width="12" height="12" x="150" y="195" class="known"><title>int32_t __cdecl ShotLara(ITEM *item, AI_INFO *info, BITE *gun, int16_t extra_rotation, int32_t damage);</title></rect>
<rect width="12" height="12" x="165" y="195" class="known"><title>void __cdecl Cultist1_Initialise(int16_t item_num);</title></rect>
<rect width="12" height="12" x="180" y="195" class="known"><title>void __cdecl Cultist1_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="195" y="195" class="known"><title>void __cdecl Cultist3_Initialise(int16_t item_num);</title></rect>
<rect width="12" height="12" x="210" y="195" class="known"><title>void __cdecl Cultist3_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="225" y="195" class="known"><title>void __cdecl Worker1_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="240" y="195" class="known"><title>void __cdecl Worker2_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="255" y="195" class="known"><title>void __cdecl Bandit1_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="270" y="195" class="known"><title>void __cdecl Bandit2_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="285" y="195" class="known"><title>void __cdecl Winston_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="300" y="195" class="decompiled"><title>void __cdecl Pickup_Collision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="315" y="195" class="decompiled"><title>void __cdecl Switch_Collision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="330" y="195" class="decompiled"><title>void __cdecl Switch_CollisionUW(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="345" y="195" class="decompiled"><title>void __cdecl Detonator_Collision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="360" y="195" class="decompiled"><title>void __cdecl Keyhole_Collision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="375" y="195" class="decompiled"><title>void __cdecl PuzzleHole_Collision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="390" y="195" class="decompiled"><title>void __cdecl Switch_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="405" y="195" class="decompiled"><title>int32_t __cdecl Switch_Trigger(int16_t item_num, int16_t timer);</title></rect>
<rect width="12" height="12" x="420" y="195" class="decompiled"><title>int32_t __cdecl Keyhole_Trigger(int16_t item_num);</title></rect>
<rect width="12" height="12" x="435" y="195" class="decompiled"><title>int32_t __cdecl Pickup_Trigger(int16_t item_num);</title></rect>
<rect width="12" height="12" x="450" y="195" class="known"><title>void __cdecl SecretControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="465" y="195" class="known"><title>void __cdecl Mouse_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="480" y="195" class="known"><title>void __cdecl InitialiseStartInfo(void);</title></rect>
<rect width="12" height="12" x="495" y="195" class="known"><title>void __cdecl ModifyStartInfo(int32_t level_num);</title></rect>
<rect width="12" height="12" x="510" y="195" class="known"><title>void __cdecl CreateStartInfo(int32_t level_num);</title></rect>
<rect width="12" height="12" x="525" y="195" class="known"><title>void __cdecl CreateSaveGameInfo(void);</title></rect>
<rect width="12" height="12" x="540" y="195" class="known"><title>void __cdecl ExtractSaveGameInfo(void);</title></rect>
<rect width="12" height="12" x="555" y="195" class="known"><title>void __cdecl ResetSG(void);</title></rect>
<rect width="12" height="12" x="570" y="195" class="known"><title>void __cdecl WriteSG(void *pointer, int32_t size);</title></rect>
<rect width="12" height="12" x="585" y="195" class="known"><title>void __cdecl ReadSG(void *pointer, int32_t size);</title></rect>
<rect width="12" height="12" x="600" y="195" class="decompiled"><title>int32_t __cdecl Level_Initialise(int32_t level_num, int32_t level_type);</title></rect>
<rect width="12" height="12" x="615" y="195" class="known"><title>void __cdecl InitialiseGameFlags(void);</title></rect>
<rect width="12" height="12" x="630" y="195" class="known"><title>void __cdecl InitialiseLevelFlags(void);</title></rect>
<rect width="12" height="12" x="645" y="195" class="decompiled"><title>void __cdecl Object_SetupBaddyObjects(void);</title></rect>
<rect width="12" height="12" x="660" y="195" class="known"><title>void __cdecl Object_SetupTrapObjects(void);</title></rect>
<rect width="12" height="12" x="675" y="195" class="known"><title>void __cdecl Object_SetupGeneralObjects(void);</title></rect>
<rect width="12" height="12" x="690" y="195" class="decompiled"><title>void __cdecl Object_SetupAllObjects(void);</title></rect>
<rect width="12" height="12" x="705" y="195" class="known"><title>void __cdecl GetCarriedItems(void);</title></rect>
<rect width="12" height="12" x="720" y="195" class="known"><title>void __cdecl Jelly_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="735" y="195" class="known"><title>void __cdecl Baracudda_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="0" y="210" class="known"><title>void __cdecl Shark_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="15" y="210" class="decompiled"><title>void __cdecl Skidoo_Initialise(int16_t item_num);</title></rect>
<rect width="12" height="12" x="30" y="210" class="decompiled"><title>int32_t __cdecl Skidoo_CheckGetOn(int16_t item_num, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="45" y="210" class="decompiled"><title>void __cdecl Skidoo_Collision(int16_t item_num, ITEM *litem, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="60" y="210" class="decompiled"><title>void __cdecl Skidoo_BaddieCollision(const ITEM *skidoo);</title></rect>
<rect width="12" height="12" x="75" y="210" class="decompiled"><title>int32_t __cdecl Skidoo_TestHeight(const ITEM *item, int32_t z_off, int32_t x_off, XYZ_32 *pos);</title></rect>
<rect width="12" height="12" x="90" y="210" class="known"><title>int32_t __cdecl DoShift(ITEM *skidoo, XYZ_32 *pos, XYZ_32 *old);</title></rect>
<rect width="12" height="12" x="105" y="210" class="known"><title>int32_t __cdecl DoDynamics(int32_t height, int32_t fall_speed, int32_t *y);</title></rect>
<rect width="12" height="12" x="120" y="210" class="known"><title>int32_t __cdecl GetCollisionAnim(ITEM *skidoo, XYZ_32 *moved);</title></rect>
<rect width="12" height="12" x="135" y="210" class="decompiled"><title>void __cdecl Skidoo_DoSnowEffect(ITEM *skidoo);</title></rect>
<rect width="12" height="12" x="150" y="210" class="decompiled"><title>int32_t __cdecl Skidoo_Dynamics(ITEM *skidoo);</title></rect>
<rect width="12" height="12" x="165" y="210" class="decompiled"><title>int32_t __cdecl Skidoo_UserControl(ITEM *skidoo, int32_t height, int32_t *pitch);</title></rect>
<rect width="12" height="12" x="180" y="210" class="decompiled"><title>int32_t __cdecl Skidoo_CheckGetOffOK(int32_t direction);</title></rect>
<rect width="12" height="12" x="195" y="210" class="decompiled"><title>void __cdecl Skidoo_Animation(ITEM *skidoo, int32_t collide, int32_t dead);</title></rect>
<rect width="12" height="12" x="210" y="210" class="decompiled"><title>void __cdecl Skidoo_Explode(const ITEM *skidoo);</title></rect>
<rect width="12" height="12" x="225" y="210" class="decompiled"><title>int32_t __cdecl Skidoo_CheckGetOff(void);</title></rect>
<rect width="12" height="12" x="240" y="210" class="decompiled"><title>void __cdecl Skidoo_Guns(void);</title></rect>
<rect width="12" height="12" x="255" y="210" class="decompiled"><title>int32_t __cdecl Skidoo_Control(void);</title></rect>
<rect width="12" height="12" x="270" y="210" class="decompiled"><title>void __cdecl Skidoo_Draw(const ITEM *item);</title></rect>
<rect width="12" height="12" x="285" y="210" class="decompiled"><title>void __cdecl SkidooDriver_Initialise(int16_t item_num);</title></rect>
<rect width="12" height="12" x="300" y="210" class="decompiled"><title>void __cdecl SkidooDriver_Control(int16_t rider_num);</title></rect>
<rect width="12" height="12" x="315" y="210" class="decompiled"><title>void __cdecl SkidooArmed_Push(const ITEM *item, ITEM *lara_item, int32_t radius);</title></rect>
<rect width="12" height="12" x="330" y="210" class="decompiled"><title>void __cdecl SkidooArmed_Collision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="345" y="210" class="known"><title>int32_t __cdecl Music_GetRealTrack(int32_t track);</title></rect>
<rect width="12" height="12" x="360" y="210" class="decompiled"><title>void __cdecl Sound_Effect(int32_t sample_id, const XYZ_32 *pos, uint32_t flags);</title></rect>
<rect width="12" height="12" x="375" y="210" class="decompiled"><title>void __cdecl Sound_StopEffect(int32_t sample_id);</title></rect>
<rect width="12" height="12" x="390" y="210" class="decompiled"><title>void __cdecl Sound_EndScene(void);</title></rect>
<rect width="12" height="12" x="405" y="210" class="decompiled"><title>void __cdecl Sound_Shutdown(void);</title></rect>
<rect width="12" height="12" x="420" y="210" class="decompiled"><title>void __cdecl Sound_Init(void);</title></rect>
<rect width="12" height="12" x="435" y="210" class="known"><title>int32_t __cdecl Collide_TestCollision(ITEM *item, const ITEM *lara_item);</title></rect>
<rect width="12" height="12" x="450" y="210" class="known"><title>int32_t __cdecl Collide_GetSpheres(const ITEM *item, SPHERE *spheres, bool world_space);</title></rect>
<rect width="12" height="12" x="465" y="210" class="known"><title>void __cdecl Collide_GetJointAbsPosition(const ITEM *item, const XYZ_32 *vec, int32_t joint);</title></rect>
<rect width="12" height="12" x="480" y="210" class="known"><title>void __cdecl BaddieBiteEffect(ITEM *item, BITE *bite);</title></rect>
<rect width="12" height="12" x="495" y="210" class="known"><title>void __cdecl Spider_Leap(int16_t item_num, int16_t angle);</title></rect>
<rect width="12" height="12" x="510" y="210" class="known"><title>void __cdecl Spider_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="525" y="210" class="known"><title>void __cdecl BigSpider_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="540" y="210" class="decompiled"><title>void __cdecl Text_Init(void);</title></rect>
<rect width="12" height="12" x="555" y="210" class="decompiled"><title>TEXTSTRING *__cdecl Text_Create(int32_t x, int32_t y, int32_t z, const char *text);</title></rect>
<rect width="12" height="12" x="570" y="210" class="decompiled"><title>void __cdecl Text_ChangeText(TEXTSTRING *string, const char *text);</title></rect>
<rect width="12" height="12" x="585" y="210" class="decompiled"><title>void __cdecl Text_SetScale(TEXTSTRING *string, int32_t scale_h, int32_t scale_v);</title></rect>
<rect width="12" height="12" x="600" y="210" class="decompiled"><title>void __cdecl Text_Flash(TEXTSTRING *string, int16_t enable, int16_t rate);</title></rect>
<rect width="12" height="12" x="615" y="210" class="decompiled"><title>void __cdecl Text_AddBackground(TEXTSTRING *string, int16_t x_size, int16_t y_size, int16_t x_off, int16_t y_off, int16_t z_off, int16_t color, uint16_t *gour_ptr, uint16_t flags);</title></rect>
<rect width="12" height="12" x="630" y="210" class="decompiled"><title>void __cdecl Text_RemoveBackground(TEXTSTRING *string);</title></rect>
<rect width="12" height="12" x="645" y="210" class="decompiled"><title>void __cdecl Text_AddOutline(TEXTSTRING *string, int16_t enable, int16_t color, uint16_t *gour_ptr, uint16_t flags);</title></rect>
<rect width="12" height="12" x="660" y="210" class="decompiled"><title>void __cdecl Text_RemoveOutline(TEXTSTRING *string);</title></rect>
<rect width="12" height="12" x="675" y="210" class="decompiled"><title>void __cdecl Text_CentreH(TEXTSTRING *string, int16_t enable);</title></rect>
<rect width="12" height="12" x="690" y="210" class="decompiled"><title>void __cdecl Text_CentreV(TEXTSTRING *string, int16_t enable);</title></rect>
<rect width="12" height="12" x="705" y="210" class="decompiled"><title>void __cdecl Text_AlignRight(TEXTSTRING *string, int16_t enable);</title></rect>
<rect width="12" height="12" x="720" y="210" class="decompiled"><title>void __cdecl Text_AlignBottom(TEXTSTRING *string, int16_t enable);</title></rect>
<rect width="12" height="12" x="735" y="210" class="decompiled"><title>int32_t __cdecl Text_GetWidth(TEXTSTRING *string);</title></rect>
<rect width="12" height="12" x="0" y="225" class="decompiled"><title>int32_t __cdecl Text_Remove(TEXTSTRING *string);</title></rect>
<rect width="12" height="12" x="15" y="225" class="decompiled"><title>int16_t __cdecl Text_GetTextLength(const char *text);</title></rect>
<rect width="12" height="12" x="30" y="225" class="decompiled"><title>void __cdecl Text_Draw(void);</title></rect>
<rect width="12" height="12" x="45" y="225" class="decompiled"><title>void __cdecl Text_DrawBorder(int32_t x, int32_t y, int32_t z, int32_t width, int32_t height);</title></rect>
<rect width="12" height="12" x="60" y="225" class="decompiled"><title>void __cdecl Text_DrawText(const TEXTSTRING *string);</title></rect>
<rect width="12" height="12" x="75" y="225" class="decompiled"><title>uint32_t __cdecl Text_GetScaleH(uint32_t value);</title></rect>
<rect width="12" height="12" x="90" y="225" class="decompiled"><title>uint32_t __cdecl Text_GetScaleV(uint32_t value);</title></rect>
<rect width="12" height="12" x="105" y="225" class="known"><title>void __cdecl MineControl(int16_t mine_num);</title></rect>
<rect width="12" height="12" x="120" y="225" class="known"><title>void __cdecl ControlSpikeWall(int16_t item_num);</title></rect>
<rect width="12" height="12" x="135" y="225" class="known"><title>void __cdecl ControlCeilingSpikes(int16_t item_num);</title></rect>
<rect width="12" height="12" x="150" y="225" class="known"><title>void __cdecl HookControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="165" y="225" class="known"><title>void __cdecl PropellerControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="180" y="225" class="known"><title>void __cdecl SpinningBlade(int16_t item_num);</title></rect>
<rect width="12" height="12" x="195" y="225" class="known"><title>void __cdecl IcicleControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="210" y="225" class="known"><title>void __cdecl InitialiseBlade(int16_t item_num);</title></rect>
<rect width="12" height="12" x="225" y="225" class="known"><title>void __cdecl BladeControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="240" y="225" class="known"><title>void __cdecl InitialiseKillerStatue(int16_t item_num);</title></rect>
<rect width="12" height="12" x="255" y="225" class="known"><title>void __cdecl KillerStatueControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="270" y="225" class="known"><title>void __cdecl SpringBoardControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="285" y="225" class="known"><title>void __cdecl InitialiseRollingBall(int16_t item_num);</title></rect>
<rect width="12" height="12" x="300" y="225" class="known"><title>void __cdecl RollingBallControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="315" y="225" class="known"><title>void __cdecl RollingBallCollision(int16_t item_num, ITEM *litem, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="330" y="225" class="known"><title>void __cdecl SpikeCollision(int16_t item_num, ITEM *litem, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="345" y="225" class="decompiled"><title>void __cdecl Trapdoor_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="360" y="225" class="known"><title>void __cdecl Trapdoor_Floor(const ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *out_height);</title></rect>
<rect width="12" height="12" x="375" y="225" class="known"><title>void __cdecl Trapdoor_Ceiling(const ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *out_height);</title></rect>
<rect width="12" height="12" x="390" y="225" class="decompiled"><title>int32_t __cdecl Trapdoor_IsItemOnTop(const ITEM *item, int32_t x, int32_t z);</title></rect>
<rect width="12" height="12" x="405" y="225" class="known"><title>void __cdecl Pendulum(int16_t item_num);</title></rect>
<rect width="12" height="12" x="420" y="225" class="known"><title>void __cdecl FallingBlock(int16_t item_num);</title></rect>
<rect width="12" height="12" x="435" y="225" class="known"><title>void __cdecl FallingBlockFloor(const ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *out_height);</title></rect>
<rect width="12" height="12" x="450" y="225" class="known"><title>void __cdecl FallingBlockCeiling(const ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *out_height);</title></rect>
<rect width="12" height="12" x="465" y="225" class="known"><title>void __cdecl TeethTrap(int16_t item_num);</title></rect>
<rect width="12" height="12" x="480" y="225" class="known"><title>void __cdecl FallingCeiling(int16_t item_num);</title></rect>
<rect width="12" height="12" x="495" y="225" class="known"><title>void __cdecl DartEmitterControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="510" y="225" class="known"><title>void __cdecl DartsControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="525" y="225" class="known"><title>void __cdecl DartEffectControl(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="540" y="225" class="decompiled"><title>void __cdecl FlameEmitter_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="555" y="225" class="decompiled"><title>void __cdecl Flame_Control(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="570" y="225" class="decompiled"><title>void __cdecl Lara_CatchFire(void);</title></rect>
<rect width="12" height="12" x="585" y="225" class="decompiled"><title>void __cdecl Lara_TouchLava(ITEM *item);</title></rect>
<rect width="12" height="12" x="600" y="225" class="decompiled"><title>void __cdecl EmberEmitter_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="615" y="225" class="decompiled"><title>void __cdecl Ember_Control(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="630" y="225" class="known"><title>void __cdecl GiantYeti_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="645" y="225" class="known"><title>void __cdecl Yeti_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="660" y="225" class="decompiled"><title>void __cdecl BGND_Make640x480(uint8_t *bitmap, RGB_888 *palette);</title></rect>
<rect width="12" height="12" x="675" y="225" class="decompiled"><title>int32_t __cdecl BGND_AddTexture(int32_t tile_idx, BYTE *bitmap, int32_t pal_index, RGB_888 *bmp_pal);</title></rect>
<rect width="12" height="12" x="690" y="225" class="decompiled"><title>void __cdecl BGND_GetPageHandles(void);</title></rect>
<rect width="12" height="12" x="705" y="225" class="decompiled"><title>void __cdecl BGND_DrawInGameBlack(void);</title></rect>
<rect width="12" height="12" x="720" y="225" class="decompiled"><title>void __cdecl DrawQuad(float sx, float sy, float width, float height, D3DCOLOR color);</title></rect>
<rect width="12" height="12" x="735" y="225" class="decompiled"><title>void __cdecl BGND_DrawInGameBackground(void);</title></rect>
<rect width="12" height="12" x="0" y="240" class="decompiled"><title>void __cdecl DrawTextureTile(int32_t sx, int32_t sy, int32_t width, int32_t height, HWR_TEXTURE_HANDLE tex_source, int32_t tu, int32_t tv, int32_t t_width, int32_t t_height, D3DCOLOR color0, D3DCOLOR color1, D3DCOLOR color2, D3DCOLOR color3);</title></rect>
<rect width="12" height="12" x="15" y="240" class="decompiled"><title>D3DCOLOR __cdecl BGND_CenterLighting(int32_t x, int32_t y, int32_t width, int32_t height);</title></rect>
<rect width="12" height="12" x="30" y="240" class="decompiled"><title>void __cdecl BGND_Free(void);</title></rect>
<rect width="12" height="12" x="45" y="240" class="decompiled"><title>bool __cdecl BGND_Init(void);</title></rect>
<rect width="12" height="12" x="60" y="240" class="decompiled"><title>void __cdecl Enumerate3DDevices(DISPLAY_ADAPTER *adapter);</title></rect>
<rect width="12" height="12" x="75" y="240" class="decompiled"><title>bool __cdecl D3DCreate(void);</title></rect>
<rect width="12" height="12" x="90" y="240" class="decompiled"><title>HRESULT __stdcall Enum3DDevicesCallback(GUID *lpGuid, LPTSTR lpDeviceDescription, LPTSTR lpDeviceName, LPD3DDEVICEDESC lpD3DHWDeviceDesc, LPD3DDEVICEDESC lpD3DHELDeviceDesc, LPVOID lpContext);</title></rect>
<rect width="12" height="12" x="105" y="240" class="decompiled"><title>bool __cdecl D3DIsSupported(LPD3DDEVICEDESC desc);</title></rect>
<rect width="12" height="12" x="120" y="240" class="decompiled"><title>bool __cdecl D3DSetViewport(void);</title></rect>
<rect width="12" height="12" x="135" y="240" class="decompiled"><title>void __cdecl D3DDeviceCreate(LPDDS lpBackBuffer);</title></rect>
<rect width="12" height="12" x="150" y="240" class="decompiled"><title>void __cdecl Direct3DRelease(void);</title></rect>
<rect width="12" height="12" x="165" y="240" class="decompiled"><title>bool __cdecl Direct3DInit(void);</title></rect>
<rect width="12" height="12" x="180" y="240" class="unused"><title>sub_444990</title></rect>
<rect width="12" height="12" x="195" y="240" class="unused"><title>sub_4449A0</title></rect>
<rect width="12" height="12" x="210" y="240" class="unused"><title>sub_4449D0</title></rect>
<rect width="12" height="12" x="225" y="240" class="unused"><title>sub_444AA0</title></rect>
<rect width="12" height="12" x="240" y="240" class="unused"><title>sub_444AB0</title></rect>
<rect width="12" height="12" x="255" y="240" class="unused"><title>sub_444B20</title></rect>
<rect width="12" height="12" x="270" y="240" class="unused"><title>sub_444BB0</title></rect>
<rect width="12" height="12" x="285" y="240" class="unused"><title>sub_444BC0</title></rect>
<rect width="12" height="12" x="300" y="240" class="decompiled"><title>bool __cdecl DDrawCreate(LPGUID lpGUID);</title></rect>
<rect width="12" height="12" x="315" y="240" class="decompiled"><title>void __cdecl DDrawRelease(void);</title></rect>
<rect width="12" height="12" x="330" y="240" class="decompiled"><title>void __cdecl GameWindowCalculateSizeFromClient(int32_t *width, int32_t *height);</title></rect>
<rect width="12" height="12" x="345" y="240" class="decompiled"><title>void __cdecl GameWindowCalculateSizeFromClientByZero(int32_t *width, int32_t *height);</title></rect>
<rect width="12" height="12" x="360" y="240" class="decompiled"><title>void __cdecl WinVidSetMinWindowSize(int32_t width, int32_t height);</title></rect>
<rect width="12" height="12" x="375" y="240" class="decompiled"><title>void __cdecl WinVidClearMinWindowSize(void);</title></rect>
<rect width="12" height="12" x="390" y="240" class="decompiled"><title>void __cdecl WinVidSetMaxWindowSize(int32_t width, int32_t height);</title></rect>
<rect width="12" height="12" x="405" y="240" class="decompiled"><title>void __cdecl WinVidClearMaxWindowSize(void);</title></rect>
<rect width="12" height="12" x="420" y="240" class="decompiled"><title>int32_t __cdecl CalculateWindowWidth(int32_t width, int32_t height);</title></rect>
<rect width="12" height="12" x="435" y="240" class="decompiled"><title>int32_t __cdecl CalculateWindowHeight(int32_t width, int32_t height);</title></rect>
<rect width="12" height="12" x="450" y="240" class="decompiled"><title>bool __cdecl WinVidGetMinMaxInfo(LPMINMAXINFO info);</title></rect>
<rect width="12" height="12" x="465" y="240" class="decompiled"><title>HWND __cdecl WinVidFindGameWindow(void);</title></rect>
<rect width="12" height="12" x="480" y="240" class="decompiled"><title>bool __cdecl WinVidSpinMessageLoop(bool needWait);</title></rect>
<rect width="12" height="12" x="495" y="240" class="decompiled"><title>void __cdecl WinVidShowGameWindow(int32_t nCmdShow);</title></rect>
<rect width="12" height="12" x="510" y="240" class="decompiled"><title>void __cdecl WinVidHideGameWindow(void);</title></rect>
<rect width="12" height="12" x="525" y="240" class="decompiled"><title>void __cdecl WinVidSetGameWindowSize(int32_t width, int32_t height);</title></rect>
<rect width="12" height="12" x="540" y="240" class="decompiled"><title>bool __cdecl ShowDDrawGameWindow(bool active);</title></rect>
<rect width="12" height="12" x="555" y="240" class="decompiled"><title>bool __cdecl HideDDrawGameWindow(void);</title></rect>
<rect width="12" height="12" x="570" y="240" class="decompiled"><title>HRESULT __cdecl DDrawSurfaceCreate(LPDDSDESC dsp, LPDDS *surface);</title></rect>
<rect width="12" height="12" x="585" y="240" class="decompiled"><title>HRESULT __cdecl DDrawSurfaceRestoreLost(LPDDS surface1, LPDDS surface2, bool blank);</title></rect>
<rect width="12" height="12" x="600" y="240" class="decompiled"><title>bool __cdecl WinVidClearBuffer(LPDDS surface, LPRECT rect, DWORD fill_color);</title></rect>
<rect width="12" height="12" x="615" y="240" class="decompiled"><title>HRESULT __cdecl WinVidBufferLock(LPDDS surface, LPDDSDESC desc, DWORD flags);</title></rect>
<rect width="12" height="12" x="630" y="240" class="decompiled"><title>HRESULT __cdecl WinVidBufferUnlock(LPDDS surface, LPDDSDESC desc);</title></rect>
<rect width="12" height="12" x="645" y="240" class="decompiled"><title>bool __cdecl WinVidCopyBitmapToBuffer(LPDDS surface, const BYTE *bitmap);</title></rect>
<rect width="12" height="12" x="660" y="240" class="decompiled"><title>DWORD __cdecl GetRenderBitDepth(DWORD dwRGBBitCount);</title></rect>
<rect width="12" height="12" x="675" y="240" class="decompiled"><title>void __thiscall WinVidGetColorBitMasks(COLOR_BIT_MASKS *bm, LPDDPIXELFORMAT pixel_format);</title></rect>
<rect width="12" height="12" x="690" y="240" class="decompiled"><title>void __cdecl BitMaskGetNumberOfBits(uint32_t bit_mask, uint32_t *bit_depth, uint32_t *bit_offset);</title></rect>
<rect width="12" height="12" x="705" y="240" class="decompiled"><title>DWORD __cdecl CalculateCompatibleColor(COLOR_BIT_MASKS *mask, int32_t red, int32_t green, int32_t blue, int32_t alpha);</title></rect>
<rect width="12" height="12" x="720" y="240" class="decompiled"><title>bool __cdecl WinVidGetDisplayMode(DISPLAY_MODE *disp_mode);</title></rect>
<rect width="12" height="12" x="735" y="240" class="decompiled"><title>bool __cdecl WinVidGoFullScreen(DISPLAY_MODE *disp_mode);</title></rect>
<rect width="12" height="12" x="0" y="255" class="decompiled"><title>bool __cdecl WinVidGoWindowed(int32_t width, int32_t height, DISPLAY_MODE *dispMode);</title></rect>
<rect width="12" height="12" x="15" y="255" class="decompiled"><title>void __cdecl WinVidSetDisplayAdapter(DISPLAY_ADAPTER *disp_adapter);</title></rect>
<rect width="12" height="12" x="30" y="255" class="decompiled"><title>bool __thiscall CompareVideoModes(const DISPLAY_MODE *mode1, const DISPLAY_MODE *mode2);</title></rect>
<rect width="12" height="12" x="45" y="255" class="decompiled"><title>bool __cdecl WinVidGetDisplayModes(void);</title></rect>
<rect width="12" height="12" x="60" y="255" class="decompiled"><title>HRESULT __stdcall EnumDisplayModesCallback(LPDDSDESC lpDDSurfaceDesc, LPVOID lpContext);</title></rect>
<rect width="12" height="12" x="75" y="255" class="decompiled"><title>bool __cdecl WinVidInit(void);</title></rect>
<rect width="12" height="12" x="90" y="255" class="decompiled"><title>bool __cdecl WinVidGetDisplayAdapters(void);</title></rect>
<rect width="12" height="12" x="105" y="255" class="decompiled"><title>void __thiscall S_FlaggedString_Delete(STRING_FLAGGED *string);</title></rect>
<rect width="12" height="12" x="120" y="255" class="decompiled"><title>bool __cdecl EnumerateDisplayAdapters(DISPLAY_ADAPTER_LIST *displayAdapterList);</title></rect>
<rect width="12" height="12" x="135" y="255" class="decompiled"><title>BOOL __stdcall EnumDisplayAdaptersCallback(GUID *lpGUID, LPTSTR lpDriverDescription, LPTSTR lpDriverName, LPVOID lpContext);</title></rect>
<rect width="12" height="12" x="150" y="255" class="decompiled"><title>void __thiscall S_FlaggedString_InitAdapter(DISPLAY_ADAPTER *adapter);</title></rect>
<rect width="12" height="12" x="165" y="255" class="decompiled"><title>bool __cdecl WinVidRegisterGameWindowClass(void);</title></rect>
<rect width="12" height="12" x="180" y="255" class="decompiled"><title>LRESULT __stdcall WinVidGameWindowProc(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="12" height="12" x="195" y="255" class="decompiled"><title>void __cdecl WinVidResizeGameWindow(HWND hWnd, int32_t edge, LPRECT rect);</title></rect>
<rect width="12" height="12" x="210" y="255" class="decompiled"><title>bool __cdecl WinVidCheckGameWindowPalette(HWND hWnd);</title></rect>
<rect width="12" height="12" x="225" y="255" class="decompiled"><title>bool __cdecl WinVidCreateGameWindow(void);</title></rect>
<rect width="12" height="12" x="240" y="255" class="decompiled"><title>void __cdecl WinVidFreeWindow(void);</title></rect>
<rect width="12" height="12" x="255" y="255" class="decompiled"><title>void __cdecl WinVidExitMessage(void);</title></rect>
<rect width="12" height="12" x="270" y="255" class="decompiled"><title>DISPLAY_ADAPTER_NODE *__cdecl WinVidGetDisplayAdapter(GUID *lpGuid);</title></rect>
<rect width="12" height="12" x="285" y="255" class="decompiled"><title>void __cdecl WinVidStart(void);</title></rect>
<rect width="12" height="12" x="300" y="255" class="decompiled"><title>void __cdecl WinVidFinish(void);</title></rect>
<rect width="12" height="12" x="315" y="255" class="decompiled"><title>void __thiscall DisplayModeListInit(DISPLAY_MODE_LIST *pList);</title></rect>
<rect width="12" height="12" x="330" y="255" class="decompiled"><title>void __thiscall DisplayModeListDelete(DISPLAY_MODE_LIST *pList);</title></rect>
<rect width="12" height="12" x="345" y="255" class="decompiled"><title>DISPLAY_MODE *__thiscall InsertDisplayMode(DISPLAY_MODE_LIST *modeList, DISPLAY_MODE_NODE *before);</title></rect>
<rect width="12" height="12" x="360" y="255" class="decompiled"><title>DISPLAY_MODE *__thiscall InsertDisplayModeInListHead(DISPLAY_MODE_LIST *modeList);</title></rect>
<rect width="12" height="12" x="375" y="255" class="decompiled"><title>DISPLAY_MODE *__thiscall InsertDisplayModeInListTail(DISPLAY_MODE_LIST *modeList);</title></rect>
<rect width="12" height="12" x="390" y="255" class="unused"><title>sub_4470B0</title></rect>
<rect width="12" height="12" x="405" y="255" class="unused"><title>sub_4470C0</title></rect>
<rect width="12" height="12" x="420" y="255" class="unused"><title>sub_4470F0</title></rect>
<rect width="12" height="12" x="435" y="255" class="unused"><title>sub_447160</title></rect>
<rect width="12" height="12" x="450" y="255" class="unused"><title>sub_447170</title></rect>
<rect width="12" height="12" x="465" y="255" class="unused"><title>sub_4471C0</title></rect>
<rect width="12" height="12" x="480" y="255" class="decompiled"><title>bool __cdecl DInputCreate(void);</title></rect>
<rect width="12" height="12" x="495" y="255" class="decompiled"><title>void __cdecl DInputRelease(void);</title></rect>
<rect width="12" height="12" x="510" y="255" class="decompiled"><title>void __cdecl WinInReadKeyboard(LPVOID lpInputData);</title></rect>
<rect width="12" height="12" x="525" y="255" class="known"><title>DWORD __cdecl WinInReadJoystick(int32_t *x, int32_t *y);</title></rect>
<rect width="12" height="12" x="540" y="255" class="unused"><title>sub_4473A0</title></rect>
<rect width="12" height="12" x="555" y="255" class="known"><title>bool __cdecl WinInputInit(void);</title></rect>
<rect width="12" height="12" x="570" y="255" class="known"><title>bool __cdecl DInputEnumDevices(JOYSTICK_LIST *joystickList);</title></rect>
<rect width="12" height="12" x="585" y="255" class="known"><title>BOOL __stdcall DInputEnumDevicesCallback(LPCDIDEVICEINSTANCE lpddi, LPVOID pvRef);</title></rect>
<rect width="12" height="12" x="600" y="255" class="decompiled"><title>void __thiscall S_FlaggedString_Create(STRING_FLAGGED *string, int32_t size);</title></rect>
<rect width="12" height="12" x="615" y="255" class="known"><title>JOYSTICK_NODE *__cdecl GetJoystick(GUID *lpGuid);</title></rect>
<rect width="12" height="12" x="630" y="255" class="known"><title>void __cdecl DInputKeyboardCreate(void);</title></rect>
<rect width="12" height="12" x="645" y="255" class="known"><title>void __cdecl DInputKeyboardRelease(void);</title></rect>
<rect width="12" height="12" x="660" y="255" class="known"><title>bool __cdecl DInputJoystickCreate(void);</title></rect>
<rect width="12" height="12" x="675" y="255" class="known"><title>void __cdecl WinInStart(void);</title></rect>
<rect width="12" height="12" x="690" y="255" class="known"><title>void __cdecl WinInFinish(void);</title></rect>
<rect width="12" height="12" x="705" y="255" class="known"><title>void __cdecl WinInRunControlPanel(HWND hWnd);</title></rect>
<rect width="12" height="12" x="720" y="255" class="known"><title>void __cdecl IncreaseScreenSize(void);</title></rect>
<rect width="12" height="12" x="735" y="255" class="known"><title>void __cdecl DecreaseScreenSize(void);</title></rect>
<rect width="12" height="12" x="0" y="270" class="known"><title>void __cdecl setup_screen_size(void);</title></rect>
<rect width="12" height="12" x="15" y="270" class="known"><title>void __cdecl TempVideoAdjust(int32_t hires, double sizer);</title></rect>
<rect width="12" height="12" x="30" y="270" class="known"><title>void __cdecl TempVideoRemove(void);</title></rect>
<rect width="12" height="12" x="45" y="270" class="known"><title>void __cdecl S_FadeInInventory(BOOL isFade);</title></rect>
<rect width="12" height="12" x="60" y="270" class="known"><title>void __cdecl S_FadeOutInventory(BOOL isFade);</title></rect>
<rect width="12" height="12" x="75" y="270" class="unused"><title>sub_447A80</title></rect>
<rect width="12" height="12" x="90" y="270" class="unused"><title>sub_447A90</title></rect>
<rect width="12" height="12" x="105" y="270" class="unused"><title>sub_447AC0</title></rect>
<rect width="12" height="12" x="120" y="270" class="unused"><title>sub_447B30</title></rect>
<rect width="12" height="12" x="135" y="270" class="unused"><title>sub_447B40</title></rect>
<rect width="12" height="12" x="150" y="270" class="unused"><title>sub_447B90</title></rect>
<rect width="12" height="12" x="165" y="270" class="decompiled"><title>const SOUND_ADAPTER_NODE *__cdecl S_Audio_Sample_GetAdapter(GUID *guid);</title></rect>
<rect width="12" height="12" x="180" y="270" class="decompiled"><title>void __cdecl S_Audio_Sample_CloseAllTracks(void);</title></rect>
<rect width="12" height="12" x="195" y="270" class="decompiled"><title>bool __cdecl S_Audio_Sample_Load(int32_t sample_id, LPWAVEFORMATEX format, const void *data, int32_t data_size);</title></rect>
<rect width="12" height="12" x="210" y="270" class="decompiled"><title>bool __cdecl S_Audio_Sample_IsTrackPlaying(int32_t track_id);</title></rect>
<rect width="12" height="12" x="225" y="270" class="decompiled"><title>int32_t __cdecl S_Audio_Sample_Play(int32_t sample_id, int32_t volume, int32_t pitch, int32_t pan, int32_t flags);</title></rect>
<rect width="12" height="12" x="240" y="270" class="decompiled"><title>int32_t __cdecl S_Audio_Sample_GetFreeTrackIndex(void);</title></rect>
<rect width="12" height="12" x="255" y="270" class="decompiled"><title>void __cdecl S_Audio_Sample_AdjustTrackVolumeAndPan(int32_t track_id, int32_t volume, int32_t pan);</title></rect>
<rect width="12" height="12" x="270" y="270" class="decompiled"><title>void __cdecl S_Audio_Sample_AdjustTrackPitch(int32_t track_id, int32_t pitch);</title></rect>
<rect width="12" height="12" x="285" y="270" class="decompiled"><title>void __cdecl S_Audio_Sample_CloseTrack(int32_t track_id);</title></rect>
<rect width="12" height="12" x="300" y="270" class="unused"><title>sub_447FA0</title></rect>
<rect width="12" height="12" x="315" y="270" class="decompiled"><title>bool __cdecl S_Audio_Sample_Init(void);</title></rect>
<rect width="12" height="12" x="330" y="270" class="decompiled"><title>bool __cdecl S_Audio_Sample_DSoundEnumerate(SOUND_ADAPTER_LIST *adapter_list);</title></rect>
<rect width="12" height="12" x="345" y="270" class="decompiled"><title>BOOL __stdcall S_Audio_Sample_DSoundEnumCallback(LPGUID guid, LPCTSTR description, LPCTSTR module, LPVOID context);</title></rect>
<rect width="12" height="12" x="360" y="270" class="decompiled"><title>void __cdecl S_Audio_Sample_Init2(HWND hwnd);</title></rect>
<rect width="12" height="12" x="375" y="270" class="decompiled"><title>bool __cdecl S_Audio_Sample_DSoundCreate(GUID *guid);</title></rect>
<rect width="12" height="12" x="390" y="270" class="decompiled"><title>bool __cdecl S_Audio_Sample_DSoundBufferTest(void);</title></rect>
<rect width="12" height="12" x="405" y="270" class="decompiled"><title>void __cdecl S_Audio_Sample_Shutdown(void);</title></rect>
<rect width="12" height="12" x="420" y="270" class="decompiled"><title>bool __cdecl S_Audio_Sample_IsEnabled(void);</title></rect>
<rect width="12" height="12" x="435" y="270" class="unused"><title>sub_448410</title></rect>
<rect width="12" height="12" x="450" y="270" class="unused"><title>sub_448420</title></rect>
<rect width="12" height="12" x="465" y="270" class="decompiled"><title>void __cdecl CreateScreenBuffers(void);</title></rect>
<rect width="12" height="12" x="480" y="270" class="decompiled"><title>void __cdecl CreatePrimarySurface(void);</title></rect>
<rect width="12" height="12" x="495" y="270" class="decompiled"><title>void __cdecl CreateBackBuffer(void);</title></rect>
<rect width="12" height="12" x="510" y="270" class="decompiled"><title>void __cdecl CreateClipper(void);</title></rect>
<rect width="12" height="12" x="525" y="270" class="decompiled"><title>void __cdecl CreateWindowPalette(void);</title></rect>
<rect width="12" height="12" x="540" y="270" class="decompiled"><title>void __cdecl CreateZBuffer(void);</title></rect>
<rect width="12" height="12" x="555" y="270" class="decompiled"><title>DWORD __cdecl GetZBufferDepth(void);</title></rect>
<rect width="12" height="12" x="570" y="270" class="decompiled"><title>void __cdecl CreateRenderBuffer(void);</title></rect>
<rect width="12" height="12" x="585" y="270" class="decompiled"><title>void __cdecl CreatePictureBuffer(void);</title></rect>
<rect width="12" height="12" x="600" y="270" class="decompiled"><title>void __cdecl ClearBuffers(DWORD flags, DWORD fill_color);</title></rect>
<rect width="12" height="12" x="615" y="270" class="decompiled"><title>void __cdecl RestoreLostBuffers(void);</title></rect>
<rect width="12" height="12" x="630" y="270" class="decompiled"><title>void __cdecl UpdateFrame(bool need_run_message_loop, LPRECT rect);</title></rect>
<rect width="12" height="12" x="645" y="270" class="decompiled"><title>void __cdecl WaitPrimaryBufferFlip(void);</title></rect>
<rect width="12" height="12" x="660" y="270" class="decompiled"><title>bool __cdecl RenderInit(void);</title></rect>
<rect width="12" height="12" x="675" y="270" class="decompiled"><title>void __cdecl RenderStart(bool is_reset);</title></rect>
<rect width="12" height="12" x="690" y="270" class="decompiled"><title>void __cdecl RenderFinish(bool need_to_clear_textures);</title></rect>
<rect width="12" height="12" x="705" y="270" class="decompiled"><title>bool __cdecl ApplySettings(APP_SETTINGS *new_settings);</title></rect>
<rect width="12" height="12" x="720" y="270" class="decompiled"><title>void __cdecl FmvBackToGame(void);</title></rect>
<rect width="12" height="12" x="735" y="270" class="decompiled"><title>void __cdecl GameApplySettings(APP_SETTINGS *new_settings);</title></rect>
<rect width="12" height="12" x="0" y="285" class="decompiled"><title>void __cdecl UpdateGameResolution(void);</title></rect>
<rect width="12" height="12" x="15" y="285" class="decompiled"><title>LPCTSTR __cdecl DecodeErrorMessage(DWORD error_code);</title></rect>
<rect width="12" height="12" x="30" y="285" class="known"><title>BOOL __cdecl ReadFileSync(HANDLE handle, LPVOID lpBuffer, DWORD nBytesToRead, LPDWORD lpnBytesRead, LPOVERLAPPED lpOverlapped);</title></rect>
<rect width="12" height="12" x="45" y="285" class="decompiled"><title>BOOL __cdecl Level_LoadTexturePages(HANDLE handle);</title></rect>
<rect width="12" height="12" x="60" y="285" class="decompiled"><title>BOOL __cdecl Level_LoadRooms(HANDLE handle);</title></rect>
<rect width="12" height="12" x="75" y="285" class="known"><title>void __cdecl AdjustTextureUVs(bool reset_uv_add);</title></rect>
<rect width="12" height="12" x="90" y="285" class="decompiled"><title>BOOL __cdecl Level_LoadObjects(HANDLE handle);</title></rect>
<rect width="12" height="12" x="105" y="285" class="decompiled"><title>BOOL __cdecl Level_LoadSprites(HANDLE handle);</title></rect>
<rect width="12" height="12" x="120" y="285" class="decompiled"><title>BOOL __cdecl Level_LoadItems(HANDLE handle);</title></rect>
<rect width="12" height="12" x="135" y="285" class="decompiled"><title>BOOL __cdecl Level_LoadDepthQ(HANDLE handle);</title></rect>
<rect width="12" height="12" x="150" y="285" class="decompiled"><title>BOOL __cdecl Level_LoadPalettes(HANDLE handle);</title></rect>
<rect width="12" height="12" x="165" y="285" class="decompiled"><title>BOOL __cdecl Level_LoadCameras(HANDLE handle);</title></rect>
<rect width="12" height="12" x="180" y="285" class="decompiled"><title>BOOL __cdecl Level_LoadSoundEffects(HANDLE handle);</title></rect>
<rect width="12" height="12" x="195" y="285" class="decompiled"><title>BOOL __cdecl Level_LoadBoxes(HANDLE handle);</title></rect>
<rect width="12" height="12" x="210" y="285" class="decompiled"><title>BOOL __cdecl Level_LoadAnimatedTextures(HANDLE handle);</title></rect>
<rect width="12" height="12" x="225" y="285" class="decompiled"><title>BOOL __cdecl Level_LoadCinematic(HANDLE handle);</title></rect>
<rect width="12" height="12" x="240" y="285" class="decompiled"><title>BOOL __cdecl Level_LoadDemo(HANDLE handle);</title></rect>
<rect width="12" height="12" x="255" y="285" class="decompiled"><title>void __cdecl Level_LoadDemoExternal(LPCTSTR level_name);</title></rect>
<rect width="12" height="12" x="270" y="285" class="decompiled"><title>BOOL __cdecl Level_LoadSamples(HANDLE handle);</title></rect>
<rect width="12" height="12" x="285" y="285" class="known"><title>void __cdecl ChangeFileNameExtension(char *file_name, const char *file_ext);</title></rect>
<rect width="12" height="12" x="300" y="285" class="known"><title>LPCTSTR __cdecl GetFullPath(LPCTSTR file_name);</title></rect>
<rect width="12" height="12" x="315" y="285" class="known"><title>BOOL __cdecl SelectDrive(void);</title></rect>
<rect width="12" height="12" x="330" y="285" class="decompiled"><title>bool __cdecl Level_Load(const char *file_name, int32_t level_num);</title></rect>
<rect width="12" height="12" x="345" y="285" class="known"><title>BOOL __cdecl S_LoadLevelFile(LPCTSTR file_name, int32_t level_num, GAMEFLOW_LEVEL_TYPE level_type);</title></rect>
<rect width="12" height="12" x="360" y="285" class="known"><title>void __cdecl S_UnloadLevelFile(void);</title></rect>
<rect width="12" height="12" x="375" y="285" class="known"><title>void __cdecl S_AdjustTexelCoordinates(void);</title></rect>
<rect width="12" height="12" x="390" y="285" class="known"><title>BOOL __cdecl S_ReloadLevelGraphics(BOOL reload_palettes, BOOL reload_tex_pages);</title></rect>
<rect width="12" height="12" x="405" y="285" class="decompiled"><title>BOOL __cdecl GF_ReadStringTable(DWORD count, char **string_table, char **string_buf, LPDWORD buf_size, HANDLE handle);</title></rect>
<rect width="12" height="12" x="420" y="285" class="decompiled"><title>BOOL __cdecl GF_LoadFromFile(const char *file_name);</title></rect>
<rect width="12" height="12" x="435" y="285" class="decompiled"><title>bool __cdecl PlayFMV(const char *file_name);</title></rect>
<rect width="12" height="12" x="450" y="285" class="decompiled"><title>void __cdecl WinPlayFMV(const char *file_name, bool is_playback);</title></rect>
<rect width="12" height="12" x="465" y="285" class="decompiled"><title>void __cdecl WinStopFMV(bool is_playback);</title></rect>
<rect width="12" height="12" x="480" y="285" class="decompiled"><title>bool __cdecl IntroFMV(const char *file_name1, const char *file_name2);</title></rect>
<rect width="12" height="12" x="495" y="285" class="known"><title>uint16_t __cdecl S_COLOR(int32_t red, int32_t green, int32_t blue);</title></rect>
<rect width="12" height="12" x="510" y="285" class="known"><title>void __cdecl S_DrawScreenLine(int32_t x, int32_t y, int32_t z, int32_t x_len, int32_t y_len, BYTE color_idx, D3DCOLOR *gour, uint16_t flags);</title></rect>
<rect width="12" height="12" x="525" y="285" class="known"><title>void __cdecl S_DrawScreenBox(int32_t sx, int32_t sy, int32_t z, int32_t width, int32_t height, BYTE color_idx, const GOURAUD_OUTLINE *gour, uint16_t flags);</title></rect>
<rect width="12" height="12" x="540" y="285" class="known"><title>void __cdecl S_DrawScreenFBox(int32_t sx, int32_t sy, int32_t z, int32_t width, int32_t height, BYTE color_idx, const GOURAUD_FILL *gour, uint16_t flags);</title></rect>
<rect width="12" height="12" x="555" y="285" class="known"><title>void __cdecl S_FinishInventory(void);</title></rect>
<rect width="12" height="12" x="570" y="285" class="known"><title>void __cdecl S_FadeToBlack(void);</title></rect>
<rect width="12" height="12" x="585" y="285" class="decompiled"><title>void __cdecl S_Wait(int32_t timeout, BOOL input_check);</title></rect>
<rect width="12" height="12" x="600" y="285" class="decompiled"><title>bool __cdecl S_PlayFMV(const char *file_name);</title></rect>
<rect width="12" height="12" x="615" y="285" class="decompiled"><title>bool __cdecl S_IntroFMV(const char *file_name1, const char *file_name2);</title></rect>
<rect width="12" height="12" x="630" y="285" class="decompiled"><title>int16_t __cdecl Game_Start(int32_t level_num, GAMEFLOW_LEVEL_TYPE level_type);</title></rect>
<rect width="12" height="12" x="645" y="285" class="decompiled"><title>int32_t __cdecl Game_Loop(bool demo_mode);</title></rect>
<rect width="12" height="12" x="660" y="285" class="decompiled"><title>int32_t __cdecl LevelCompleteSequence(void);</title></rect>
<rect width="12" height="12" x="675" y="285" class="decompiled"><title>int32_t __cdecl LevelStats(int32_t level_num);</title></rect>
<rect width="12" height="12" x="690" y="285" class="decompiled"><title>int32_t __cdecl GameStats(int32_t level_num);</title></rect>
<rect width="12" height="12" x="705" y="285" class="decompiled"><title>int32_t __cdecl Random_GetControl(void);</title></rect>
<rect width="12" height="12" x="720" y="285" class="decompiled"><title>void __cdecl Random_SeedControl(int32_t seed);</title></rect>
<rect width="12" height="12" x="735" y="285" class="decompiled"><title>int32_t __cdecl Random_GetDraw(void);</title></rect>
<rect width="12" height="12" x="0" y="300" class="decompiled"><title>void __cdecl Random_SeedDraw(int32_t seed);</title></rect>
<rect width="12" height="12" x="15" y="300" class="known"><title>void __cdecl GetValidLevelsList(REQUEST_INFO *req);</title></rect>
<rect width="12" height="12" x="30" y="300" class="known"><title>void __cdecl GetSavedGamesList(REQUEST_INFO *req);</title></rect>
<rect width="12" height="12" x="45" y="300" class="known"><title>void __cdecl DisplayCredits(void);</title></rect>
<rect width="12" height="12" x="60" y="300" class="known"><title>BOOL __cdecl S_FrontEndCheck(void);</title></rect>
<rect width="12" height="12" x="75" y="300" class="known"><title>int32_t __cdecl S_SaveGame(const void *save_data, uint32_t save_size, int32_t slot_num);</title></rect>
<rect width="12" height="12" x="90" y="300" class="known"><title>int32_t __cdecl S_LoadGame(void *save_data, uint32_t save_size, int32_t slot_num);</title></rect>
<rect width="12" height="12" x="105" y="300" class="decompiled"><title>void __cdecl HWR_InitState(void);</title></rect>
<rect width="12" height="12" x="120" y="300" class="decompiled"><title>void __cdecl HWR_ResetTexSource(void);</title></rect>
<rect width="12" height="12" x="135" y="300" class="decompiled"><title>void __cdecl HWR_ResetColorKey(void);</title></rect>
<rect width="12" height="12" x="150" y="300" class="decompiled"><title>void __cdecl HWR_ResetZBuffer(void);</title></rect>
<rect width="12" height="12" x="165" y="300" class="decompiled"><title>void __cdecl HWR_TexSource(HWR_TEXTURE_HANDLE tex_source);</title></rect>
<rect width="12" height="12" x="180" y="300" class="decompiled"><title>void __cdecl HWR_EnableColorKey(bool state);</title></rect>
<rect width="12" height="12" x="195" y="300" class="decompiled"><title>void __cdecl HWR_EnableZBuffer(bool z_write_enable, bool z_enable);</title></rect>
<rect width="12" height="12" x="210" y="300" class="decompiled"><title>void __cdecl HWR_BeginScene(void);</title></rect>
<rect width="12" height="12" x="225" y="300" class="decompiled"><title>void __cdecl HWR_DrawPolyList(void);</title></rect>
<rect width="12" height="12" x="240" y="300" class="decompiled"><title>void __cdecl HWR_LoadTexturePages(int32_t pages_count, void *pages_buf, RGB_888 *palette);</title></rect>
<rect width="12" height="12" x="255" y="300" class="decompiled"><title>void __cdecl HWR_FreeTexturePages(void);</title></rect>
<rect width="12" height="12" x="270" y="300" class="decompiled"><title>void __cdecl HWR_GetPageHandles(void);</title></rect>
<rect width="12" height="12" x="285" y="300" class="decompiled"><title>bool __cdecl HWR_VertexBufferFull(void);</title></rect>
<rect width="12" height="12" x="300" y="300" class="decompiled"><title>bool __cdecl HWR_Init(void);</title></rect>
<rect width="12" height="12" x="315" y="300" class="known"><title>BOOL __cdecl S_InitialiseSystem(void);</title></rect>
<rect width="12" height="12" x="330" y="300" class="known"><title>void __cdecl GameBuf_Shutdown(void);</title></rect>
<rect width="12" height="12" x="345" y="300" class="known"><title>void __cdecl init_game_malloc(void);</title></rect>
<rect width="12" height="12" x="360" y="300" class="known"><title>void *__cdecl game_malloc(size_t alloc_size, GAME_BUFFER buf_index);</title></rect>
<rect width="12" height="12" x="375" y="300" class="known"><title>void __cdecl game_free(size_t free_size);</title></rect>
<rect width="12" height="12" x="390" y="300" class="known"><title>void __cdecl CalculateWibbleTable(void);</title></rect>
<rect width="12" height="12" x="405" y="300" class="decompiled"><title>void __cdecl Random_Seed(void);</title></rect>
<rect width="12" height="12" x="420" y="300" class="decompiled"><title>BOOL __cdecl S_Input_Key(KEYMAP keymap);</title></rect>
<rect width="12" height="12" x="435" y="300" class="decompiled"><title>bool __cdecl Input_Update(void);</title></rect>
<rect width="12" height="12" x="450" y="300" class="decompiled"><title>int32_t __cdecl RenderErrorBox(int32_t error_code);</title></rect>
<rect width="12" height="12" x="465" y="300" class="decompiled"><title>int32_t __stdcall WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPTSTR lpCmdLine, int32_t nShowCmd);</title></rect>
<rect width="12" height="12" x="480" y="300" class="unused"><title>sub_44E6F0</title></rect>
<rect width="12" height="12" x="495" y="300" class="decompiled"><title>int32_t __cdecl GameInit(bool skip_cd_init);</title></rect>
<rect width="12" height="12" x="510" y="300" class="decompiled"><title>void __cdecl Shell_Cleanup(void);</title></rect>
<rect width="12" height="12" x="525" y="300" class="decompiled"><title>int32_t __cdecl WinGameStart(void);</title></rect>
<rect width="12" height="12" x="540" y="300" class="decompiled"><title>void __cdecl Shell_Shutdown(void);</title></rect>
<rect width="12" height="12" x="555" y="300" class="unused"><title>sub_44E860</title></rect>
<rect width="12" height="12" x="570" y="300" class="unused"><title>sub_44E880</title></rect>
<rect width="12" height="12" x="585" y="300" class="decompiled"><title>void __cdecl Shell_ExitSystem(const char *message);</title></rect>
<rect width="12" height="12" x="600" y="300" class="decompiled"><title>void __cdecl ScreenshotPCX(void);</title></rect>
<rect width="12" height="12" x="615" y="300" class="decompiled"><title>DWORD __cdecl CompPCX(BYTE *bitmap, DWORD width, DWORD height, RGB_888 *palette, BYTE **pcx_data);</title></rect>
<rect width="12" height="12" x="630" y="300" class="decompiled"><title>DWORD __cdecl EncodeLinePCX(BYTE *src, DWORD width, BYTE *dst);</title></rect>
<rect width="12" height="12" x="645" y="300" class="decompiled"><title>DWORD __cdecl EncodePutPCX(BYTE value, BYTE num, BYTE *buffer);</title></rect>
<rect width="12" height="12" x="660" y="300" class="decompiled"><title>void __cdecl Screenshot(LPDDS screen);</title></rect>
<rect width="12" height="12" x="675" y="300" class="decompiled"><title>void __cdecl Option_DoInventory(INVENTORY_ITEM *item);</title></rect>
<rect width="12" height="12" x="690" y="300" class="decompiled"><title>void __cdecl Option_Passport(INVENTORY_ITEM *item);</title></rect>
<rect width="12" height="12" x="705" y="300" class="decompiled"><title>void __cdecl Option_Detail(INVENTORY_ITEM *item);</title></rect>
<rect width="12" height="12" x="720" y="300" class="decompiled"><title>void __cdecl Option_Sound(INVENTORY_ITEM *item);</title></rect>
<rect width="12" height="12" x="735" y="300" class="decompiled"><title>void __cdecl Option_Compass(INVENTORY_ITEM *item);</title></rect>
<rect width="12" height="12" x="0" y="315" class="decompiled"><title>void __cdecl Option_Controls_FlashConflicts(void);</title></rect>
<rect width="12" height="12" x="15" y="315" class="decompiled"><title>void __cdecl Option_Controls_DefaultConflict(void);</title></rect>
<rect width="12" height="12" x="30" y="315" class="decompiled"><title>void __cdecl Option_Controls(INVENTORY_ITEM *item);</title></rect>
<rect width="12" height="12" x="45" y="315" class="decompiled"><title>void __cdecl Option_Controls_ShowControls(void);</title></rect>
<rect width="12" height="12" x="60" y="315" class="decompiled"><title>void __cdecl Option_Controls_UpdateText(void);</title></rect>
<rect width="12" height="12" x="75" y="315" class="decompiled"><title>void __cdecl S_RemoveCtrlText(void);</title></rect>
<rect width="12" height="12" x="90" y="315" class="known"><title>int32_t __cdecl GetRenderHeight(void);</title></rect>
<rect width="12" height="12" x="105" y="315" class="known"><title>int32_t __cdecl GetRenderWidth(void);</title></rect>
<rect width="12" height="12" x="120" y="315" class="known"><title>void __cdecl S_InitialisePolyList(BOOL clear_back_buffer);</title></rect>
<rect width="12" height="12" x="135" y="315" class="known"><title>DWORD __cdecl S_DumpScreen(void);</title></rect>
<rect width="12" height="12" x="150" y="315" class="known"><title>void __cdecl S_ClearScreen(void);</title></rect>
<rect width="12" height="12" x="165" y="315" class="known"><title>void __cdecl S_InitialiseScreen(GAMEFLOW_LEVEL_TYPE level_type);</title></rect>
<rect width="12" height="12" x="180" y="315" class="known"><title>void __cdecl S_OutputPolyList(void);</title></rect>
<rect width="12" height="12" x="195" y="315" class="known"><title>int32_t __cdecl S_GetObjectBounds(const BOUNDS_16 *bounds);</title></rect>
<rect width="12" height="12" x="210" y="315" class="known"><title>void __cdecl S_InsertBackPolygon(int32_t x0, int32_t y0, int32_t x1, int32_t y1);</title></rect>
<rect width="12" height="12" x="225" y="315" class="known"><title>void __cdecl S_PrintShadow(int16_t radius, const BOUNDS_16 *bounds, const ITEM *item);</title></rect>
<rect width="12" height="12" x="240" y="315" class="known"><title>void __cdecl S_CalculateLight(int32_t x, int32_t y, int32_t z, int16_t room_num);</title></rect>
<rect width="12" height="12" x="255" y="315" class="known"><title>void __cdecl S_CalculateStaticLight(int16_t adder);</title></rect>
<rect width="12" height="12" x="270" y="315" class="known"><title>void __cdecl S_CalculateStaticMeshLight(int32_t x, int32_t y, int32_t z, int32_t shade_1, int32_t shade_2, ROOM *room);</title></rect>
<rect width="12" height="12" x="285" y="315" class="known"><title>void __cdecl S_LightRoom(ROOM *room);</title></rect>
<rect width="12" height="12" x="300" y="315" class="known"><title>void __cdecl S_DrawHealthBar(int32_t percent);</title></rect>
<rect width="12" height="12" x="315" y="315" class="known"><title>void __cdecl S_DrawAirBar(int32_t percent);</title></rect>
<rect width="12" height="12" x="330" y="315" class="known"><title>void __cdecl AnimateTextures(int32_t ticks);</title></rect>
<rect width="12" height="12" x="345" y="315" class="known"><title>void __cdecl S_SetupBelowWater(BOOL underwater);</title></rect>
<rect width="12" height="12" x="360" y="315" class="known"><title>void __cdecl S_SetupAboveWater(BOOL underwater);</title></rect>
<rect width="12" height="12" x="375" y="315" class="known"><title>void __cdecl S_AnimateTextures(int32_t ticks);</title></rect>
<rect width="12" height="12" x="390" y="315" class="known"><title>void __cdecl S_DisplayPicture(const char *file_name, BOOL is_title);</title></rect>
<rect width="12" height="12" x="405" y="315" class="known"><title>void __cdecl S_SyncPictureBufferPalette(void);</title></rect>
<rect width="12" height="12" x="420" y="315" class="known"><title>void __cdecl S_DontDisplayPicture(void);</title></rect>
<rect width="12" height="12" x="435" y="315" class="known"><title>void __cdecl ScreenDump(void);</title></rect>
<rect width="12" height="12" x="450" y="315" class="known"><title>void __cdecl ScreenPartialDump(void);</title></rect>
<rect width="12" height="12" x="465" y="315" class="known"><title>void __cdecl FadeToPal(int32_t fade_value, RGB_888 *palette);</title></rect>
<rect width="12" height="12" x="480" y="315" class="known"><title>void __cdecl ScreenClear(bool is_phd_win_size);</title></rect>
<rect width="12" height="12" x="495" y="315" class="known"><title>void __cdecl S_CopyScreenToBuffer(void);</title></rect>
<rect width="12" height="12" x="510" y="315" class="known"><title>void __cdecl S_CopyBufferToScreen(void);</title></rect>
<rect width="12" height="12" x="525" y="315" class="known"><title>BOOL __cdecl DecompPCX(const uint8_t *pcx, size_t pcx_size, LPBYTE pic, RGB_888 *pal);</title></rect>
<rect width="12" height="12" x="540" y="315" class="unused"><title>sub_4523A0</title></rect>
<rect width="12" height="12" x="555" y="315" class="unused"><title>sub_4523B0</title></rect>
<rect width="12" height="12" x="570" y="315" class="known"><title>bool __cdecl OpenGameRegistryKey(LPCTSTR key);</title></rect>
<rect width="12" height="12" x="585" y="315" class="known"><title>LONG __cdecl CloseGameRegistryKey(void);</title></rect>
<rect width="12" height="12" x="600" y="315" class="known"><title>bool __cdecl SE_WriteAppSettings(APP_SETTINGS *settings);</title></rect>
<rect width="12" height="12" x="615" y="315" class="known"><title>int32_t __cdecl SE_ReadAppSettings(APP_SETTINGS *settings);</title></rect>
<rect width="12" height="12" x="630" y="315" class="known"><title>bool __cdecl SE_GraphicsTestStart(void);</title></rect>
<rect width="12" height="12" x="645" y="315" class="known"><title>void __cdecl SE_GraphicsTestFinish(void);</title></rect>
<rect width="12" height="12" x="660" y="315" class="known"><title>int32_t __cdecl SE_GraphicsTestExecute(void);</title></rect>
<rect width="12" height="12" x="675" y="315" class="known"><title>int32_t __cdecl SE_GraphicsTest(void);</title></rect>
<rect width="12" height="12" x="690" y="315" class="known"><title>bool __cdecl SE_SoundTestStart(void);</title></rect>
<rect width="12" height="12" x="705" y="315" class="known"><title>void __cdecl SE_SoundTestFinish(void);</title></rect>
<rect width="12" height="12" x="720" y="315" class="known"><title>int32_t __cdecl SE_SoundTestExecute(void);</title></rect>
<rect width="12" height="12" x="735" y="315" class="known"><title>int32_t __cdecl SE_SoundTest(void);</title></rect>
<rect width="12" height="12" x="0" y="330" class="known"><title>int32_t __stdcall SE_PropSheetCallback(HWND hwndDlg, UINT uMsg, LPARAM lParam);</title></rect>
<rect width="12" height="12" x="15" y="330" class="known"><title>LRESULT __stdcall SE_NewPropSheetWndProc(HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="12" height="12" x="30" y="330" class="known"><title>bool __cdecl SE_ShowSetupDialog(HWND hParent, bool isDefault);</title></rect>
<rect width="12" height="12" x="45" y="330" class="known"><title>INT_PTR __stdcall SE_GraphicsDlgProc(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="12" height="12" x="60" y="330" class="known"><title>void __cdecl SE_GraphicsDlgFullScreenModesUpdate(HWND hwndDlg);</title></rect>
<rect width="12" height="12" x="75" y="330" class="known"><title>void __cdecl SE_GraphicsAdapterSet(HWND hwndDlg, DISPLAY_ADAPTER_NODE *adapter);</title></rect>
<rect width="12" height="12" x="90" y="330" class="known"><title>void __cdecl SE_GraphicsDlgUpdate(HWND hwndDlg);</title></rect>
<rect width="12" height="12" x="105" y="330" class="known"><title>void __cdecl SE_GraphicsDlgInit(HWND hwndDlg);</title></rect>
<rect width="12" height="12" x="120" y="330" class="known"><title>INT_PTR __stdcall SE_SoundDlgProc(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="12" height="12" x="135" y="330" class="known"><title>void __cdecl SE_SoundAdapterSet(HWND hwndDlg, SOUND_ADAPTER_NODE *adapter);</title></rect>
<rect width="12" height="12" x="150" y="330" class="known"><title>void __cdecl SE_SoundDlgUpdate(HWND hwndDlg);</title></rect>
<rect width="12" height="12" x="165" y="330" class="known"><title>void __cdecl SE_SoundDlgInit(HWND hwndDlg);</title></rect>
<rect width="12" height="12" x="180" y="330" class="known"><title>INT_PTR __stdcall SE_ControlsDlgProc(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="12" height="12" x="195" y="330" class="known"><title>void __cdecl SE_ControlsJoystickSet(HWND hwndDlg, JOYSTICK_NODE *joystick);</title></rect>
<rect width="12" height="12" x="210" y="330" class="known"><title>void __cdecl SE_ControlsDlgUpdate(HWND hwndDlg);</title></rect>
<rect width="12" height="12" x="225" y="330" class="known"><title>void __cdecl SE_ControlsDlgInit(HWND hwndDlg);</title></rect>
<rect width="12" height="12" x="240" y="330" class="known"><title>INT_PTR __stdcall SE_OptionsDlgProc(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="12" height="12" x="255" y="330" class="known"><title>void __cdecl SE_OptionsDlgUpdate(HWND hwndDlg);</title></rect>
<rect width="12" height="12" x="270" y="330" class="known"><title>void __cdecl SE_OptionsStrCat(LPTSTR *dstString, bool isEnabled, bool *isNext, LPCTSTR srcString);</title></rect>
<rect width="12" height="12" x="285" y="330" class="known"><title>INT_PTR __stdcall SE_AdvancedDlgProc(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="12" height="12" x="300" y="330" class="known"><title>void __cdecl SE_AdvancedDlgUpdate(HWND hwndDlg);</title></rect>
<rect width="12" height="12" x="315" y="330" class="known"><title>void __cdecl SE_AdvancedDlgInit(HWND hwndDlg);</title></rect>
<rect width="12" height="12" x="330" y="330" class="known"><title>HWND __cdecl SE_FindSetupDialog(void);</title></rect>
<rect width="12" height="12" x="345" y="330" class="decompiled"><title>BOOL __cdecl Shell_Main(void);</title></rect>
<rect width="12" height="12" x="360" y="330" class="decompiled"><title>int16_t __cdecl TitleSequence(void);</title></rect>
<rect width="12" height="12" x="375" y="330" class="known"><title>void __cdecl CheckCheatMode(void);</title></rect>
<rect width="12" height="12" x="390" y="330" class="decompiled"><title>void __cdecl S_SaveSettings(void);</title></rect>
<rect width="12" height="12" x="405" y="330" class="decompiled"><title>void __cdecl S_LoadSettings(void);</title></rect>
<rect width="12" height="12" x="420" y="330" class="decompiled"><title>int32_t __cdecl S_Audio_Sample_OutPlay(int32_t sample_id, uint16_t volume, int32_t pitch, int32_t pan);</title></rect>
<rect width="12" height="12" x="435" y="330" class="decompiled"><title>int32_t __cdecl S_Audio_Sample_CalculateSampleVolume(int32_t volume);</title></rect>
<rect width="12" height="12" x="450" y="330" class="decompiled"><title>int32_t __cdecl S_Audio_Sample_CalculateSamplePan(int16_t pan);</title></rect>
<rect width="12" height="12" x="465" y="330" class="decompiled"><title>int32_t __cdecl S_Audio_Sample_OutPlayLooped(int32_t track_id, uint16_t volume, int32_t pitch, int32_t pan);</title></rect>
<rect width="12" height="12" x="480" y="330" class="decompiled"><title>void __cdecl S_Audio_Sample_OutSetPanAndVolume(int32_t track_id, int32_t pan, uint16_t volume);</title></rect>
<rect width="12" height="12" x="495" y="330" class="decompiled"><title>void __cdecl S_Audio_Sample_OutSetPitch(int32_t track_id, int32_t pitch);</title></rect>
<rect width="12" height="12" x="510" y="330" class="decompiled"><title>void __cdecl Sound_SetMasterVolume(int32_t volume);</title></rect>
<rect width="12" height="12" x="525" y="330" class="decompiled"><title>void __cdecl S_Audio_Sample_OutCloseTrack(int32_t track_id);</title></rect>
<rect width="12" height="12" x="540" y="330" class="decompiled"><title>void __cdecl S_Audio_Sample_OutCloseAllTracks(void);</title></rect>
<rect width="12" height="12" x="555" y="330" class="decompiled"><title>BOOL __cdecl S_Audio_Sample_OutIsTrackPlaying(int32_t track_id);</title></rect>
<rect width="12" height="12" x="570" y="330" class="decompiled"><title>bool __cdecl Music_Init(void);</title></rect>
<rect width="12" height="12" x="585" y="330" class="decompiled"><title>void __cdecl Music_Shutdown(void);</title></rect>
<rect width="12" height="12" x="600" y="330" class="decompiled"><title>void __cdecl Music_Play(int16_t track_id, bool is_looped);</title></rect>
<rect width="12" height="12" x="615" y="330" class="decompiled"><title>void __cdecl Music_Stop(void);</title></rect>
<rect width="12" height="12" x="630" y="330" class="decompiled"><title>bool __cdecl Music_PlaySynced(int32_t track_id);</title></rect>
<rect width="12" height="12" x="645" y="330" class="decompiled"><title>int32_t __cdecl Music_GetFrames(void);</title></rect>
<rect width="12" height="12" x="660" y="330" class="decompiled"><title>void __cdecl Music_SetVolume(int32_t volume);</title></rect>
<rect width="12" height="12" x="675" y="330" class="known"><title>void __cdecl CopyBitmapPalette(RGB_888 *src_pal, BYTE *src_bitmap, int32_t bitmap_size, RGB_888 *dest_pal);</title></rect>
<rect width="12" height="12" x="690" y="330" class="known"><title>BYTE __cdecl FindNearestPaletteEntry(RGB_888 *palette, int32_t red, int32_t green, int32_t blue, bool ignore_sys_palette);</title></rect>
<rect width="12" height="12" x="705" y="330" class="known"><title>void __cdecl SyncSurfacePalettes(void *src_data, int32_t width, int32_t height, int32_t src_pitch, RGB_888 *src_palette, void *dst_data, int32_t dst_pitch, RGB_888 *dst_palette, bool preserve_sys_palette);</title></rect>
<rect width="12" height="12" x="720" y="330" class="known"><title>int32_t __cdecl CreateTexturePalette(const RGB_888 *pal);</title></rect>
<rect width="12" height="12" x="735" y="330" class="known"><title>int32_t __cdecl GetFreePaletteIndex(void);</title></rect>
<rect width="12" height="12" x="0" y="345" class="known"><title>void __cdecl FreePalette(int32_t palette_idx);</title></rect>
<rect width="12" height="12" x="15" y="345" class="known"><title>void __cdecl SafeFreePalette(int32_t palette_idx);</title></rect>
<rect width="12" height="12" x="30" y="345" class="known"><title>int32_t __cdecl CreateTexturePage(int32_t width, int32_t height, bool alpha);</title></rect>
<rect width="12" height="12" x="45" y="345" class="known"><title>int32_t __cdecl GetFreeTexturePageIndex(void);</title></rect>
<rect width="12" height="12" x="60" y="345" class="known"><title>bool __cdecl CreateTexturePageSurface(TEXPAGE_DESC *desc);</title></rect>
<rect width="12" height="12" x="75" y="345" class="known"><title>bool __cdecl TexturePageInit(TEXPAGE_DESC *page);</title></rect>
<rect width="12" height="12" x="90" y="345" class="known"><title>LPDIRECT3DTEXTURE2 __cdecl Create3DTexture(LPDDS surface);</title></rect>
<rect width="12" height="12" x="105" y="345" class="known"><title>void __cdecl SafeFreeTexturePage(int32_t page_idx);</title></rect>
<rect width="12" height="12" x="120" y="345" class="known"><title>void __cdecl FreeTexturePage(int32_t page_idx);</title></rect>
<rect width="12" height="12" x="135" y="345" class="known"><title>void __cdecl TexturePageReleaseVidMemSurface(TEXPAGE_DESC *page);</title></rect>
<rect width="12" height="12" x="150" y="345" class="known"><title>void __cdecl FreeTexturePages(void);</title></rect>
<rect width="12" height="12" x="165" y="345" class="known"><title>bool __cdecl LoadTexturePage(int32_t page_idx, bool reset);</title></rect>
<rect width="12" height="12" x="180" y="345" class="known"><title>bool __cdecl ReloadTextures(bool reset);</title></rect>
<rect width="12" height="12" x="195" y="345" class="known"><title>HWR_TEXTURE_HANDLE __cdecl GetTexturePageHandle(int32_t page_idx);</title></rect>
<rect width="12" height="12" x="210" y="345" class="known"><title>int32_t __cdecl AddTexturePage8(int32_t width, int32_t height, const uint8_t *page_buf, int32_t pal_idx);</title></rect>
<rect width="12" height="12" x="225" y="345" class="known"><title>int32_t __cdecl AddTexturePage16(int32_t width, int32_t height, const uint8_t *page_buf);</title></rect>
<rect width="12" height="12" x="240" y="345" class="known"><title>HRESULT __stdcall EnumTextureFormatsCallback(LPDDSDESC lpDdsd, LPVOID lpContext);</title></rect>
<rect width="12" height="12" x="255" y="345" class="known"><title>HRESULT __cdecl EnumerateTextureFormats(void);</title></rect>
<rect width="12" height="12" x="270" y="345" class="known"><title>void __cdecl CleanupTextures(void);</title></rect>
<rect width="12" height="12" x="285" y="345" class="known"><title>bool __cdecl InitTextures(void);</title></rect>
<rect width="12" height="12" x="300" y="345" class="known"><title>void __cdecl UpdateTicks(void);</title></rect>
<rect width="12" height="12" x="315" y="345" class="known"><title>bool __cdecl TIME_Init(void);</title></rect>
<rect width="12" height="12" x="330" y="345" class="known"><title>DWORD __cdecl Sync(void);</title></rect>
<rect width="12" height="12" x="345" y="345" class="known"><title>LPVOID __cdecl UT_LoadResource(LPCTSTR lpName, LPCTSTR lpType);</title></rect>
<rect width="12" height="12" x="360" y="345" class="known"><title>void __cdecl UT_InitAccurateTimer(void);</title></rect>
<rect width="12" height="12" x="375" y="345" class="known"><title>double __cdecl UT_Microseconds(void);</title></rect>
<rect width="12" height="12" x="390" y="345" class="known"><title>BOOL __cdecl UT_CenterWindow(HWND hWnd);</title></rect>
<rect width="12" height="12" x="405" y="345" class="known"><title>LPTSTR __cdecl UT_FindArg(LPCTSTR str);</title></rect>
<rect width="12" height="12" x="420" y="345" class="known"><title>int32_t __cdecl UT_MessageBox(LPCTSTR lpText, HWND hWnd);</title></rect>
<rect width="12" height="12" x="435" y="345" class="known"><title>int32_t __cdecl UT_ErrorBox(UINT uID, HWND hWnd);</title></rect>
<rect width="12" height="12" x="450" y="345" class="known"><title>LPCTSTR __cdecl GuidBinaryToString(GUID *guid);</title></rect>
<rect width="12" height="12" x="465" y="345" class="known"><title>bool __cdecl GuidStringToBinary(LPCTSTR lpString, GUID *guid);</title></rect>
<rect width="12" height="12" x="480" y="345" class="known"><title>BOOL __cdecl OpenRegistryKey(LPCTSTR lpSubKey);</title></rect>
<rect width="12" height="12" x="495" y="345" class="known"><title>bool __cdecl IsNewRegistryKeyCreated(void);</title></rect>
<rect width="12" height="12" x="510" y="345" class="known"><title>LONG __cdecl CloseRegistryKey(void);</title></rect>
<rect width="12" height="12" x="525" y="345" class="known"><title>LONG __cdecl SetRegistryDwordValue(LPCTSTR lpValueName, DWORD value);</title></rect>
<rect width="12" height="12" x="540" y="345" class="known"><title>LONG __cdecl SetRegistryBoolValue(LPCTSTR lpValueName, bool value);</title></rect>
<rect width="12" height="12" x="555" y="345" class="known"><title>LONG __cdecl SetRegistryFloatValue(LPCTSTR lpValueName, double value);</title></rect>
<rect width="12" height="12" x="570" y="345" class="known"><title>LONG __cdecl SetRegistryBinaryValue(LPCTSTR lpValueName, LPBYTE value, DWORD valueSize);</title></rect>
<rect width="12" height="12" x="585" y="345" class="known"><title>LONG __cdecl SetRegistryStringValue(LPCTSTR lpValueName, LPCTSTR value, int32_t length);</title></rect>
<rect width="12" height="12" x="600" y="345" class="known"><title>LONG __cdecl DeleteRegistryValue(LPCTSTR lpValueName);</title></rect>
<rect width="12" height="12" x="615" y="345" class="known"><title>bool __cdecl GetRegistryDwordValue(LPCTSTR lpValueName, DWORD *pValue, DWORD defaultValue);</title></rect>
<rect width="12" height="12" x="630" y="345" class="known"><title>bool __cdecl GetRegistryBoolValue(LPCTSTR lpValueName, bool *pValue, bool defaultValue);</title></rect>
<rect width="12" height="12" x="645" y="345" class="known"><title>bool __cdecl GetRegistryFloatValue(LPCTSTR lpValueName, double *value, double defaultValue);</title></rect>
<rect width="12" height="12" x="660" y="345" class="known"><title>bool __cdecl GetRegistryBinaryValue(LPCTSTR lpValueName, LPBYTE value, DWORD valueSize, LPBYTE defaultValue);</title></rect>
<rect width="12" height="12" x="675" y="345" class="known"><title>bool __cdecl GetRegistryStringValue(LPCTSTR lpValueName, LPTSTR value, DWORD maxSize, LPCTSTR defaultValue);</title></rect>
<rect width="12" height="12" x="690" y="345" class="known"><title>bool __cdecl GetRegistryGuidValue(LPCTSTR lpValueName, GUID *value, GUID *defaultValue);</title></rect>
<rect width="12" height="12" x="705" y="345" class="known"><title>void __thiscall SE_ReleaseBitmapResource(BITMAP_RESOURCE *bmpRsrc);</title></rect>
<rect width="12" height="12" x="720" y="345" class="known"><title>void __thiscall SE_LoadBitmapResource(BITMAP_RESOURCE *bmpRsrc, LPCTSTR lpName);</title></rect>
<rect width="12" height="12" x="735" y="345" class="known"><title>void __thiscall SE_DrawBitmap(BITMAP_RESOURCE *bmpRsrc, HDC hdc, int32_t x, int32_t y);</title></rect>
<rect width="12" height="12" x="0" y="360" class="known"><title>void __thiscall SE_UpdateBitmapPalette(BITMAP_RESOURCE *bmpRsrc, HWND hWnd, HWND hSender);</title></rect>
<rect width="12" height="12" x="15" y="360" class="known"><title>void __thiscall SE_ChangeBitmapPalette(BITMAP_RESOURCE *bmpRsrc, HWND hWnd);</title></rect>
<rect width="12" height="12" x="30" y="360" class="known"><title>bool __cdecl SE_RegisterSetupWindowClass(void);</title></rect>
<rect width="12" height="12" x="45" y="360" class="known"><title>LRESULT __stdcall SE_SetupWindowProc(HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="12" height="12" x="60" y="360" class="known"><title>void __cdecl SE_PassMessageToImage(HWND hWnd, UINT uMsg, WPARAM wParam);</title></rect>
<rect width="12" height="12" x="75" y="360" class="known"><title>void __cdecl UT_MemBlt(BYTE *dstBuf, DWORD dstX, DWORD dstY, DWORD width, DWORD height, DWORD dstPitch, BYTE *srcBuf, DWORD srcX, DWORD srcY, DWORD srcPitch);</title></rect>
<rect width="12" height="12" x="90" y="360" class="decompiled"><title>void __cdecl Matrix_Push(void);</title></rect>
<rect width="12" height="12" x="105" y="360" class="decompiled"><title>void __cdecl Matrix_PushUnit(void);</title></rect>
<rect width="12" height="12" x="120" y="360" class="decompiled"><title>void __fastcall Output_FlatA(int32_t y0, int32_t y1, uint8_t color_idx); // actually, __watcall, which is esoteric and rarely supported</title></rect>
<rect width="12" height="12" x="135" y="360" class="decompiled"><title>void __fastcall Output_TransA(int32_t y0, int32_t y1, uint8_t depth_q); // actually, __watcall, which is esoteric and rarely supported</title></rect>
<rect width="12" height="12" x="150" y="360" class="decompiled"><title>void __fastcall Output_GourA(int32_t y0, int32_t y1, uint8_t color_idx); // actually, __watcall, which is esoteric and rarely supported</title></rect>
<rect width="12" height="12" x="165" y="360" class="decompiled"><title>void __fastcall Output_GTMapA(int32_t y0, int32_t y1, uint8_t *tex_page); // actually, __watcall, which is esoteric and rarely supported</title></rect>
<rect width="12" height="12" x="180" y="360" class="decompiled"><title>void __fastcall Output_WGTMapA(int32_t y0, int32_t y1, uint8_t *tex_page); // actually, __watcall, which is esoteric and rarely supported</title></rect>
<rect width="12" height="12" x="195" y="360" class="decompiled"><title>int32_t __fastcall Math_Atan(int32_t x, int32_t y);</title></rect>
<rect width="12" height="12" x="210" y="360" class="decompiled"><title>int32_t __fastcall Math_Cos(int16_t angle);</title></rect>
<rect width="12" height="12" x="225" y="360" class="decompiled"><title>int32_t __fastcall Math_Sin(int16_t angle);</title></rect>
<rect width="12" height="12" x="240" y="360" class="decompiled"><title>int32_t __fastcall Math_SinImpl(int16_t angle);</title></rect>
<rect width="12" height="12" x="255" y="360" class="decompiled"><title>uint32_t  __fastcall Math_Sqrt(uint32_t n);</title></rect>
<rect width="12" height="12" x="270" y="360" class="decompiled"><title>int __cdecl Player_PlayFrame(LPVOID, LPVOID, LPVOID, DWORD, LPCRECT, DWORD, DWORD, DWORD);</title></rect>
<rect width="12" height="12" x="285" y="360" class="decompiled"><title>int __cdecl Movie_GetTotalFrames(LPVOID);</title></rect>
<rect width="12" height="12" x="300" y="360" class="decompiled"><title>int __cdecl Movie_GetCurrentFrame(LPVOID);</title></rect>
<rect width="12" height="12" x="315" y="360" class="decompiled"><title>int __cdecl Player_StartTimer(LPVOID);</title></rect>
<rect width="12" height="12" x="330" y="360" class="decompiled"><title>int __cdecl Player_InitMoviePlayback(LPVOID, LPVOID, LPVOID);</title></rect>
<rect width="12" height="12" x="345" y="360" class="decompiled"><title>int __cdecl Movie_SetSyncAdjust(LPVOID, LPVOID, DWORD);</title></rect>
<rect width="12" height="12" x="360" y="360" class="decompiled"><title>int __cdecl Player_InitSound(LPVOID, DWORD, DWORD, BOOL, DWORD, DWORD, DWORD, DWORD, DWORD);</title></rect>
<rect width="12" height="12" x="375" y="360" class="decompiled"><title>int __cdecl Movie_GetSoundChannels(LPVOID);</title></rect>
<rect width="12" height="12" x="390" y="360" class="decompiled"><title>int __cdecl Movie_GetSoundRate(LPVOID);</title></rect>
<rect width="12" height="12" x="405" y="360" class="decompiled"><title>int __cdecl Movie_GetSoundPrecision(LPVOID);</title></rect>
<rect width="12" height="12" x="420" y="360" class="decompiled"><title>int __cdecl Player_GetDSErrorCode(void);</title></rect>
<rect width="12" height="12" x="435" y="360" class="decompiled"><title>int __cdecl Player_InitSoundSystem(HWND);</title></rect>
<rect width="12" height="12" x="450" y="360" class="decompiled"><title>int __cdecl Player_BlankScreen(DWORD, DWORD, DWORD, DWORD);</title></rect>
<rect width="12" height="12" x="465" y="360" class="decompiled"><title>int __cdecl Player_InitPlaybackMode(HWND, LPVOID, DWORD, DWORD);</title></rect>
<rect width="12" height="12" x="480" y="360" class="decompiled"><title>int __cdecl Player_InitVideo(LPVOID, LPVOID, DWORD, DWORD, DWORD, DWORD, DWORD, DWORD, DWORD, DWORD, DWORD, DWORD, DWORD);</title></rect>
<rect width="12" height="12" x="495" y="360" class="decompiled"><title>int __cdecl Movie_GetXSize(LPVOID);</title></rect>
<rect width="12" height="12" x="510" y="360" class="decompiled"><title>int __cdecl Movie_GetYSize(LPVOID);</title></rect>
<rect width="12" height="12" x="525" y="360" class="decompiled"><title>int __cdecl Movie_GetFormat(LPVOID);</title></rect>
<rect width="12" height="12" x="540" y="360" class="decompiled"><title>int __cdecl Player_InitMovie(LPVOID, DWORD, DWORD, LPCTSTR, DWORD);</title></rect>
<rect width="12" height="12" x="555" y="360" class="decompiled"><title>int __cdecl Player_PassInDirectDrawObject(LPDIRECTDRAW3);</title></rect>
<rect width="12" height="12" x="570" y="360" class="decompiled"><title>int __cdecl Player_ReturnPlaybackMode(BOOL);</title></rect>
<rect width="12" height="12" x="585" y="360" class="decompiled"><title>int __cdecl Player_ShutDownSoundSystem(void);</title></rect>
<rect width="12" height="12" x="600" y="360" class="decompiled"><title>int __cdecl Player_ShutDownMovie(LPVOID);</title></rect>
<rect width="12" height="12" x="615" y="360" class="decompiled"><title>int __cdecl Player_ShutDownVideo(LPVOID);</title></rect>
<rect width="12" height="12" x="630" y="360" class="decompiled"><title>int __cdecl Player_ShutDownSound(LPVOID);</title></rect>
<rect width="12" height="12" x="645" y="360" class="decompiled"><title>int __cdecl Player_StopTimer(LPVOID);</title></rect>
</g>
</g>
<g transform="translate(0 546)">
<text x="0" y="7.50">Tomb2.exe progress according to the function sizes:</text>
<text class="todo" style="font-size: 12px; " x="747" y="9"><tspan text-anchor="end"><tspan class="decompiled">73.55%</tspan> · <tspan class="known">26.12%</tspan> · <tspan class="todo">0%</tspan> · <tspan class="unused">0.33%</tspan></tspan></text>
<g transform="translate(0 20)">
<rect width="549.45" height="6" x="0" y="0" class="decompiled"/>
<rect width="195.11" height="6" x="549.45" y="0" class="known"/>
<rect width="2.44" height="6" x="744.56" y="0" class="unused"/>
</g>
<g transform="translate(0 31)">
<rect width="57.98" height="69.33" x="0" y="0" class="decompiled"><title>void __cdecl Output_WGTMapPersp32FP(int32_t y1, int32_t y2, uint8_t *tex_page);</title></rect>
<rect width="57.98" height="58.37" x="0" y="72.33" class="decompiled"><title>int32_t __cdecl Inv_Display(int32_t inventory_mode);</title></rect>
<rect width="57.98" height="53.54" x="0" y="133.70" class="decompiled"><title>void __cdecl Object_SetupBaddyObjects(void);</title></rect>
<rect width="57.98" height="51.94" x="0" y="190.24" class="decompiled"><title>void __cdecl Output_GTMapPersp32FP(int32_t y1, int32_t y2, uint8_t *tex_page);</title></rect>
<rect width="57.98" height="42.31" x="0" y="245.18" class="decompiled"><title>void __cdecl Lara_Draw(const ITEM *item);</title></rect>
<rect width="57.98" height="41.67" x="0" y="290.49" class="decompiled"><title>void __cdecl GF_ModifyInventory(int32_t level, int32_t type);</title></rect>
<rect width="57.98" height="39.83" x="0" y="335.17" class="known"><title>void __cdecl Object_SetupGeneralObjects(void);</title></rect>
<rect width="40.15" height="54.95" x="60.98" y="0" class="decompiled"><title>void __cdecl Lara_Draw_I(const ITEM *item, const FRAME_INFO *frame1, const FRAME_INFO *frame2, int32_t frac, int32_t rate);</title></rect>
<rect width="40.15" height="49.99" x="60.98" y="57.95" class="decompiled"><title>bool __cdecl Input_Update(void);</title></rect>
<rect width="40.15" height="47.99" x="60.98" y="110.94" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectGT4(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="40.15" height="45.70" x="60.98" y="161.94" class="known"><title>void __cdecl HairControl(int32_t in_cutscene);</title></rect>
<rect width="40.15" height="40.30" x="60.98" y="210.64" class="decompiled"><title>int32_t __cdecl Creature_Animate(int16_t item_num, int16_t angle, int16_t tilt);</title></rect>
<rect width="40.15" height="38.57" x="60.98" y="253.94" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectGT3(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="40.15" height="38.34" x="60.98" y="295.51" class="decompiled"><title>int32_t __cdecl Requester_Display(REQUEST_INFO *req, int32_t des, int32_t backgrounds);</title></rect>
<rect width="40.15" height="38.15" x="60.98" y="336.85" class="known"><title>void __cdecl ExtractSaveGameInfo(void);</title></rect>
<rect width="35.20" height="38.72" x="104.13" y="0" class="decompiled"><title>void __cdecl Camera_SmartShift(GAME_VECTOR *target, void (*__cdecl shift)(int32_t *x, int32_t *y, int32_t *h, int32_t target_x, int32_t target_y, int32_t target_h, int32_t left, int32_t top, int32_t right, int32_t bottom));</title></rect>
<rect width="35.20" height="37.07" x="104.13" y="41.72" class="known"><title>void __cdecl SE_GraphicsDlgUpdate(HWND hwndDlg);</title></rect>
<rect width="35.20" height="36.05" x="104.13" y="81.80" class="decompiled"><title>void __cdecl Output_InsertGT3_Sorted(const PHD_VBUF *vtx0, const PHD_VBUF *vtx1, const PHD_VBUF *vtx2, const PHD_TEXTURE *texture, const PHD_UV *uv0, const PHD_UV *uv1, const PHD_UV *uv2, SORT_TYPE sort_type);</title></rect>
<rect width="35.20" height="35.66" x="104.13" y="120.85" class="decompiled"><title>void __cdecl Option_Controls(INVENTORY_ITEM *item);</title></rect>
<rect width="35.20" height="34.90" x="104.13" y="159.51" class="decompiled"><title>BOOL __cdecl GF_LoadFromFile(const char *file_name);</title></rect>
<rect width="35.20" height="34.49" x="104.13" y="197.42" class="decompiled"><title>int32_t __cdecl Inv_AddItem(GAME_OBJECT_ID object_id);</title></rect>
<rect width="35.20" height="33.49" x="104.13" y="234.91" class="decompiled"><title>void __cdecl Room_TestTriggers(int16_t *data, int32_t heavy);</title></rect>
<rect width="35.20" height="33.06" x="104.13" y="271.40" class="decompiled"><title>void __cdecl Collide_GetCollisionInfo(COLL_INFO *coll, int32_t xpos, int32_t ypos, int32_t zpos, int16_t room_num, int32_t obj_height);</title></rect>
<rect width="35.20" height="32.62" x="104.13" y="307.45" class="decompiled"><title>void __cdecl Lara_Control(int16_t item_num);</title></rect>
<rect width="35.20" height="31.93" x="104.13" y="343.07" class="decompiled"><title>void __cdecl Option_Passport(INVENTORY_ITEM *item);</title></rect>
<rect width="31.67" height="35.34" x="142.32" y="0" class="decompiled"><title>void __cdecl Output_InsertGT3_ZBuffered(const PHD_VBUF *vtx0, const PHD_VBUF *vtx1, const PHD_VBUF *vtx2, const PHD_TEXTURE *texture, const PHD_UV *uv0, const PHD_UV *uv1, const PHD_UV *uv2);</title></rect>
<rect width="31.67" height="34.77" x="142.32" y="38.34" class="decompiled"><title>void __cdecl Boat_Control(int16_t item_num);</title></rect>
<rect width="31.67" height="33.69" x="142.32" y="76.11" class="known"><title>void __cdecl Object_SetupTrapObjects(void);</title></rect>
<rect width="31.67" height="33.31" x="142.32" y="112.80" class="known"><title>void __cdecl Yeti_Control(int16_t item_num);</title></rect>
<rect width="31.67" height="32.16" x="142.32" y="149.10" class="known"><title>void __cdecl Worker3_Control(int16_t item_num);</title></rect>
<rect width="31.67" height="31.08" x="142.32" y="184.26" class="known"><title>void __cdecl XianSpearman_Control(int16_t item_num);</title></rect>
<rect width="31.67" height="30.65" x="142.32" y="218.34" class="decompiled"><title>BOOL __cdecl Level_LoadObjects(HANDLE handle);</title></rect>
<rect width="31.67" height="29.07" x="142.32" y="251.99" class="known"><title>void __cdecl Cultist3_Control(int16_t item_num);</title></rect>
<rect width="31.67" height="28.66" x="142.32" y="284.06" class="known"><title>void __cdecl CreateSaveGameInfo(void);</title></rect>
<rect width="31.67" height="28.23" x="142.32" y="315.73" class="decompiled"><title>void __cdecl Dragon_Control(int16_t back_num);</title></rect>
<rect width="31.67" height="28.04" x="142.32" y="346.96" class="decompiled"><title>int32_t __cdecl Output_XYGUVClipper(int32_t vtx_count, VERTEX_INFO *vtx);</title></rect>
<rect width="28.59" height="29.99" x="176.99" y="0" class="decompiled"><title>void __cdecl Gun_Control(void);</title></rect>
<rect width="28.59" height="29.70" x="176.99" y="32.99" class="decompiled"><title>int32_t __cdecl Boat_Dynamics(int16_t boat_num);</title></rect>
<rect width="28.59" height="29.54" x="176.99" y="65.69" class="decompiled"><title>void __cdecl Output_InsertGT4_Sorted(const PHD_VBUF *vtx0, const PHD_VBUF *vtx1, const PHD_VBUF *vtx2, const PHD_VBUF *vtx3, const PHD_TEXTURE *texture, SORT_TYPE sort_type);</title></rect>
<rect width="28.59" height="29.36" x="176.99" y="98.23" class="decompiled"><title>void __cdecl Option_Controls_ShowControls(void);</title></rect>
<rect width="28.59" height="28.33" x="176.99" y="130.59" class="decompiled"><title>void __cdecl Camera_Update(void);</title></rect>
<rect width="28.59" height="28.20" x="176.99" y="161.92" class="decompiled"><title>void __cdecl Output_InsertTrans8(const PHD_VBUF *vbuf, int16_t shade);</title></rect>
<rect width="28.59" height="28.12" x="176.99" y="193.12" class="known"><title>void __cdecl Monk_Control(int16_t item_num);</title></rect>
<rect width="28.59" height="28.07" x="176.99" y="224.25" class="decompiled"><title>LRESULT __stdcall WinVidGameWindowProc(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="28.59" height="28.04" x="176.99" y="255.32" class="decompiled"><title>int32_t __cdecl Skidoo_Dynamics(ITEM *skidoo);</title></rect>
<rect width="28.59" height="28.02" x="176.99" y="286.36" class="decompiled"><title>void __cdecl Option_Sound(INVENTORY_ITEM *item);</title></rect>
<rect width="28.59" height="27.36" x="176.99" y="317.38" class="decompiled"><title>void __cdecl Sound_Effect(int32_t sample_id, const XYZ_32 *pos, uint32_t flags);</title></rect>
<rect width="28.59" height="27.26" x="176.99" y="347.74" class="decompiled"><title>void __cdecl Pickup_Collision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="27.60" height="28.13" x="208.58" y="0" class="decompiled"><title>int32_t __cdecl GF_InterpretSequence(int16_t *ptr, GAMEFLOW_LEVEL_TYPE type, int32_t seq_type);</title></rect>
<rect width="27.60" height="27.18" x="208.58" y="31.13" class="decompiled"><title>TARGET_TYPE __cdecl Box_CalculateTarget(XYZ_32 *target, ITEM *item, LOT_INFO *lot);</title></rect>
<rect width="27.60" height="26.61" x="208.58" y="61.31" class="decompiled"><title>void __cdecl Output_InsertGT4_ZBuffered(const PHD_VBUF *vtx0, const PHD_VBUF *vtx1, const PHD_VBUF *vtx2, const PHD_VBUF *vtx3, const PHD_TEXTURE *texture);</title></rect>
<rect width="27.60" height="26.50" x="208.58" y="90.91" class="decompiled"><title>int32_t __cdecl Skidoo_Control(void);</title></rect>
<rect width="27.60" height="26.47" x="208.58" y="120.41" class="decompiled"><title>void __cdecl Creature_Mood(ITEM *item, AI_INFO *info, int32_t violent);</title></rect>
<rect width="27.60" height="26.36" x="208.58" y="149.89" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectG4_Sorted(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="27.60" height="25.90" x="208.58" y="179.25" class="known"><title>void __cdecl Worker2_Control(int16_t item_num);</title></rect>
<rect width="27.60" height="25.77" x="208.58" y="208.16" class="decompiled"><title>void __cdecl ShowEndStatsText(void);</title></rect>
<rect width="27.60" height="25.69" x="208.58" y="236.92" class="decompiled"><title>int32_t __cdecl Output_XYGClipper(int32_t vtx_count, VERTEX_INFO *vtx);</title></rect>
<rect width="27.60" height="25.55" x="208.58" y="265.61" class="decompiled"><title>void __cdecl Inv_DrawInventoryItem(INVENTORY_ITEM *inv_item);</title></rect>
<rect width="27.60" height="25.06" x="208.58" y="294.16" class="known"><title>void __cdecl Cultist2_Control(int16_t item_num);</title></rect>
<rect width="27.60" height="24.98" x="208.58" y="322.23" class="known"><title>void __cdecl Bandit2_Control(int16_t item_num);</title></rect>
<rect width="27.60" height="24.79" x="208.58" y="350.21" class="known"><title>void __cdecl Cultist1_Control(int16_t item_num);</title></rect>
<rect width="24.79" height="27.49" x="239.18" y="0" class="known"><title>void __cdecl Rocket_Control(int16_t item_num);</title></rect>
<rect width="24.79" height="27.31" x="239.18" y="30.49" class="known"><title>void __cdecl XianKnight_Draw(const ITEM *item);</title></rect>
<rect width="24.79" height="26.68" x="239.18" y="60.80" class="decompiled"><title>void __cdecl SkidooDriver_Control(int16_t rider_num);</title></rect>
<rect width="24.79" height="26.50" x="239.18" y="90.48" class="decompiled"><title>void __cdecl Door_Initialise(int16_t item_num);</title></rect>
<rect width="24.79" height="26.20" x="239.18" y="119.98" class="decompiled"><title>int32_t __cdecl Collide_CollideStaticObjects(COLL_INFO *coll, int32_t x, int32_t y, int32_t z, int16_t room_num, int32_t height);</title></rect>
<rect width="24.79" height="26.20" x="239.18" y="149.18" class="decompiled"><title>void __cdecl Room_Clip(ROOM *r);</title></rect>
<rect width="24.79" height="26.20" x="239.18" y="178.38" class="decompiled"><title>void __cdecl Text_DrawText(const TEXTSTRING *string);</title></rect>
<rect width="24.79" height="26.17" x="239.18" y="207.59" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectG4(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="24.79" height="25.96" x="239.18" y="236.76" class="known"><title>void __cdecl Worker1_Control(int16_t item_num);</title></rect>
<rect width="24.79" height="25.49" x="239.18" y="265.73" class="known"><title>void __cdecl XianKnight_Control(int16_t item_num);</title></rect>
<rect width="24.79" height="25.22" x="239.18" y="294.21" class="decompiled"><title>HRESULT __stdcall EnumDisplayModesCallback(LPDDSDESC lpDDSurfaceDesc, LPVOID lpContext);</title></rect>
<rect width="24.79" height="24.86" x="239.18" y="322.43" class="decompiled"><title>void __cdecl RenderStart(bool is_reset);</title></rect>
<rect width="24.79" height="24.71" x="239.18" y="350.29" class="decompiled"><title>BOOL __cdecl Level_LoadRooms(HANDLE handle);</title></rect>
<rect width="24.48" height="24.90" x="266.96" y="0" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectG4_ZBuffered(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="24.48" height="24.75" x="266.96" y="27.90" class="decompiled"><title>void __cdecl ShowStatsText(char *time_str, int32_t type);</title></rect>
<rect width="24.48" height="24.50" x="266.96" y="55.64" class="decompiled"><title>void __cdecl Lara_GetJointAbsPosition(XYZ_32 *vec, int32_t joint);</title></rect>
<rect width="24.48" height="24.32" x="266.96" y="83.15" class="decompiled"><title>void __cdecl Diver_Control(int16_t item_num);</title></rect>
<rect width="24.48" height="24.26" x="266.96" y="110.47" class="known"><title>void __cdecl Dog_Control(int16_t item_num);</title></rect>
<rect width="24.48" height="24.23" x="266.96" y="137.73" class="decompiled"><title>int32_t __cdecl Effect_ExplodingDeath(int16_t item_num, int32_t mesh_bits, int16_t damage);</title></rect>
<rect width="24.48" height="24.02" x="266.96" y="164.97" class="decompiled"><title>void __cdecl Room_SetBounds(const int16_t *objptr, int32_t room_num, ROOM *parent);</title></rect>
<rect width="24.48" height="23.99" x="266.96" y="191.99" class="decompiled"><title>void __cdecl Gun_Rifle_Animate(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="24.48" height="23.81" x="266.96" y="218.98" class="known"><title>void __cdecl Object_DrawAnimatingItem(const ITEM *item);</title></rect>
<rect width="24.48" height="23.69" x="266.96" y="245.79" class="decompiled"><title>void __cdecl WinVidStart(void);</title></rect>
<rect width="24.48" height="23.63" x="266.96" y="272.48" class="decompiled"><title>void __cdecl Camera_Move(const GAME_VECTOR *target, int32_t speed);</title></rect>
<rect width="24.48" height="23.45" x="266.96" y="299.11" class="decompiled"><title>void __cdecl Lara_InitialiseInventory(int32_t level_num);</title></rect>
<rect width="24.48" height="23.36" x="266.96" y="325.56" class="decompiled"><title>void __cdecl Inv_RingNotActive(INVENTORY_ITEM *inv_item);</title></rect>
<rect width="24.48" height="23.09" x="266.96" y="351.91" class="decompiled"><title>int32_t __cdecl Gun_FireWeapon(LARA_GUN_TYPE weapon_type, ITEM *target, const ITEM *src, const PHD_ANGLE *angles);</title></rect>
<rect width="22.45" height="24.84" x="294.45" y="0" class="decompiled"><title>int32_t __cdecl Game_Control(int32_t nframes, int32_t demo_mode);</title></rect>
<rect width="22.45" height="24.67" x="294.45" y="27.84" class="known"><title>INT_PTR __stdcall SE_GraphicsDlgProc(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="22.45" height="24.38" x="294.45" y="55.51" class="known"><title>int32_t __cdecl SE_ReadAppSettings(APP_SETTINGS *settings);</title></rect>
<rect width="22.45" height="24.35" x="294.45" y="82.89" class="decompiled"><title>void __cdecl Output_InsertSprite_Sorted(int32_t z, int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t sprite_idx, int16_t shade);</title></rect>
<rect width="22.45" height="24.35" x="294.45" y="110.24" class="known"><title>void __cdecl RollingBallControl(int16_t item_num);</title></rect>
<rect width="22.45" height="24.25" x="294.45" y="137.58" class="known"><title>void __cdecl HarpoonBolt_Control(int16_t item_num);</title></rect>
<rect width="22.45" height="24.22" x="294.45" y="164.83" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectG3_Sorted(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="22.45" height="24.15" x="294.45" y="192.05" class="decompiled"><title>void __fastcall Output_WGTMapA(int32_t y0, int32_t y1, uint8_t *tex_page); // actually, __watcall, which is esoteric and rarely supported</title></rect>
<rect width="22.45" height="24.05" x="294.45" y="219.20" class="decompiled"><title>void __cdecl Lara_HangTest(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="22.45" height="23.86" x="294.45" y="246.25" class="decompiled"><title>void __cdecl Item_Animate(ITEM *item);</title></rect>
<rect width="22.45" height="23.60" x="294.45" y="273.11" class="decompiled"><title>void __cdecl Gun_Pistols_Animate(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="22.45" height="23.50" x="294.45" y="299.71" class="known"><title>void __cdecl CheckCheatMode(void);</title></rect>
<rect width="22.45" height="22.91" x="294.45" y="326.21" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectG3(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="22.45" height="22.88" x="294.45" y="352.12" class="decompiled"><title>void __cdecl Lara_GetJointAbsPosition_I(ITEM *item, XYZ_32 *vec, int16_t *frame1, int16_t *frame2, int32_t frac, int32_t rate);</title></rect>
<rect width="21.59" height="23.28" x="319.90" y="0" class="known"><title>void __cdecl Bandit1_Control(int16_t item_num);</title></rect>
<rect width="21.59" height="23.11" x="319.90" y="26.28" class="decompiled"><title>void __cdecl Lara_Push(ITEM *item, ITEM *lara_item, COLL_INFO *coll, int32_t spaz_on, int32_t big_push);</title></rect>
<rect width="21.59" height="22.84" x="319.90" y="52.39" class="decompiled"><title>int32_t __cdecl LOS_CheckSmashable(const GAME_VECTOR *start, GAME_VECTOR *target);</title></rect>
<rect width="21.59" height="22.81" x="319.90" y="78.23" class="decompiled"><title>void __fastcall Output_GTMapA(int32_t y0, int32_t y1, uint8_t *tex_page); // actually, __watcall, which is esoteric and rarely supported</title></rect>
<rect width="21.59" height="22.57" x="319.90" y="104.04" class="known"><title>void __cdecl S_CalculateLight(int32_t x, int32_t y, int32_t z, int16_t room_num);</title></rect>
<rect width="21.59" height="22.27" x="319.90" y="129.61" class="decompiled"><title>void __cdecl Dragon_Collision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="21.59" height="22.23" x="319.90" y="154.88" class="decompiled"><title>int32_t __cdecl LOS_CheckX(const GAME_VECTOR *start, GAME_VECTOR *target);</title></rect>
<rect width="21.59" height="22.20" x="319.90" y="180.11" class="decompiled"><title>int32_t __cdecl LOS_CheckZ(const GAME_VECTOR *start, GAME_VECTOR *target);</title></rect>
<rect width="21.59" height="22.07" x="319.90" y="205.31" class="decompiled"><title>int32_t __cdecl Lara_TestVault(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="21.59" height="21.83" x="319.90" y="230.38" class="decompiled"><title>void __cdecl WinPlayFMV(const char *file_name, bool is_playback);</title></rect>
<rect width="21.59" height="21.76" x="319.90" y="255.20" class="known"><title>bool __cdecl SE_ShowSetupDialog(HWND hParent, bool isDefault);</title></rect>
<rect width="21.59" height="21.63" x="319.90" y="279.97" class="decompiled"><title>void __cdecl Option_Detail(INVENTORY_ITEM *item);</title></rect>
<rect width="21.59" height="21.56" x="319.90" y="304.59" class="known"><title>int32_t __cdecl Collide_GetSpheres(const ITEM *item, SPHERE *spheres, bool world_space);</title></rect>
<rect width="21.59" height="21.46" x="319.90" y="329.15" class="decompiled"><title>void __cdecl Skidoo_Draw(const ITEM *item);</title></rect>
<rect width="21.59" height="21.39" x="319.90" y="353.61" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectG3_ZBuffered(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="20.94" height="21.96" x="344.49" y="0" class="decompiled"><title>int32_t __cdecl Output_XYClipper(int32_t vtx_count, VERTEX_INFO *vtx);</title></rect>
<rect width="20.94" height="21.96" x="344.49" y="24.96" class="known"><title>void __cdecl ControlMissile(int16_t fx_num);</title></rect>
<rect width="20.94" height="21.96" x="344.49" y="49.91" class="decompiled"><title>BOOL __cdecl Shell_Main(void);</title></rect>
<rect width="20.94" height="21.85" x="344.49" y="74.87" class="decompiled"><title>void __cdecl Lara_Animate(ITEM *item);</title></rect>
<rect width="20.94" height="21.75" x="344.49" y="99.73" class="known"><title>void __cdecl GiantYeti_Control(int16_t item_num);</title></rect>
<rect width="20.94" height="21.65" x="344.49" y="124.47" class="decompiled"><title>void __cdecl Output_DrawSprite(uint32_t flags, int32_t x, int32_t y, int32_t z, int16_t sprite_idx, int16_t shade, int16_t scale);</title></rect>
<rect width="20.94" height="21.30" x="344.49" y="149.12" class="decompiled"><title>void __cdecl Lara_Initialise(int32_t type);</title></rect>
<rect width="20.94" height="21.16" x="344.49" y="173.42" class="decompiled"><title>void __cdecl Skidoo_Animation(ITEM *skidoo, int32_t collide, int32_t dead);</title></rect>
<rect width="20.94" height="20.85" x="344.49" y="197.58" class="decompiled"><title>void __cdecl Room_DrawAllRooms(int16_t current_room);</title></rect>
<rect width="20.94" height="19.88" x="344.49" y="221.43" class="decompiled"><title>void __cdecl PuzzleHole_Collision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="20.94" height="19.70" x="344.49" y="244.30" class="decompiled"><title>void __cdecl Zipline_Control(int16_t item_num);</title></rect>
<rect width="20.94" height="19.43" x="344.49" y="267.01" class="known"><title>void __cdecl TRex_Control(int16_t item_num);</title></rect>
<rect width="20.94" height="19.32" x="344.49" y="289.44" class="decompiled"><title>int32_t __cdecl Output_XGenXGUVPerspFP(const int16_t *obj_ptr);</title></rect>
<rect width="20.94" height="19.11" x="344.49" y="311.76" class="known"><title>void __cdecl Tiger_Control(int16_t item_num);</title></rect>
<rect width="20.94" height="19.08" x="344.49" y="333.87" class="decompiled"><title>const int16_t *__cdecl Output_CalcRoomVertices(const int16_t *obj_ptr, int32_t far_clip);</title></rect>
<rect width="20.94" height="19.05" x="344.49" y="355.95" class="known"><title>void __cdecl Shark_Control(int16_t item_num);</title></rect>
<rect width="19.34" height="20.62" x="368.43" y="0" class="known"><title>int32_t __cdecl DoShift(ITEM *skidoo, XYZ_32 *pos, XYZ_32 *old);</title></rect>
<rect width="19.34" height="20.18" x="368.43" y="23.62" class="known"><title>int32_t __cdecl S_GetObjectBounds(const BOUNDS_16 *bounds);</title></rect>
<rect width="19.34" height="20.10" x="368.43" y="46.80" class="known"><title>void __cdecl Flare_Control(int16_t item_num);</title></rect>
<rect width="19.34" height="19.81" x="368.43" y="69.90" class="decompiled"><title>void __cdecl Output_Init(int16_t x, int16_t y, int32_t width, int32_t height, int32_t near_z, int32_t far_z, int16_t view_angle, int32_t screen_width, int32_t screen_height);</title></rect>
<rect width="19.34" height="19.77" x="368.43" y="92.71" class="decompiled"><title>int32_t __cdecl Room_GetHeight(const SECTOR *sector, int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="19.34" height="19.77" x="368.43" y="115.48" class="decompiled"><title>BOOL __cdecl Level_LoadSamples(HANDLE handle);</title></rect>
<rect width="19.34" height="19.69" x="368.43" y="138.24" class="decompiled"><title>int32_t __cdecl Lara_TestClimb(int32_t x, int32_t y, int32_t z, int32_t xfront, int32_t zfront, int32_t item_height, int16_t item_room, int32_t *shift);</title></rect>
<rect width="19.34" height="19.66" x="368.43" y="160.94" class="known"><title>bool __cdecl SE_WriteAppSettings(APP_SETTINGS *settings);</title></rect>
<rect width="19.34" height="19.14" x="368.43" y="183.60" class="known"><title>void __cdecl S_CopyBufferToScreen(void);</title></rect>
<rect width="19.34" height="19.03" x="368.43" y="205.73" class="decompiled"><title>void __cdecl DrawTextureTile(int32_t sx, int32_t sy, int32_t width, int32_t height, HWR_TEXTURE_HANDLE tex_source, int32_t tu, int32_t tv, int32_t t_width, int32_t t_height, D3DCOLOR color0, D3DCOLOR color1, D3DCOLOR color2, D3DCOLOR color3);</title></rect>
<rect width="19.34" height="18.77" x="368.43" y="227.76" class="known"><title>void __cdecl RollingBallCollision(int16_t item_num, ITEM *litem, COLL_INFO *coll);</title></rect>
<rect width="19.34" height="18.77" x="368.43" y="249.52" class="decompiled"><title>bool __cdecl Level_Load(const char *file_name, int32_t level_num);</title></rect>
<rect width="19.34" height="18.58" x="368.43" y="271.29" class="decompiled"><title>void __cdecl Camera_LoadCutsceneFrame(void);</title></rect>
<rect width="19.34" height="18.47" x="368.43" y="292.87" class="decompiled"><title>void __cdecl Creature_AIInfo(ITEM *item, AI_INFO *info);</title></rect>
<rect width="19.34" height="18.28" x="368.43" y="314.34" class="decompiled"><title>int32_t __cdecl Room_GetCeiling(const SECTOR *sector, int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="19.34" height="18.21" x="368.43" y="335.62" class="decompiled"><title>void __cdecl Detonator_Collision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="19.34" height="18.17" x="368.43" y="356.83" class="decompiled"><title>void __cdecl GameApplySettings(APP_SETTINGS *new_settings);</title></rect>
<rect width="18.82" height="18.68" x="390.77" y="0" class="known"><title>LRESULT __stdcall SE_SetupWindowProc(HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="18.78" height="18.68" x="412.58" y="0" class="decompiled"><title>void __cdecl MovableBlock_Collision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="18.62" height="18.68" x="434.36" y="0" class="decompiled"><title>int32_t __cdecl Lara_TestClimbUpPos(ITEM *item, int32_t front, int32_t right, int32_t *shift, int32_t *ledge);</title></rect>
<rect width="18.59" height="18.68" x="455.98" y="0" class="known"><title>void __cdecl SE_OptionsDlgUpdate(HWND hwndDlg);</title></rect>
<rect width="18.55" height="18.68" x="477.57" y="0" class="decompiled"><title>int32_t __cdecl Skidoo_CheckGetOff(void);</title></rect>
<rect width="18.55" height="18.68" x="499.12" y="0" class="known"><title>void __cdecl DisplayCredits(void);</title></rect>
<rect width="18.01" height="18.68" x="520.67" y="0" class="decompiled"><title>void __cdecl Gun_Pistols_Undraw(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="18.01" height="18.68" x="541.68" y="0" class="decompiled"><title>int32_t __cdecl MovableBlock_TestPull(ITEM *item, int32_t block_height, uint16_t quadrant);</title></rect>
<rect width="17.94" height="18.68" x="562.69" y="0" class="decompiled"><title>void __cdecl Output_DrawScaledSpriteC(const int16_t *obj_ptr);</title></rect>
<rect width="17.94" height="18.68" x="583.63" y="0" class="decompiled"><title>void __cdecl Lara_HandleUnderwater(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="17.94" height="18.68" x="604.56" y="0" class="decompiled"><title>void __cdecl Keyhole_Collision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="17.86" height="18.68" x="625.50" y="0" class="known"><title>void __cdecl Flare_Undraw(void);</title></rect>
<rect width="17.86" height="18.68" x="646.36" y="0" class="decompiled"><title>BOOL __cdecl Level_LoadBoxes(HANDLE handle);</title></rect>
<rect width="17.82" height="18.68" x="667.21" y="0" class="decompiled"><title>void __cdecl BGND_DrawInGameBackground(void);</title></rect>
<rect width="17.67" height="18.68" x="688.04" y="0" class="decompiled"><title>void __cdecl Gun_GetNewTarget(WEAPON_INFO *winfo);</title></rect>
<rect width="17.67" height="18.68" x="708.70" y="0" class="decompiled"><title>int32_t __cdecl Lara_TestWaterClimbOut(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="17.63" height="18.68" x="729.37" y="0" class="known"><title>void __cdecl Baracudda_Control(int16_t item_num);</title></rect>
<rect width="17.35" height="18.89" x="390.77" y="21.68" class="decompiled"><title>int32_t __cdecl Output_XGenXGUV(const int16_t *obj_ptr);</title></rect>
<rect width="17.35" height="18.85" x="390.77" y="43.57" class="decompiled"><title>void __cdecl Room_DrawSingleRoomObjects(int16_t room_num);</title></rect>
<rect width="17.35" height="18.49" x="390.77" y="65.42" class="decompiled"><title>void __cdecl FinalLevelCounter_Control(int16_t item_num);</title></rect>
<rect width="17.35" height="18.40" x="390.77" y="86.91" class="decompiled"><title>void __cdecl Lara_Col_ClimbStance(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="17.35" height="18.28" x="390.77" y="108.31" class="decompiled"><title>void __cdecl Switch_Collision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="17.35" height="18.12" x="390.77" y="129.59" class="known"><title>void __cdecl Spider_Control(int16_t item_num);</title></rect>
<rect width="17.35" height="18.12" x="390.77" y="150.71" class="known"><title>void __cdecl S_LightRoom(ROOM *room);</title></rect>
<rect width="17.35" height="18.04" x="390.77" y="171.83" class="decompiled"><title>bool __cdecl ApplySettings(APP_SETTINGS *new_settings);</title></rect>
<rect width="17.35" height="17.91" x="390.77" y="192.87" class="known"><title>void __cdecl CreateStartInfo(int32_t level_num);</title></rect>
<rect width="17.35" height="17.87" x="390.77" y="213.78" class="decompiled"><title>void __cdecl Bird_Control(int16_t item_num);</title></rect>
<rect width="17.35" height="17.87" x="390.77" y="234.66" class="known"><title>void __cdecl BodyPart_Control(int16_t fx_num);</title></rect>
<rect width="17.35" height="17.59" x="390.77" y="255.53" class="decompiled"><title>void __cdecl Skidoo_BaddieCollision(const ITEM *skidoo);</title></rect>
<rect width="17.35" height="17.47" x="390.77" y="276.12" class="known"><title>void __cdecl S_DrawAirBar(int32_t percent);</title></rect>
<rect width="17.35" height="17.43" x="390.77" y="296.58" class="decompiled"><title>void __cdecl Screenshot(LPDDS screen);</title></rect>
<rect width="17.35" height="17.38" x="390.77" y="317.01" class="known"><title>void __cdecl MineControl(int16_t mine_num);</title></rect>
<rect width="17.35" height="17.34" x="390.77" y="337.39" class="decompiled"><title>int32_t __cdecl Box_SearchLOT(LOT_INFO *lot, int32_t expansion);</title></rect>
<rect width="17.35" height="17.26" x="390.77" y="357.74" class="known"><title>void __cdecl S_PrintShadow(int16_t radius, const BOUNDS_16 *bounds, const ITEM *item);</title></rect>
<rect width="17.67" height="16.75" x="411.12" y="21.68" class="decompiled"><title>void __cdecl Lara_WaterCurrent(COLL_INFO *coll);</title></rect>
<rect width="17.55" height="16.75" x="431.79" y="21.68" class="decompiled"><title>int32_t __cdecl GF_LoadScriptFile(const char *fname);</title></rect>
<rect width="17.46" height="16.75" x="452.34" y="21.68" class="decompiled"><title>void __cdecl Matrix_RotYXZpack(uint32_t rpack);</title></rect>
<rect width="17.25" height="16.75" x="472.80" y="21.68" class="decompiled"><title>void __cdecl Camera_Look(const ITEM *item);</title></rect>
<rect width="17.21" height="16.75" x="493.05" y="21.68" class="known"><title>void __cdecl Eel_Control(int16_t item_num);</title></rect>
<rect width="17" height="16.75" x="513.27" y="21.68" class="decompiled"><title>void __cdecl Matrix_RotYXZ(int16_t ry, int16_t rx, int16_t rz);</title></rect>
<rect width="17" height="16.75" x="533.27" y="21.68" class="known"><title>void __cdecl Mouse_Control(int16_t item_num);</title></rect>
<rect width="17" height="16.75" x="553.27" y="21.68" class="known"><title>void __cdecl SE_GraphicsDlgFullScreenModesUpdate(HWND hwndDlg);</title></rect>
<rect width="16.96" height="16.75" x="573.27" y="21.68" class="decompiled"><title>void __cdecl Creature_GetBaddieTarget(int16_t item_num, int32_t goody);</title></rect>
<rect width="16.79" height="16.75" x="593.23" y="21.68" class="known"><title>void __cdecl Flare_Create(int32_t thrown);</title></rect>
<rect width="16.75" height="16.75" x="613.02" y="21.68" class="decompiled"><title>void __cdecl ShowGymStatsText(char *time_str, int32_t type);</title></rect>
<rect width="16.75" height="16.75" x="632.77" y="21.68" class="decompiled"><title>BOOL __cdecl Level_LoadItems(HANDLE handle);</title></rect>
<rect width="16.75" height="16.75" x="652.52" y="21.68" class="decompiled"><title>int32_t __stdcall WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPTSTR lpCmdLine, int32_t nShowCmd);</title></rect>
<rect width="16.71" height="16.75" x="672.27" y="21.68" class="decompiled"><title>const int16_t *__cdecl Output_CalcObjectVertices(const int16_t *obj_ptr);</title></rect>
<rect width="16.50" height="16.75" x="691.97" y="21.68" class="decompiled"><title>void __cdecl Matrix_GenerateW2V(PHD_3DPOS *viewpos);</title></rect>
<rect width="16.33" height="16.75" x="711.47" y="21.68" class="known"><title>void __cdecl S_DrawHealthBar(int32_t percent);</title></rect>
<rect width="16.20" height="16.75" x="730.80" y="21.68" class="decompiled"><title>void __cdecl Output_InsertFlatRect_ZBuffered(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t z, uint8_t color_idx);</title></rect>
<rect width="16.42" height="16.52" x="411.12" y="41.42" class="known"><title>void __cdecl FadeToPal(int32_t fade_value, RGB_888 *palette);</title></rect>
<rect width="16.42" height="16.40" x="411.12" y="60.95" class="decompiled"><title>void __cdecl Room_GetBounds(void);</title></rect>
<rect width="16.42" height="16.31" x="411.12" y="80.34" class="known"><title>int32_t __cdecl ShotLara(ITEM *item, AI_INFO *info, BITE *gun, int16_t extra_rotation, int32_t damage);</title></rect>
<rect width="16.42" height="16.23" x="411.12" y="99.66" class="decompiled"><title>int32_t __cdecl LevelStats(int32_t level_num);</title></rect>
<rect width="16.42" height="16.18" x="411.12" y="118.88" class="decompiled"><title>void __cdecl Boat_DoShift(int32_t boat_num);</title></rect>
<rect width="16.42" height="16.14" x="411.12" y="138.06" class="decompiled"><title>void __cdecl WinVidResizeGameWindow(HWND hWnd, int32_t edge, LPRECT rect);</title></rect>
<rect width="16.42" height="16.05" x="411.12" y="157.20" class="decompiled"><title>BOOL __stdcall EnumDisplayAdaptersCallback(GUID *lpGUID, LPTSTR lpDriverDescription, LPTSTR lpDriverName, LPVOID lpContext);</title></rect>
<rect width="16.42" height="15.80" x="411.12" y="176.26" class="decompiled"><title>void __cdecl BGND_Make640x480(uint8_t *bitmap, RGB_888 *palette);</title></rect>
<rect width="16.42" height="15.80" x="411.12" y="195.06" class="decompiled"><title>void __cdecl D3DDeviceCreate(LPDDS lpBackBuffer);</title></rect>
<rect width="16.42" height="15.71" x="411.12" y="213.86" class="decompiled"><title>int32_t __cdecl Skidoo_UserControl(ITEM *skidoo, int32_t height, int32_t *pitch);</title></rect>
<rect width="16.42" height="15.58" x="411.12" y="232.57" class="decompiled"><title>void __cdecl Item_Initialise(int16_t item_num);</title></rect>
<rect width="16.42" height="15.46" x="411.12" y="251.15" class="decompiled"><title>int32_t __cdecl Demo_Start(int32_t level_num);</title></rect>
<rect width="16.42" height="15.46" x="411.12" y="269.61" class="decompiled"><title>bool __cdecl LOT_EnableBaddieAI(int16_t item_num, bool always);</title></rect>
<rect width="16.42" height="15.29" x="411.12" y="288.07" class="decompiled"><title>void __cdecl Output_InsertClippedPoly_Textured(int32_t vtx_count, float z, int16_t poly_type, int16_t tex_page);</title></rect>
<rect width="16.42" height="14.99" x="411.12" y="306.35" class="decompiled"><title>void __cdecl Matrix_Interpolate(void);</title></rect>
<rect width="16.42" height="14.99" x="411.12" y="324.34" class="known"><title>void __cdecl BigSpider_Control(int16_t item_num);</title></rect>
<rect width="16.42" height="14.94" x="411.12" y="342.33" class="decompiled"><title>void __cdecl ClearBuffers(DWORD flags, DWORD fill_color);</title></rect>
<rect width="16.42" height="14.73" x="411.12" y="360.27" class="decompiled"><title>void __cdecl Output_DrawPolyLine(const int16_t *obj_ptr);</title></rect>
<rect width="16.18" height="14.91" x="430.54" y="41.42" class="decompiled"><title>int32_t __cdecl Camera_ShiftClamp(GAME_VECTOR *pos, int32_t clamp);</title></rect>
<rect width="16.18" height="14.91" x="449.72" y="41.42" class="decompiled"><title>int32_t __cdecl Lara_TestHangJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="16.13" height="14.91" x="468.90" y="41.42" class="known"><title>void __cdecl BigEel_Control(int16_t item_num);</title></rect>
<rect width="16.09" height="14.91" x="488.03" y="41.42" class="decompiled"><title>void __cdecl Lara_Col_ClimbDown(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="15.99" height="14.91" x="507.11" y="41.42" class="known"><title>void __cdecl Collide_GetJointAbsPosition(const ITEM *item, const XYZ_32 *vec, int32_t joint);</title></rect>
<rect width="15.90" height="14.91" x="526.11" y="41.42" class="decompiled"><title>SECTOR *__cdecl Room_GetSector(int32_t x, int32_t y, int32_t z, int16_t *room_num);</title></rect>
<rect width="15.81" height="14.91" x="545.01" y="41.42" class="known"><title>int32_t __cdecl AddTexturePage16(int32_t width, int32_t height, const uint8_t *page_buf);</title></rect>
<rect width="15.76" height="14.91" x="563.82" y="41.42" class="decompiled"><title>void __cdecl Output_InsertTrans8_Sorted(const PHD_VBUF *vbuf, int16_t shade);</title></rect>
<rect width="15.76" height="14.91" x="582.58" y="41.42" class="decompiled"><title>void __cdecl Lara_BaddieCollision(ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="15.76" height="14.91" x="601.34" y="41.42" class="decompiled"><title>void __cdecl Lara_HandleAboveWater(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="15.72" height="14.91" x="620.10" y="41.42" class="decompiled"><title>void __cdecl Gun_TargetInfo(const WEAPON_INFO *winfo);</title></rect>
<rect width="15.67" height="14.91" x="638.82" y="41.42" class="decompiled"><title>void __cdecl Bartoli_Control(int16_t item_num);</title></rect>
<rect width="15.62" height="14.91" x="657.49" y="41.42" class="decompiled"><title>int32_t __cdecl Lara_GetWaterDepth(int32_t x, int32_t y, int32_t z, int16_t room_num);</title></rect>
<rect width="15.58" height="14.91" x="676.11" y="41.42" class="decompiled"><title>void __cdecl Lara_Col_Walk(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="15.53" height="14.91" x="694.69" y="41.42" class="known"><title>void __cdecl PropellerControl(int16_t item_num);</title></rect>
<rect width="15.44" height="14.91" x="713.22" y="41.42" class="decompiled"><title>void __cdecl Camera_Combat(const ITEM *item);</title></rect>
<rect width="15.34" height="14.91" x="731.66" y="41.42" class="decompiled"><title>void __cdecl Gun_Pistols_Control(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="14.86" height="15.25" x="430.54" y="59.33" class="decompiled"><title>void __cdecl Text_DrawBorder(int32_t x, int32_t y, int32_t z, int32_t width, int32_t height);</title></rect>
<rect width="14.86" height="15.21" x="430.54" y="77.59" class="decompiled"><title>BOOL __cdecl Level_LoadTexturePages(HANDLE handle);</title></rect>
<rect width="14.86" height="15.21" x="430.54" y="95.79" class="decompiled"><title>BOOL __cdecl Level_LoadDepthQ(HANDLE handle);</title></rect>
<rect width="14.86" height="15.16" x="430.54" y="114" class="decompiled"><title>int32_t __cdecl Boat_UserControl(ITEM *boat);</title></rect>
<rect width="14.86" height="15.16" x="430.54" y="132.16" class="decompiled"><title>int32_t __cdecl Lara_MovePosition(XYZ_32 *vec, ITEM *item, ITEM *lara_item);</title></rect>
<rect width="14.86" height="15.16" x="430.54" y="150.32" class="decompiled"><title>void __cdecl Gun_Rifle_FireHarpoon(void);</title></rect>
<rect width="14.86" height="14.79" x="430.54" y="168.48" class="decompiled"><title>void __cdecl Output_InsertFlatRect_Sorted(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t z, uint8_t color_idx);</title></rect>
<rect width="14.86" height="14.79" x="430.54" y="186.27" class="decompiled"><title>void __cdecl Twinkle_Control(int16_t fx_num);</title></rect>
<rect width="14.86" height="14.65" x="430.54" y="204.06" class="decompiled"><title>void __cdecl S_Audio_Sample_Init2(HWND hwnd);</title></rect>
<rect width="14.86" height="14.65" x="430.54" y="221.71" class="known"><title>void __cdecl SE_GraphicsDlgInit(HWND hwndDlg);</title></rect>
<rect width="14.86" height="14.60" x="430.54" y="239.36" class="known"><title>void __cdecl SpinningBlade(int16_t item_num);</title></rect>
<rect width="14.86" height="14.51" x="430.54" y="256.96" class="decompiled"><title>void __cdecl Lift_FloorCeiling(const ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *floor, int32_t *ceiling);</title></rect>
<rect width="14.86" height="14.37" x="430.54" y="274.47" class="decompiled"><title>void __cdecl Lara_Col_Run(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="14.86" height="14.32" x="430.54" y="291.84" class="decompiled"><title>void __cdecl Output_InsertPoly_Gouraud(int32_t vtx_count, float z, int32_t red, int32_t green, int32_t blue, int16_t poly_type);</title></rect>
<rect width="14.86" height="14.28" x="430.54" y="309.17" class="decompiled"><title>void __cdecl Boat_DoWakeEffect(ITEM *boat);</title></rect>
<rect width="14.86" height="14.28" x="430.54" y="326.44" class="known"><title>bool __cdecl TexturePageInit(TEXPAGE_DESC *page);</title></rect>
<rect width="14.86" height="14.19" x="430.54" y="343.72" class="known"><title>void __cdecl Winston_Control(int16_t item_num);</title></rect>
<rect width="14.86" height="14.09" x="430.54" y="360.91" class="decompiled"><title>int32_t __cdecl Boat_CheckGetOn(int16_t item_num, COLL_INFO *coll);</title></rect>
<rect width="15.11" height="13.82" x="448.40" y="59.33" class="decompiled"><title>void __cdecl Creature_Kill(ITEM *item, int32_t kill_anim, int32_t kill_state, int32_t lara_kill_state);</title></rect>
<rect width="15.11" height="13.82" x="466.51" y="59.33" class="decompiled"><title>int32_t __cdecl Game_Cutscene_Control(int32_t nframes);</title></rect>
<rect width="15.06" height="13.82" x="484.61" y="59.33" class="decompiled"><title>int32_t __cdecl Misc_Move3DPosTo3DPos(PHD_3DPOS *src_pos, const PHD_3DPOS *dest_pos, int32_t velocity, PHD_ANGLE ang_add);</title></rect>
<rect width="15.01" height="13.82" x="502.67" y="59.33" class="decompiled"><title>const int16_t *__cdecl Output_CalcVerticeLight(const int16_t *obj_ptr);</title></rect>
<rect width="15.01" height="13.82" x="520.68" y="59.33" class="decompiled"><title>int32_t __cdecl Lara_TestHangJumpUp(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="14.96" height="13.82" x="538.69" y="59.33" class="decompiled"><title>void __cdecl HWR_DrawPolyList(void);</title></rect>
<rect width="14.81" height="13.82" x="556.65" y="59.33" class="decompiled"><title>void __cdecl Boat_Animation(ITEM *boat, int32_t collide);</title></rect>
<rect width="14.81" height="13.82" x="574.46" y="59.33" class="known"><title>void __cdecl Flare_Draw(void);</title></rect>
<rect width="14.76" height="13.82" x="592.27" y="59.33" class="decompiled"><title>int32_t __cdecl Room_GetWaterHeight(int32_t x, int32_t y, int32_t z, int16_t room_num);</title></rect>
<rect width="14.71" height="13.82" x="610.03" y="59.33" class="decompiled"><title>void __cdecl Inv_RingIsOpen(RING_INFO *ring);</title></rect>
<rect width="14.66" height="13.82" x="627.74" y="59.33" class="decompiled"><title>void __cdecl Gun_Rifle_Draw(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="14.61" height="13.82" x="645.40" y="59.33" class="known"><title>BOOL __cdecl S_FrontEndCheck(void);</title></rect>
<rect width="14.56" height="13.82" x="663.02" y="59.33" class="decompiled"><title>void __cdecl Flame_Control(int16_t fx_num);</title></rect>
<rect width="14.47" height="13.82" x="680.58" y="59.33" class="decompiled"><title>void __cdecl Lara_Col_Wade(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="14.37" height="13.82" x="698.05" y="59.33" class="decompiled"><title>void __fastcall Output_GourA(int32_t y0, int32_t y1, uint8_t color_idx); // actually, __watcall, which is esoteric and rarely supported</title></rect>
<rect width="14.32" height="13.82" x="715.41" y="59.33" class="decompiled"><title>int32_t __cdecl Level_Initialise(int32_t level_num, int32_t level_type);</title></rect>
<rect width="14.27" height="13.82" x="732.73" y="59.33" class="decompiled"><title>void __cdecl Boat_Collision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="14.53" height="13.47" x="448.40" y="76.15" class="decompiled"><title>void __cdecl Lara_SwimCollision(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="14.33" height="13.47" x="465.93" y="76.15" class="decompiled"><title>void __cdecl Lara_HandleSurface(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="14.23" height="13.47" x="483.26" y="76.15" class="decompiled"><title>void __cdecl Inv_Construct(void);</title></rect>
<rect width="14.18" height="13.47" x="500.48" y="76.15" class="known"><title>void __cdecl SpikeCollision(int16_t item_num, ITEM *litem, COLL_INFO *coll);</title></rect>
<rect width="14.18" height="13.47" x="517.66" y="76.15" class="known"><title>void __cdecl DartsControl(int16_t item_num);</title></rect>
<rect width="14.12" height="13.47" x="534.83" y="76.15" class="decompiled"><title>void __cdecl Camera_Shift(int32_t *x, int32_t *y, int32_t *h, int32_t target_x, int32_t target_y, int32_t target_h, int32_t left, int32_t top, int32_t right, int32_t bottom);</title></rect>
<rect width="14.02" height="13.47" x="551.96" y="76.15" class="decompiled"><title>const int16_t *__cdecl Output_InsertRoomSprite(const int16_t *obj_ptr, int32_t vtx_count);</title></rect>
<rect width="13.77" height="13.47" x="568.98" y="76.15" class="decompiled"><title>void __cdecl Lara_Col_Climbing(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="13.67" height="13.47" x="585.75" y="76.15" class="known"><title>void __cdecl Gun_DrawFlash(LARA_GUN_TYPE weapon_type, int32_t clip);</title></rect>
<rect width="13.57" height="13.47" x="602.42" y="76.15" class="known"><title>INT_PTR __stdcall SE_SoundDlgProc(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="13.52" height="13.47" x="618.99" y="76.15" class="decompiled"><title>void __cdecl Lara_State_Stop(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="13.52" height="13.47" x="635.52" y="76.15" class="decompiled"><title>void __cdecl MovableBlock_Control(int16_t item_num);</title></rect>
<rect width="13.47" height="13.47" x="652.04" y="76.15" class="decompiled"><title>void __cdecl Effect_Draw(int16_t fx_num);</title></rect>
<rect width="13.42" height="13.47" x="668.51" y="76.15" class="decompiled"><title>int32_t __cdecl Output_XGenXG(const int16_t *obj_ptr);</title></rect>
<rect width="13.37" height="13.47" x="684.93" y="76.15" class="decompiled"><title>void __cdecl Overlay_DrawAssaultTimer(void);</title></rect>
<rect width="13.32" height="13.47" x="701.29" y="76.15" class="decompiled"><title>int16_t __cdecl Game_Start(int32_t level_num, GAMEFLOW_LEVEL_TYPE level_type);</title></rect>
<rect width="13.27" height="13.47" x="717.61" y="76.15" class="decompiled"><title>void __cdecl Lara_State_Run(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="13.12" height="13.47" x="733.88" y="76.15" class="decompiled"><title>int32_t __cdecl Output_ZedClipper(int32_t vtx_count, POINT_INFO *pts, VERTEX_INFO *vtx);</title></rect>
<rect width="13.47" height="13.12" x="448.40" y="92.62" class="decompiled"><title>void __cdecl Output_DrawClippedPoly_Textured(int32_t vtx_count);</title></rect>
<rect width="13.47" height="13.12" x="448.40" y="108.74" class="decompiled"><title>void __cdecl Skidoo_DoSnowEffect(ITEM *skidoo);</title></rect>
<rect width="13.47" height="13.07" x="448.40" y="124.86" class="decompiled"><title>void __cdecl Lara_UseItem(GAME_OBJECT_ID object_id);</title></rect>
<rect width="13.47" height="13.02" x="448.40" y="140.93" class="decompiled"><title>void __cdecl Inv_Ring_DoMotions(RING_INFO *ring);</title></rect>
<rect width="13.47" height="13.02" x="448.40" y="156.95" class="known"><title>void __cdecl DartEmitterControl(int16_t item_num);</title></rect>
<rect width="13.47" height="12.97" x="448.40" y="172.97" class="decompiled"><title>void __cdecl Output_InsertTransQuad_Sorted(int32_t x, int32_t y, int32_t width, int32_t height, int32_t z);</title></rect>
<rect width="13.47" height="12.97" x="448.40" y="188.94" class="known"><title>void __cdecl WaterFall(int16_t fx_num);</title></rect>
<rect width="13.47" height="12.92" x="448.40" y="204.91" class="decompiled"><title>void __cdecl RestoreLostBuffers(void);</title></rect>
<rect width="13.47" height="12.87" x="448.40" y="220.83" class="decompiled"><title>void __cdecl Item_AlignPosition(XYZ_32 *vec, ITEM *src_item, ITEM *dst_item);</title></rect>
<rect width="13.47" height="12.87" x="448.40" y="236.70" class="decompiled"><title>void __cdecl CreateScreenBuffers(void);</title></rect>
<rect width="13.47" height="12.82" x="448.40" y="252.56" class="decompiled"><title>void __fastcall Output_TransA(int32_t y0, int32_t y1, uint8_t depth_q); // actually, __watcall, which is esoteric and rarely supported</title></rect>
<rect width="13.47" height="12.72" x="448.40" y="268.38" class="decompiled"><title>void __cdecl Camera_UpdateCutscene(void);</title></rect>
<rect width="13.47" height="12.72" x="448.40" y="284.10" class="known"><title>void __cdecl ControlSpikeWall(int16_t item_num);</title></rect>
<rect width="13.47" height="12.67" x="448.40" y="299.82" class="decompiled"><title>int32_t __cdecl Item_TestPosition(int16_t *bounds, ITEM *src_item, ITEM *dst_item);</title></rect>
<rect width="13.47" height="12.67" x="448.40" y="315.48" class="decompiled"><title>int32_t __cdecl MovableBlock_TestPush(ITEM *item, int32_t block_height, uint16_t quadrant);</title></rect>
<rect width="13.47" height="12.67" x="448.40" y="331.15" class="known"><title>void __cdecl CopyBitmapPalette(RGB_888 *src_pal, BYTE *src_bitmap, int32_t bitmap_size, RGB_888 *dest_pal);</title></rect>
<rect width="13.47" height="12.62" x="448.40" y="346.82" class="decompiled"><title>void __cdecl Lara_DeflectEdgeJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="13.47" height="12.57" x="448.40" y="362.43" class="decompiled"><title>BOOL __cdecl Level_LoadSprites(HANDLE handle);</title></rect>
<rect width="13.42" height="12.56" x="464.87" y="92.62" class="decompiled"><title>void __cdecl Output_InsertSkybox(const int16_t *obj_ptr);</title></rect>
<rect width="13.36" height="12.56" x="481.29" y="92.62" class="decompiled"><title>void __cdecl Output_InsertLine_ZBuffered(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t z, uint8_t color_idx);</title></rect>
<rect width="13.31" height="12.56" x="497.65" y="92.62" class="decompiled"><title>void __cdecl Overlay_DrawAmmoInfo(void);</title></rect>
<rect width="13.31" height="12.56" x="513.97" y="92.62" class="decompiled"><title>void __cdecl Inv_DoInventoryBackground(void);</title></rect>
<rect width="13.26" height="12.56" x="530.28" y="92.62" class="decompiled"><title>int32_t __cdecl Creature_Vault(int16_t item_num, int16_t angle, int32_t vault, int32_t shift);</title></rect>
<rect width="13.20" height="12.56" x="546.53" y="92.62" class="decompiled"><title>int32_t __cdecl Lara_TestSlide(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="13.04" height="12.56" x="562.74" y="92.62" class="known"><title>void __cdecl DrawSphereOfDoom(ITEM *item);</title></rect>
<rect width="12.94" height="12.56" x="578.78" y="92.62" class="decompiled"><title>void __cdecl Output_InsertLine_Sorted(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t z, uint8_t color_idx);</title></rect>
<rect width="12.83" height="12.56" x="594.72" y="92.62" class="decompiled"><title>void __cdecl Inv_InsertItem(INVENTORY_ITEM *inv_item);</title></rect>
<rect width="12.78" height="12.56" x="610.55" y="92.62" class="known"><title>void __cdecl SphereOfDoomCollision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="12.78" height="12.56" x="626.33" y="92.62" class="known"><title>int32_t __cdecl Collide_TestCollision(ITEM *item, const ITEM *lara_item);</title></rect>
<rect width="12.78" height="12.56" x="642.11" y="92.62" class="decompiled"><title>void __cdecl HWR_InitState(void);</title></rect>
<rect width="12.73" height="12.56" x="657.89" y="92.62" class="decompiled"><title>void __cdecl Lara_Col_Hang(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12.57" height="12.56" x="673.61" y="92.62" class="known"><title>void __cdecl S_CalculateStaticMeshLight(int32_t x, int32_t y, int32_t z, int32_t shade_1, int32_t shade_2, ROOM *room);</title></rect>
<rect width="12.35" height="12.56" x="689.18" y="92.62" class="decompiled"><title>BOOL __cdecl S_Input_Key(KEYMAP keymap);</title></rect>
<rect width="12.25" height="12.56" x="704.53" y="92.62" class="decompiled"><title>void __cdecl Item_Kill(int16_t item_num);</title></rect>
<rect width="12.14" height="12.56" x="719.78" y="92.62" class="decompiled"><title>void __cdecl Gun_InitialiseNewWeapon(void);</title></rect>
<rect width="12.09" height="12.56" x="734.91" y="92.62" class="decompiled"><title>void __cdecl Lara_Col_UpJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12.24" height="12.41" x="464.87" y="108.19" class="decompiled"><title>void __cdecl Skidoo_Guns(void);</title></rect>
<rect width="12.24" height="12.41" x="464.87" y="123.60" class="known"><title>void __cdecl SE_SoundDlgUpdate(HWND hwndDlg);</title></rect>
<rect width="12.24" height="12.36" x="464.87" y="139.01" class="known"><title>HRESULT __stdcall EnumTextureFormatsCallback(LPDDSDESC lpDdsd, LPVOID lpContext);</title></rect>
<rect width="12.24" height="12.30" x="464.87" y="154.36" class="decompiled"><title>void __cdecl SkidooArmed_Push(const ITEM *item, ITEM *lara_item, int32_t radius);</title></rect>
<rect width="12.24" height="12.14" x="464.87" y="169.66" class="known"><title>void __cdecl Jelly_Control(int16_t item_num);</title></rect>
<rect width="12.24" height="12.14" x="464.87" y="184.80" class="known"><title>void __cdecl S_DrawScreenBox(int32_t sx, int32_t sy, int32_t z, int32_t width, int32_t height, BYTE color_idx, const GOURAUD_OUTLINE *gour, uint16_t flags);</title></rect>
<rect width="12.24" height="12.08" x="464.87" y="199.94" class="known"><title>void __cdecl ControlCeilingSpikes(int16_t item_num);</title></rect>
<rect width="12.24" height="12.03" x="464.87" y="215.02" class="decompiled"><title>void __cdecl Bartoli_Initialise(int16_t item_num);</title></rect>
<rect width="12.24" height="12.03" x="464.87" y="230.05" class="known"><title>int32_t __cdecl S_SaveGame(const void *save_data, uint32_t save_size, int32_t slot_num);</title></rect>
<rect width="12.24" height="11.97" x="464.87" y="245.08" class="decompiled"><title>int32_t __cdecl GameStats(int32_t level_num);</title></rect>
<rect width="12.24" height="11.92" x="464.87" y="260.06" class="decompiled"><title>int32_t __cdecl Game_Cutscene_Start(int32_t level_num);</title></rect>
<rect width="12.24" height="11.81" x="464.87" y="274.98" class="decompiled"><title>int32_t __cdecl Inv_RemoveItem(GAME_OBJECT_ID object_id);</title></rect>
<rect width="12.24" height="11.81" x="464.87" y="289.79" class="decompiled"><title>int16_t __cdecl TitleSequence(void);</title></rect>
<rect width="12.24" height="11.76" x="464.87" y="304.60" class="decompiled"><title>void __cdecl Inv_Ring_Init(RING_INFO *ring, int16_t type, INVENTORY_ITEM **list, int16_t qty, int16_t current, IMOTION_INFO *imo);</title></rect>
<rect width="12.24" height="11.76" x="464.87" y="319.35" class="decompiled"><title>void __cdecl ScreenshotPCX(void);</title></rect>
<rect width="12.24" height="11.70" x="464.87" y="334.11" class="decompiled"><title>bool __cdecl S_Audio_Sample_Load(int32_t sample_id, LPWAVEFORMATEX format, const void *data, int32_t data_size);</title></rect>
<rect width="12.24" height="11.59" x="464.87" y="348.81" class="decompiled"><title>void __cdecl Lara_State_Compress(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12.24" height="11.59" x="464.87" y="363.41" class="known"><title>void __cdecl CopterControl(int16_t item_num);</title></rect>
<rect width="11.49" height="12.29" x="480.11" y="108.19" class="decompiled"><title>void __cdecl Ember_Control(int16_t fx_num);</title></rect>
<rect width="11.49" height="12.29" x="480.11" y="123.47" class="decompiled"><title>bool __cdecl WinVidGoWindowed(int32_t width, int32_t height, DISPLAY_MODE *dispMode);</title></rect>
<rect width="11.49" height="12.23" x="480.11" y="138.76" class="decompiled"><title>void __cdecl Inv_InitColors(void);</title></rect>
<rect width="11.49" height="12.23" x="480.11" y="153.99" class="known"><title>void __cdecl Pendulum(int16_t item_num);</title></rect>
<rect width="11.49" height="12.17" x="480.11" y="169.21" class="known"><title>void __cdecl KillerStatueControl(int16_t item_num);</title></rect>
<rect width="11.49" height="12.06" x="480.11" y="184.39" class="decompiled"><title>int32_t __cdecl Text_GetWidth(TEXTSTRING *string);</title></rect>
<rect width="11.49" height="12" x="480.11" y="199.44" class="known"><title>int32_t __cdecl Diver_GetWaterSurface(int32_t x, int32_t y, int32_t z, int16_t room_num);</title></rect>
<rect width="11.49" height="12" x="480.11" y="214.44" class="decompiled"><title>void __cdecl LOT_InitialiseSlot(int16_t item_num, int32_t slot);</title></rect>
<rect width="11.49" height="12" x="480.11" y="229.44" class="decompiled"><title>int32_t __cdecl Skidoo_CheckGetOffOK(int32_t direction);</title></rect>
<rect width="11.49" height="12" x="480.11" y="244.44" class="known"><title>INT_PTR __stdcall SE_ControlsDlgProc(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="11.49" height="11.94" x="480.11" y="259.44" class="decompiled"><title>TEXTSTRING *__cdecl Text_Create(int32_t x, int32_t y, int32_t z, const char *text);</title></rect>
<rect width="11.49" height="11.94" x="480.11" y="274.38" class="known"><title>void __cdecl FallingBlock(int16_t item_num);</title></rect>
<rect width="11.49" height="11.94" x="480.11" y="289.32" class="decompiled"><title>void __cdecl FmvBackToGame(void);</title></rect>
<rect width="11.49" height="11.94" x="480.11" y="304.26" class="known"><title>void __cdecl S_DisplayPicture(const char *file_name, BOOL is_title);</title></rect>
<rect width="11.49" height="11.88" x="480.11" y="319.21" class="decompiled"><title>void __cdecl Gun_Rifle_Undraw(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="11.49" height="11.88" x="480.11" y="334.09" class="decompiled"><title>bool __cdecl WinVidGetMinMaxInfo(LPMINMAXINFO info);</title></rect>
<rect width="11.49" height="11.54" x="480.11" y="348.97" class="known"><title>void __cdecl IcicleControl(int16_t item_num);</title></rect>
<rect width="11.49" height="11.48" x="480.11" y="363.52" class="decompiled"><title>void __cdecl Overlay_DrawPickups(bool pickup_state);</title></rect>
<rect width="11.49" height="11.43" x="494.60" y="108.19" class="decompiled"><title>void __cdecl Matrix_InterpolateArm(void);</title></rect>
<rect width="11.49" height="11.43" x="509.09" y="108.19" class="decompiled"><title>void __cdecl Switch_CollisionUW(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="11.43" height="11.43" x="523.57" y="108.19" class="decompiled"><title>void __cdecl Lara_Col_Back(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="11.37" height="11.43" x="538" y="108.19" class="decompiled"><title>void __cdecl Lara_InitialiseMeshes(int32_t level_num);</title></rect>
<rect width="11.37" height="11.43" x="552.37" y="108.19" class="known"><title>BOOL __cdecl DecompPCX(const uint8_t *pcx, size_t pcx_size, LPBYTE pic, RGB_888 *pal);</title></rect>
<rect width="11.26" height="11.43" x="566.74" y="108.19" class="decompiled"><title>int32_t __cdecl Boat_TestWaterHeight(ITEM *item, int32_t z_off, int32_t x_off, XYZ_32 *pos);</title></rect>
<rect width="11.26" height="11.43" x="581" y="108.19" class="decompiled"><title>int32_t __cdecl Creature_CheckBaddieOverlap(int16_t item_num);</title></rect>
<rect width="11.26" height="11.43" x="595.25" y="108.19" class="known"><title>void __cdecl Flare_DrawInAir(ITEM *item);</title></rect>
<rect width="11.26" height="11.43" x="609.51" y="108.19" class="decompiled"><title>void __cdecl Skidoo_Collision(int16_t item_num, ITEM *litem, COLL_INFO *coll);</title></rect>
<rect width="11.20" height="11.43" x="623.77" y="108.19" class="decompiled"><title>void __cdecl Output_DrawPoly_Gouraud(int32_t vtx_count, int32_t red, int32_t green, int32_t blue);</title></rect>
<rect width="11.08" height="11.43" x="637.96" y="108.19" class="decompiled"><title>int32_t __cdecl Lara_TestHangOnClimbWall(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="11.08" height="11.43" x="652.05" y="108.19" class="decompiled"><title>void __cdecl Gun_Rifle_Control(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="11.08" height="11.43" x="666.13" y="108.19" class="known"><title>int32_t __cdecl AddTexturePage8(int32_t width, int32_t height, const uint8_t *page_buf, int32_t pal_idx);</title></rect>
<rect width="10.97" height="11.43" x="680.21" y="108.19" class="decompiled"><title>void __cdecl Output_InsertPolygons(const int16_t *obj_ptr, int32_t clip);</title></rect>
<rect width="10.97" height="11.43" x="694.18" y="108.19" class="known"><title>void __cdecl ControlBubble1(int16_t fx_num);</title></rect>
<rect width="10.97" height="11.43" x="708.15" y="108.19" class="decompiled"><title>void __cdecl Lara_SurfaceCollision(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="10.97" height="11.43" x="722.12" y="108.19" class="known"><title>DWORD __cdecl WinInReadJoystick(int32_t *x, int32_t *y);</title></rect>
<rect width="10.91" height="11.43" x="736.09" y="108.19" class="decompiled"><title>int32_t __cdecl Box_StalkBox(const ITEM *item, const ITEM *enemy, int16_t box_num);</title></rect>
<rect width="10.64" height="11.72" x="494.60" y="122.62" class="decompiled"><title>void __cdecl Gun_Rifle_FireShotgun(void);</title></rect>
<rect width="10.64" height="11.60" x="494.60" y="137.34" class="known"><title>void __cdecl SphereOfDoom(int16_t item_num);</title></rect>
<rect width="10.64" height="11.60" x="494.60" y="151.94" class="decompiled"><title>void __cdecl Gun_Rifle_FireGrenade(void);</title></rect>
<rect width="10.64" height="11.54" x="494.60" y="166.53" class="decompiled"><title>void __cdecl Lara_DoClimbLeftRight(ITEM *item, COLL_INFO *coll, int32_t result, int32_t shift);</title></rect>
<rect width="10.64" height="11.41" x="494.60" y="181.07" class="decompiled"><title>void __cdecl Camera_Chase(const ITEM *item);</title></rect>
<rect width="10.64" height="11.29" x="494.60" y="195.48" class="decompiled"><title>void __cdecl Lara_State_SurfTread(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="10.64" height="11.23" x="494.60" y="209.77" class="decompiled"><title>void __cdecl Output_InsertRoom(const int16_t *obj_ptr, int32_t is_outside);</title></rect>
<rect width="10.64" height="11.11" x="494.60" y="224.01" class="known"><title>void __cdecl Output_CalculateObjectLighting(const ITEM *item, const FRAME_INFO *frame);</title></rect>
<rect width="10.64" height="11.11" x="494.60" y="238.12" class="known"><title>BOOL __stdcall DInputEnumDevicesCallback(LPCDIDEVICEINSTANCE lpddi, LPVOID pvRef);</title></rect>
<rect width="10.64" height="11.11" x="494.60" y="252.23" class="known"><title>void __cdecl CalculateWibbleTable(void);</title></rect>
<rect width="10.64" height="11.05" x="494.60" y="266.34" class="decompiled"><title>void __cdecl Camera_RefreshFromTrigger(int16_t type, const int16_t *data);</title></rect>
<rect width="10.64" height="11.05" x="494.60" y="280.39" class="decompiled"><title>int32_t __cdecl Lara_TestWaterStepOut(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="10.64" height="11.05" x="494.60" y="294.43" class="decompiled"><title>int32_t __cdecl S_Audio_Sample_Play(int32_t sample_id, int32_t volume, int32_t pitch, int32_t pan, int32_t flags);</title></rect>
<rect width="10.64" height="10.99" x="494.60" y="308.48" class="decompiled"><title>void __cdecl Lara_TouchLava(ITEM *item);</title></rect>
<rect width="10.64" height="10.99" x="494.60" y="322.47" class="decompiled"><title>void __cdecl RenderFinish(bool need_to_clear_textures);</title></rect>
<rect width="10.64" height="10.87" x="494.60" y="336.46" class="known"><title>bool __cdecl DInputJoystickCreate(void);</title></rect>
<rect width="10.64" height="10.87" x="494.60" y="350.33" class="known"><title>void __cdecl S_InitialisePolyList(BOOL clear_back_buffer);</title></rect>
<rect width="10.64" height="10.81" x="494.60" y="364.19" class="decompiled"><title>void __cdecl Effect_Kill(int16_t fx_num);</title></rect>
<rect width="10.72" height="10.72" x="508.24" y="122.62" class="known"><title>void __cdecl BigBowlControl(int16_t item_num);</title></rect>
<rect width="10.66" height="10.72" x="521.97" y="122.62" class="decompiled"><title>void __cdecl Lara_SlideSlope(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="10.66" height="10.72" x="535.63" y="122.62" class="decompiled"><title>bool __cdecl WinVidSpinMessageLoop(bool needWait);</title></rect>
<rect width="10.66" height="10.72" x="549.29" y="122.62" class="decompiled"><title>BOOL __stdcall S_Audio_Sample_DSoundEnumCallback(LPGUID guid, LPCTSTR description, LPCTSTR module, LPVOID context);</title></rect>
<rect width="10.60" height="10.72" x="562.95" y="122.62" class="decompiled"><title>int32_t __cdecl Lara_TestWall(ITEM *item, int32_t front, int32_t right, int32_t down);</title></rect>
<rect width="10.60" height="10.72" x="576.56" y="122.62" class="decompiled"><title>int32_t __cdecl Skidoo_CheckGetOn(int16_t item_num, COLL_INFO *coll);</title></rect>
<rect width="10.54" height="10.72" x="590.16" y="122.62" class="known"><title>void __cdecl FallingCeiling(int16_t item_num);</title></rect>
<rect width="10.54" height="10.72" x="603.70" y="122.62" class="known"><title>BOOL __cdecl SelectDrive(void);</title></rect>
<rect width="10.42" height="10.72" x="617.24" y="122.62" class="known"><title>void __cdecl ControlHotLiquid(int16_t fx_num);</title></rect>
<rect width="10.30" height="10.72" x="630.66" y="122.62" class="decompiled"><title>void __cdecl CutscenePlayer_Control(int16_t item_num);</title></rect>
<rect width="10.30" height="10.72" x="643.96" y="122.62" class="known"><title>void __cdecl SmashIceControl(int16_t item_num);</title></rect>
<rect width="10.30" height="10.72" x="657.26" y="122.62" class="decompiled"><title>void __cdecl DrawQuad(float sx, float sy, float width, float height, D3DCOLOR color);</title></rect>
<rect width="10.30" height="10.72" x="670.56" y="122.62" class="known"><title>INT_PTR __stdcall SE_AdvancedDlgProc(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="10.24" height="10.72" x="683.86" y="122.62" class="known"><title>void __cdecl EarthQuake(int16_t item_num);</title></rect>
<rect width="10.24" height="10.72" x="697.10" y="122.62" class="known"><title>void __cdecl ModifyStartInfo(int32_t level_num);</title></rect>
<rect width="10.24" height="10.72" x="710.34" y="122.62" class="known"><title>void __cdecl SpringBoardControl(int16_t item_num);</title></rect>
<rect width="10.24" height="10.72" x="723.58" y="122.62" class="decompiled"><title>void __cdecl S_LoadSettings(void);</title></rect>
<rect width="10.18" height="10.72" x="736.82" y="122.62" class="decompiled"><title>int32_t __cdecl LOS_ClipTarget(const GAME_VECTOR *start, GAME_VECTOR *target, const SECTOR *sector);</title></rect>
<rect width="10.16" height="10.74" x="508.24" y="136.34" class="decompiled"><title>void __cdecl Room_TriggerMusicTrackImpl(int16_t value, int16_t flags, int16_t type);</title></rect>
<rect width="10.16" height="10.68" x="508.24" y="150.09" class="decompiled"><title>void __cdecl Effect_CreateBartoliLight(int16_t item_num);</title></rect>
<rect width="10.16" height="10.68" x="508.24" y="163.77" class="decompiled"><title>void __cdecl Dragon_Bones(int16_t item_num);</title></rect>
<rect width="10.16" height="10.68" x="508.24" y="177.45" class="known"><title>void __cdecl MiniCopterControl(int16_t item_num);</title></rect>
<rect width="10.16" height="10.55" x="508.24" y="191.13" class="decompiled"><title>void __cdecl Camera_Clip(int32_t *x, int32_t *y, int32_t *h, int32_t target_x, int32_t target_y, int32_t target_h, int32_t left, int32_t top, int32_t right, int32_t bottom);</title></rect>
<rect width="10.16" height="10.55" x="508.24" y="204.69" class="decompiled"><title>void __cdecl Lara_Col_ForwardJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="10.16" height="10.55" x="508.24" y="218.24" class="known"><title>bool __cdecl SE_GraphicsTestStart(void);</title></rect>
<rect width="10.16" height="10.43" x="508.24" y="231.80" class="decompiled"><title>int16_t __cdecl Creature_Turn(ITEM *item, int16_t maximum_turn);</title></rect>
<rect width="10.16" height="10.43" x="508.24" y="245.23" class="decompiled"><title>void __cdecl WinVidSetDisplayAdapter(DISPLAY_ADAPTER *disp_adapter);</title></rect>
<rect width="10.16" height="10.37" x="508.24" y="258.65" class="decompiled"><title>void __cdecl Lift_Control(int16_t item_num);</title></rect>
<rect width="10.16" height="10.30" x="508.24" y="272.02" class="decompiled"><title>void __cdecl Output_InsertTransQuad(int32_t x, int32_t y, int32_t width, int32_t height, int32_t z);</title></rect>
<rect width="10.16" height="10.30" x="508.24" y="285.32" class="decompiled"><title>void __cdecl Lara_State_ForwardJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="10.16" height="10.30" x="508.24" y="298.63" class="known"><title>void __cdecl Flare_DoInHand(int32_t flare_age);</title></rect>
<rect width="10.16" height="10.30" x="508.24" y="311.93" class="decompiled"><title>void __cdecl CreateWindowPalette(void);</title></rect>
<rect width="10.16" height="10.24" x="508.24" y="325.23" class="decompiled"><title>int32_t __cdecl Output_XGenX(const int16_t *obj_ptr);</title></rect>
<rect width="10.16" height="10.24" x="508.24" y="338.47" class="known"><title>void __cdecl GeneralControl(int16_t item_num);</title></rect>
<rect width="10.16" height="10.24" x="508.24" y="351.71" class="decompiled"><title>DWORD __cdecl EncodeLinePCX(BYTE *src, DWORD width, BYTE *dst);</title></rect>
<rect width="10.16" height="10.05" x="508.24" y="364.95" class="decompiled"><title>void __cdecl UpdateFrame(bool need_run_message_loop, LPRECT rect);</title></rect>
<rect width="10.05" height="10.10" x="521.40" y="136.34" class="decompiled"><title>void __cdecl Lara_TestWaterDepth(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="10.05" height="10.10" x="534.45" y="136.34" class="known"><title>void __cdecl GetCarriedItems(void);</title></rect>
<rect width="9.99" height="10.10" x="547.51" y="136.34" class="decompiled"><title>void __cdecl Demo_LoadLaraPos(void);</title></rect>
<rect width="9.86" height="10.10" x="560.49" y="136.34" class="decompiled"><title>void __cdecl Output_InsertFlatRect(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t z, uint8_t color_idx);</title></rect>
<rect width="9.86" height="10.10" x="573.36" y="136.34" class="decompiled"><title>int32_t __cdecl Item_TestBoundsCollide(const ITEM *src_item, const ITEM *dst_item, int32_t radius);</title></rect>
<rect width="9.80" height="10.10" x="586.22" y="136.34" class="decompiled"><title>void __cdecl Lara_State_Wade(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="9.74" height="10.10" x="599.02" y="136.34" class="known"><title>void __cdecl DInputKeyboardCreate(void);</title></rect>
<rect width="9.67" height="10.10" x="611.75" y="136.34" class="decompiled"><title>void __cdecl Room_GetNearbyRooms(int32_t x, int32_t y, int32_t z, int32_t r, int32_t h, int16_t room_num);</title></rect>
<rect width="9.67" height="10.10" x="624.42" y="136.34" class="decompiled"><title>void __cdecl Door_Control(int16_t item_num);</title></rect>
<rect width="9.67" height="10.10" x="637.09" y="136.34" class="known"><title>BYTE __cdecl FindNearestPaletteEntry(RGB_888 *palette, int32_t red, int32_t green, int32_t blue, bool ignore_sys_palette);</title></rect>
<rect width="9.61" height="10.10" x="649.77" y="136.34" class="decompiled"><title>void __cdecl Output_RotateLight(int16_t pitch, int16_t yaw);</title></rect>
<rect width="9.61" height="10.10" x="662.38" y="136.34" class="known"><title>bool __cdecl SE_SoundTestStart(void);</title></rect>
<rect width="9.55" height="10.10" x="674.98" y="136.34" class="unused"><title>sub_4449D0</title></rect>
<rect width="9.55" height="10.10" x="687.53" y="136.34" class="decompiled"><title>bool __cdecl WinVidCreateGameWindow(void);</title></rect>
<rect width="9.55" height="10.10" x="700.07" y="136.34" class="decompiled"><title>BOOL __cdecl GF_ReadStringTable(DWORD count, char **string_table, char **string_buf, LPDWORD buf_size, HANDLE handle);</title></rect>
<rect width="9.48" height="10.10" x="712.62" y="136.34" class="decompiled"><title>void __cdecl Output_QuickSort(int32_t left, int32_t right);</title></rect>
<rect width="9.48" height="10.10" x="725.10" y="136.34" class="decompiled"><title>void __cdecl EmberEmitter_Control(int16_t item_num);</title></rect>
<rect width="9.42" height="10.10" x="737.58" y="136.34" class="known"><title>void __cdecl SmashWindow(int16_t item_num);</title></rect>
<rect width="9.52" height="9.98" x="521.40" y="149.44" class="decompiled"><title>bool __cdecl S_Audio_Sample_DSoundBufferTest(void);</title></rect>
<rect width="9.52" height="9.98" x="521.40" y="162.42" class="known"><title>BOOL __cdecl S_ReloadLevelGraphics(BOOL reload_palettes, BOOL reload_tex_pages);</title></rect>
<rect width="9.52" height="9.98" x="521.40" y="175.41" class="known"><title>void __thiscall SE_LoadBitmapResource(BITMAP_RESOURCE *bmpRsrc, LPCTSTR lpName);</title></rect>
<rect width="9.52" height="9.85" x="521.40" y="188.39" class="known"><title>void __cdecl Splash(ITEM *item);</title></rect>
<rect width="9.52" height="9.79" x="521.40" y="201.25" class="decompiled"><title>int32_t __cdecl Inv_GetItemOption(GAME_OBJECT_ID object_id);</title></rect>
<rect width="9.52" height="9.79" x="521.40" y="214.03" class="decompiled"><title>void __cdecl Gun_AimWeapon(WEAPON_INFO *winfo, LARA_ARM *arm);</title></rect>
<rect width="9.52" height="9.72" x="521.40" y="226.82" class="decompiled"><title>void __cdecl Requester_ChangeItem(REQUEST_INFO *req, int32_t item, const char *text1, uint32_t flags1, const char *text2, uint32_t flags2);</title></rect>
<rect width="9.52" height="9.72" x="521.40" y="239.54" class="decompiled"><title>void __cdecl Option_Compass(INVENTORY_ITEM *item);</title></rect>
<rect width="9.52" height="9.72" x="521.40" y="252.26" class="known"><title>void __cdecl AnimateTextures(int32_t ticks);</title></rect>
<rect width="9.52" height="9.65" x="521.40" y="264.98" class="decompiled"><title>void __cdecl Zipline_Collision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="9.52" height="9.59" x="521.40" y="277.63" class="decompiled"><title>void __cdecl Lara_Col_StepRight(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="9.52" height="9.59" x="521.40" y="290.22" class="decompiled"><title>int32_t __cdecl Lara_TestClimbStance(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="9.52" height="9.59" x="521.40" y="302.81" class="known"><title>void __cdecl SE_SoundDlgInit(HWND hwndDlg);</title></rect>
<rect width="9.52" height="9.52" x="521.40" y="315.39" class="decompiled"><title>void __cdecl GongBonger_Control(int16_t item_num);</title></rect>
<rect width="9.52" height="9.52" x="521.40" y="327.92" class="decompiled"><title>int32_t __cdecl Switch_Trigger(int16_t item_num, int16_t timer);</title></rect>
<rect width="9.52" height="9.52" x="521.40" y="340.44" class="known"><title>void __cdecl TeethTrap(int16_t item_num);</title></rect>
<rect width="9.52" height="9.52" x="521.40" y="352.96" class="decompiled"><title>HRESULT __stdcall Enum3DDevicesCallback(GUID *lpGuid, LPTSTR lpDeviceDescription, LPTSTR lpDeviceName, LPD3DDEVICEDESC lpD3DHWDeviceDesc, LPD3DDEVICEDESC lpD3DHELDeviceDesc, LPVOID lpContext);</title></rect>
<rect width="9.52" height="9.52" x="521.40" y="365.48" class="known"><title>void __cdecl SE_ControlsDlgInit(HWND hwndDlg);</title></rect>
<rect width="9.97" height="9.03" x="533.93" y="149.44" class="decompiled"><title>void __cdecl Lara_State_Extra_PullDagger(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="9.97" height="9.03" x="546.89" y="149.44" class="decompiled"><title>int32_t __cdecl Lara_TestClimbPos(ITEM *item, int32_t front, int32_t right, int32_t origin, int32_t height, int32_t *shift);</title></rect>
<rect width="9.97" height="9.03" x="559.86" y="149.44" class="decompiled"><title>bool __cdecl WinVidCheckGameWindowPalette(HWND hWnd);</title></rect>
<rect width="9.97" height="9.03" x="572.82" y="149.44" class="decompiled"><title>void __cdecl CreateZBuffer(void);</title></rect>
<rect width="9.90" height="9.03" x="585.79" y="149.44" class="decompiled"><title>int32_t __cdecl Lara_LandedBad(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="9.90" height="9.03" x="598.69" y="149.44" class="decompiled"><title>void __cdecl Room_AlterFloorHeight(ITEM *item, int32_t height);</title></rect>
<rect width="9.83" height="9.03" x="611.58" y="149.44" class="decompiled"><title>void __cdecl Lara_CheatGetStuff(void);</title></rect>
<rect width="9.76" height="9.03" x="624.41" y="149.44" class="known"><title>int16_t __cdecl GunHit(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE yrot, int16_t room_num);</title></rect>
<rect width="9.76" height="9.03" x="637.17" y="149.44" class="decompiled"><title>int32_t __cdecl BGND_AddTexture(int32_t tile_idx, BYTE *bitmap, int32_t pal_index, RGB_888 *bmp_pal);</title></rect>
<rect width="9.76" height="9.03" x="649.93" y="149.44" class="decompiled"><title>bool __cdecl D3DSetViewport(void);</title></rect>
<rect width="9.69" height="9.03" x="662.69" y="149.44" class="decompiled"><title>void __cdecl Creature_Die(int16_t item_num, int32_t explode);</title></rect>
<rect width="9.69" height="9.03" x="675.38" y="149.44" class="decompiled"><title>void __cdecl LOT_CreateZone(ITEM *item);</title></rect>
<rect width="9.48" height="9.03" x="688.07" y="149.44" class="decompiled"><title>void __cdecl Output_InsertLine(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t z, uint8_t color_idx);</title></rect>
<rect width="9.41" height="9.03" x="700.55" y="149.44" class="decompiled"><title>void __cdecl Room_DrawSingleRoomGeometry(int16_t room_num);</title></rect>
<rect width="9.35" height="9.03" x="712.96" y="149.44" class="decompiled"><title>void __cdecl Gondola_Control(int16_t item_num);</title></rect>
<rect width="9.35" height="9.03" x="725.31" y="149.44" class="decompiled"><title>void __cdecl Room_FlipMap(void);</title></rect>
<rect width="9.35" height="9.03" x="737.65" y="149.44" class="decompiled"><title>void __cdecl Lara_Col_FastBack(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="9.32" height="9.06" x="533.93" y="161.47" class="decompiled"><title>void __cdecl Lara_Col_Roll2(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="9.25" height="9.06" x="546.24" y="161.47" class="known"><title>void __cdecl AssaultFinished(ITEM *item);</title></rect>
<rect width="9.25" height="9.06" x="558.49" y="161.47" class="decompiled"><title>int32_t __cdecl Skidoo_TestHeight(const ITEM *item, int32_t z_off, int32_t x_off, XYZ_32 *pos);</title></rect>
<rect width="9.18" height="9.06" x="570.74" y="161.47" class="decompiled"><title>int32_t __cdecl Lara_TestHangSwingIn(ITEM *item, PHD_ANGLE angle);</title></rect>
<rect width="9.18" height="9.06" x="582.92" y="161.47" class="decompiled"><title>int32_t __cdecl Drawbridge_IsItemOnTop(const ITEM *item, int32_t x, int32_t y);</title></rect>
<rect width="9.18" height="9.06" x="595.10" y="161.47" class="known"><title>void __cdecl S_AnimateTextures(int32_t ticks);</title></rect>
<rect width="9.11" height="9.06" x="607.28" y="161.47" class="decompiled"><title>void __cdecl Camera_Initialise(void);</title></rect>
<rect width="9.04" height="9.06" x="619.39" y="161.47" class="decompiled"><title>bool __cdecl WinVidGetDisplayAdapters(void);</title></rect>
<rect width="8.97" height="9.06" x="631.43" y="161.47" class="known"><title>void __cdecl ControlWaterSprite(int16_t fx_num);</title></rect>
<rect width="8.97" height="9.06" x="643.41" y="161.47" class="decompiled"><title>DWORD __cdecl CompPCX(BYTE *bitmap, DWORD width, DWORD height, RGB_888 *palette, BYTE **pcx_data);</title></rect>
<rect width="8.97" height="9.06" x="655.38" y="161.47" class="known"><title>void __cdecl SyncSurfacePalettes(void *src_data, int32_t width, int32_t height, int32_t src_pitch, RGB_888 *src_palette, void *dst_data, int32_t dst_pitch, RGB_888 *dst_palette, bool preserve_sys_palette);</title></rect>
<rect width="8.90" height="9.06" x="667.36" y="161.47" class="decompiled"><title>int32_t __cdecl Lara_TestEdgeCatch(ITEM *item, COLL_INFO *coll, int32_t *edge);</title></rect>
<rect width="8.84" height="9.06" x="679.26" y="161.47" class="decompiled"><title>void __cdecl Requester_AddItem(REQUEST_INFO *req, const char *text1, uint32_t flags1, const char *text2, uint32_t flags2);</title></rect>
<rect width="8.84" height="9.06" x="691.10" y="161.47" class="known"><title>void __cdecl Spider_Leap(int16_t item_num, int16_t angle);</title></rect>
<rect width="8.77" height="9.06" x="702.93" y="161.47" class="decompiled"><title>bool __cdecl Matrix_TranslateRel(int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="8.77" height="9.06" x="714.70" y="161.47" class="decompiled"><title>int32_t __cdecl Item_GetAnimChange(ITEM *item, const ANIM *anim);</title></rect>
<rect width="8.77" height="9.06" x="726.47" y="161.47" class="decompiled"><title>int16_t __cdecl Effect_MissileFlame(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE yrot, int16_t room_num);</title></rect>
<rect width="8.77" height="9.06" x="738.23" y="161.47" class="decompiled"><title>void __cdecl Overlay_DrawHealthBar(bool flash_state);</title></rect>
<rect width="8.64" height="9.19" x="533.93" y="173.53" class="decompiled"><title>void __cdecl Lara_SlideEdgeJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="8.64" height="9.19" x="533.93" y="185.71" class="known"><title>void __cdecl S_CopyScreenToBuffer(void);</title></rect>
<rect width="8.64" height="9.12" x="533.93" y="197.90" class="decompiled"><title>void __cdecl Matrix_RotX(int16_t rx);</title></rect>
<rect width="8.64" height="9.12" x="533.93" y="210.02" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectGT3_ZBuffered(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="8.64" height="9.12" x="533.93" y="222.13" class="decompiled"><title>void __cdecl Requester_SetHeading(REQUEST_INFO *req, char *text1, uint32_t flags1, char *text2, uint32_t flags2);</title></rect>
<rect width="8.64" height="9.12" x="533.93" y="234.25" class="decompiled"><title>int32_t __cdecl Lara_CheckForLetGo(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="8.64" height="9.12" x="533.93" y="246.36" class="decompiled"><title>void __cdecl Gun_FindTargetPoint(const ITEM *item, GAME_VECTOR *target);</title></rect>
<rect width="8.64" height="9.12" x="533.93" y="258.48" class="known"><title>bool __cdecl GuidStringToBinary(LPCTSTR lpString, GUID *guid);</title></rect>
<rect width="8.64" height="8.97" x="533.93" y="270.60" class="decompiled"><title>void __cdecl Matrix_RotY(int16_t ry);</title></rect>
<rect width="8.64" height="8.97" x="533.93" y="282.57" class="decompiled"><title>void __cdecl Matrix_RotZ(int16_t rz);</title></rect>
<rect width="8.64" height="8.97" x="533.93" y="294.54" class="decompiled"><title>void __cdecl Creature_Float(int16_t item_num);</title></rect>
<rect width="8.64" height="8.97" x="533.93" y="306.52" class="known"><title>void __cdecl XianDamage(ITEM *item, CREATURE *xian, int32_t damage);</title></rect>
<rect width="8.64" height="8.90" x="533.93" y="318.49" class="decompiled"><title>void __cdecl Output_InsertSprite(int32_t z, int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t sprite_idx, int16_t shade);</title></rect>
<rect width="8.64" height="8.90" x="533.93" y="330.39" class="decompiled"><title>int32_t __cdecl Box_ValidBox(const ITEM *item, int16_t zone_num, int16_t box_num);</title></rect>
<rect width="8.64" height="8.90" x="533.93" y="342.29" class="known"><title>void __cdecl ShootAtLara(FX *fx);</title></rect>
<rect width="8.64" height="8.90" x="533.93" y="354.20" class="known"><title>int16_t __cdecl GunMiss(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE yrot, int16_t room_num);</title></rect>
<rect width="8.64" height="8.90" x="533.93" y="366.10" class="decompiled"><title>bool __cdecl ShowDDrawGameWindow(bool active);</title></rect>
<rect width="8.68" height="8.72" x="545.57" y="173.53" class="decompiled"><title>void __cdecl Lara_State_Extra_StartHouse(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="8.61" height="8.72" x="557.24" y="173.53" class="decompiled"><title>int32_t __cdecl Box_EscapeBox(const ITEM *item, const ITEM *enemy, int16_t box_num);</title></rect>
<rect width="8.61" height="8.72" x="568.85" y="173.53" class="known"><title>void __cdecl DoLotsOfBlood(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE direction, int16_t room_num, int32_t num);</title></rect>
<rect width="8.53" height="8.72" x="580.45" y="173.53" class="decompiled"><title>void __cdecl Requester_Shutdown(REQUEST_INFO *req);</title></rect>
<rect width="8.53" height="8.72" x="591.99" y="173.53" class="decompiled"><title>void __cdecl Lara_State_Extra_FinalAnim(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="8.53" height="8.72" x="603.52" y="173.53" class="decompiled"><title>int32_t __cdecl Trapdoor_IsItemOnTop(const ITEM *item, int32_t x, int32_t z);</title></rect>
<rect width="8.46" height="8.72" x="615.06" y="173.53" class="known"><title>bool __cdecl LoadTexturePage(int32_t page_idx, bool reset);</title></rect>
<rect width="8.39" height="8.72" x="626.52" y="173.53" class="decompiled"><title>void __cdecl Output_AlterFOV(int16_t fov);</title></rect>
<rect width="8.39" height="8.72" x="637.91" y="173.53" class="decompiled"><title>void __cdecl Matrix_RotYXZsuperpack(const int16_t **pprot, int32_t skip);</title></rect>
<rect width="8.39" height="8.72" x="649.30" y="173.53" class="decompiled"><title>void __cdecl CreateRenderBuffer(void);</title></rect>
<rect width="8.32" height="8.72" x="660.70" y="173.53" class="decompiled"><title>int32_t __cdecl LOS_Check(const GAME_VECTOR *start, GAME_VECTOR *target);</title></rect>
<rect width="8.25" height="8.72" x="672.02" y="173.53" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectGT3_Sorted(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="8.25" height="8.72" x="683.27" y="173.53" class="known"><title>void __cdecl setup_screen_size(void);</title></rect>
<rect width="8.11" height="8.72" x="694.52" y="173.53" class="decompiled"><title>void __cdecl Output_DrawScreenSprite(int32_t sx, int32_t sy, int32_t sz, int32_t scale_h, int32_t scale_v, int16_t sprite_idx, int16_t shade, uint16_t flags);</title></rect>
<rect width="8.11" height="8.72" x="705.63" y="173.53" class="known"><title>int32_t __cdecl Flare_DoLight(XYZ_32 *pos, int32_t flare_age);</title></rect>
<rect width="8.11" height="8.72" x="716.74" y="173.53" class="known"><title>void __cdecl InitialiseFinalLevel(void);</title></rect>
<rect width="8.11" height="8.72" x="727.85" y="173.53" class="decompiled"><title>void __cdecl CreateClipper(void);</title></rect>
<rect width="8.04" height="8.72" x="738.96" y="173.53" class="decompiled"><title>void __cdecl Item_NewRoom(int16_t item_num, int16_t room_num);</title></rect>
<rect width="8.15" height="8.61" x="545.57" y="185.25" class="decompiled"><title>bool __cdecl S_Audio_Sample_Init(void);</title></rect>
<rect width="8.15" height="8.54" x="545.57" y="196.86" class="decompiled"><title>void __cdecl Lara_CollideStop(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="8.15" height="8.46" x="545.57" y="208.40" class="known"><title>void __cdecl swap_meshes_with_meshswap3(ITEM *item);</title></rect>
<rect width="8.15" height="8.46" x="545.57" y="219.86" class="decompiled"><title>void __cdecl Level_LoadDemoExternal(LPCTSTR level_name);</title></rect>
<rect width="8.15" height="8.46" x="545.57" y="231.32" class="decompiled"><title>int32_t __cdecl Game_Loop(bool demo_mode);</title></rect>
<rect width="8.15" height="8.39" x="545.57" y="242.78" class="decompiled"><title>void __cdecl Camera_Fixed(void);</title></rect>
<rect width="8.15" height="8.39" x="545.57" y="254.16" class="decompiled"><title>int16_t __cdecl Room_GetTiltType(const SECTOR *sector, int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="8.15" height="8.39" x="545.57" y="265.55" class="decompiled"><title>void __cdecl Lara_Col_FastFall(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="8.15" height="8.31" x="545.57" y="276.94" class="known"><title>void __cdecl WarriorSparkleTrail(ITEM *item);</title></rect>
<rect width="8.15" height="8.31" x="545.57" y="288.25" class="decompiled"><title>void __cdecl CreateBackBuffer(void);</title></rect>
<rect width="8.15" height="8.31" x="545.57" y="299.56" class="known"><title>bool __cdecl CreateTexturePageSurface(TEXPAGE_DESC *desc);</title></rect>
<rect width="8.15" height="8.24" x="545.57" y="310.87" class="decompiled"><title>void __cdecl Overlay_DrawAirBar(bool flash_state);</title></rect>
<rect width="8.15" height="8.24" x="545.57" y="322.11" class="known"><title>void __cdecl AdjustTextureUVs(bool reset_uv_add);</title></rect>
<rect width="8.15" height="8.16" x="545.57" y="333.35" class="decompiled"><title>void __cdecl Output_DrawScreenSprite2D(int32_t sx, int32_t sy, int32_t sz, int32_t scale_h, int32_t scale_v, int16_t sprite_idx, int16_t shade, uint16_t flags);</title></rect>
<rect width="8.15" height="8.16" x="545.57" y="344.51" class="decompiled"><title>void __cdecl Lara_Control_Cutscene(int16_t item_num);</title></rect>
<rect width="8.15" height="8.16" x="545.57" y="355.67" class="decompiled"><title>void __cdecl Room_RemoveFlipItems(ROOM *r);</title></rect>
<rect width="8.15" height="8.16" x="545.57" y="366.84" class="known"><title>void __cdecl floor_shake_effect(ITEM *item);</title></rect>
<rect width="7.86" height="8.46" x="556.72" y="185.25" class="decompiled"><title>void __cdecl Lara_State_Zipline(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="7.86" height="8.46" x="556.72" y="196.72" class="decompiled"><title>void __cdecl Lara_Col_Compress( ITEM *item, COLL_INFO *coll );</title></rect>
<rect width="7.86" height="8.46" x="556.72" y="208.18" class="decompiled"><title>void __cdecl Gun_HitTarget(ITEM *item, GAME_VECTOR *hitpos, int32_t damage);</title></rect>
<rect width="7.86" height="8.46" x="556.72" y="219.64" class="known"><title>void __cdecl WindowControl(int16_t item_num);</title></rect>
<rect width="7.86" height="8.46" x="556.72" y="231.11" class="known"><title>int32_t __cdecl S_LoadGame(void *save_data, uint32_t save_size, int32_t slot_num);</title></rect>
<rect width="7.86" height="8.46" x="556.72" y="242.57" class="decompiled"><title>void __cdecl Option_Controls_UpdateText(void);</title></rect>
<rect width="7.86" height="8.39" x="556.72" y="254.04" class="decompiled"><title>void __cdecl Output_SetNearZ(int32_t near_z);</title></rect>
<rect width="7.86" height="8.39" x="556.72" y="265.42" class="decompiled"><title>void __cdecl Box_TargetBox(LOT_INFO *lot, int16_t box_num);</title></rect>
<rect width="7.86" height="8.39" x="556.72" y="276.81" class="decompiled"><title>void __cdecl Lara_Col_TurnRight(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="7.86" height="8.39" x="556.72" y="288.20" class="known"><title>bool __cdecl GetRegistryStringValue(LPCTSTR lpValueName, LPTSTR value, DWORD maxSize, LPCTSTR defaultValue);</title></rect>
<rect width="7.86" height="8.31" x="556.72" y="299.59" class="decompiled"><title>void __cdecl CreatePrimarySurface(void);</title></rect>
<rect width="7.86" height="8.23" x="556.72" y="310.90" class="decompiled"><title>void __cdecl Misc_InitCinematicRooms(void);</title></rect>
<rect width="7.86" height="8.23" x="556.72" y="322.13" class="decompiled"><title>void __cdecl Effect_NewRoom(int16_t fx_num, int16_t room_num);</title></rect>
<rect width="7.86" height="8.23" x="556.72" y="333.37" class="known"><title>void __cdecl SE_AdvancedDlgUpdate(HWND hwndDlg);</title></rect>
<rect width="7.86" height="8.16" x="556.72" y="344.60" class="decompiled"><title>int32_t __cdecl Item_GetFrames(const ITEM *item, FRAME_INFO *frmptr[], int32_t *rate);</title></rect>
<rect width="7.86" height="8.16" x="556.72" y="355.76" class="decompiled"><title>void __cdecl Music_SetVolume(int32_t volume);</title></rect>
<rect width="7.86" height="8.08" x="556.72" y="366.92" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectGT4_ZBuffered(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="7.93" height="8.01" x="567.57" y="185.25" class="decompiled"><title>void __cdecl Lara_State_Extra_SharkKill(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="7.93" height="8.01" x="578.50" y="185.25" class="known"><title>void __cdecl BladeControl(int16_t item_num);</title></rect>
<rect width="7.93" height="8.01" x="589.43" y="185.25" class="known"><title>bool __cdecl GetRegistryGuidValue(LPCTSTR lpValueName, GUID *value, GUID *defaultValue);</title></rect>
<rect width="7.86" height="8.01" x="600.36" y="185.25" class="decompiled"><title>void __cdecl Lara_Col_Reach(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="7.86" height="8.01" x="611.22" y="185.25" class="known"><title>int32_t __cdecl GetCollisionAnim(ITEM *skidoo, XYZ_32 *moved);</title></rect>
<rect width="7.86" height="8.01" x="622.07" y="185.25" class="decompiled"><title>void __cdecl FlameEmitter_Control(int16_t item_num);</title></rect>
<rect width="7.86" height="8.01" x="632.93" y="185.25" class="decompiled"><title>bool __cdecl WinVidCopyBitmapToBuffer(LPDDS surface, const BYTE *bitmap);</title></rect>
<rect width="7.78" height="8.01" x="643.78" y="185.25" class="decompiled"><title>void __cdecl CutscenePlayer1_Initialise(int16_t item_num);</title></rect>
<rect width="7.78" height="8.01" x="654.56" y="185.25" class="known"><title>void __cdecl FloodFX(ITEM *item);</title></rect>
<rect width="7.70" height="8.01" x="665.34" y="185.25" class="decompiled"><title>void __cdecl HWR_LoadTexturePages(int32_t pages_count, void *pages_buf, RGB_888 *palette);</title></rect>
<rect width="7.63" height="8.01" x="676.05" y="185.25" class="decompiled"><title>void __cdecl Detonator_Control(int16_t item_num);</title></rect>
<rect width="7.55" height="8.01" x="686.68" y="185.25" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectGT4_Sorted(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="7.55" height="8.01" x="697.23" y="185.25" class="decompiled"><title>int32_t __cdecl Lara_IsNearItem(PHD_3DPOS *pos, int32_t distance);</title></rect>
<rect width="7.55" height="8.01" x="707.79" y="185.25" class="known"><title>void __cdecl ControlSnowSprite(int16_t fx_num);</title></rect>
<rect width="7.55" height="8.01" x="718.34" y="185.25" class="decompiled"><title>void __cdecl Text_AddBackground(TEXTSTRING *string, int16_t x_size, int16_t y_size, int16_t x_off, int16_t y_off, int16_t z_off, int16_t color, uint16_t *gour_ptr, uint16_t flags);</title></rect>
<rect width="7.55" height="8.01" x="728.89" y="185.25" class="unused"><title>sub_444B20</title></rect>
<rect width="7.55" height="8.01" x="739.45" y="185.25" class="decompiled"><title>bool __cdecl WinVidGetDisplayMode(DISPLAY_MODE *disp_mode);</title></rect>
<rect width="7.64" height="7.84" x="567.57" y="196.26" class="decompiled"><title>int32_t __cdecl Box_BadFloor(int32_t x, int32_t y, int32_t z, int32_t box_height, int32_t next_height, int16_t room_num, LOT_INFO *lot);</title></rect>
<rect width="7.64" height="7.84" x="567.57" y="207.10" class="decompiled"><title>void __cdecl Lara_State_Walk(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="7.64" height="7.84" x="567.57" y="217.93" class="decompiled"><title>D3DCOLOR __cdecl BGND_CenterLighting(int32_t x, int32_t y, int32_t width, int32_t height);</title></rect>
<rect width="7.64" height="7.76" x="567.57" y="228.77" class="decompiled"><title>void __cdecl Item_RemoveActive(int16_t item_num);</title></rect>
<rect width="7.64" height="7.76" x="567.57" y="239.53" class="decompiled"><title>void __cdecl Lara_State_TurnRight(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="7.64" height="7.76" x="567.57" y="250.29" class="decompiled"><title>BOOL __cdecl Level_LoadDemo(HANDLE handle);</title></rect>
<rect width="7.64" height="7.76" x="567.57" y="261.05" class="known"><title>INT_PTR __stdcall SE_OptionsDlgProc(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="7.64" height="7.68" x="567.57" y="271.81" class="decompiled"><title>void __cdecl Bird_Initialise(int16_t item_num);</title></rect>
<rect width="7.64" height="7.68" x="567.57" y="282.49" class="decompiled"><title>void __cdecl Inv_SelectMeshes(INVENTORY_ITEM *inv_item);</title></rect>
<rect width="7.64" height="7.68" x="567.57" y="293.17" class="decompiled"><title>void __cdecl Lara_ResetLook(void);</title></rect>
<rect width="7.64" height="7.68" x="567.57" y="303.85" class="decompiled"><title>void __cdecl Lara_State_TurnLeft(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="7.64" height="7.68" x="567.57" y="314.53" class="known"><title>void __cdecl S_OutputPolyList(void);</title></rect>
<rect width="7.64" height="7.60" x="567.57" y="325.22" class="decompiled"><title>bool __cdecl WinVidGoFullScreen(DISPLAY_MODE *disp_mode);</title></rect>
<rect width="7.64" height="7.60" x="567.57" y="335.82" class="decompiled"><title>bool __cdecl IntroFMV(const char *file_name1, const char *file_name2);</title></rect>
<rect width="7.64" height="7.53" x="567.57" y="346.42" class="known"><title>void __cdecl DyingMonk(int16_t item_num);</title></rect>
<rect width="7.64" height="7.53" x="567.57" y="356.95" class="decompiled"><title>bool __cdecl HideDDrawGameWindow(void);</title></rect>
<rect width="7.64" height="7.53" x="567.57" y="367.47" class="known"><title>int32_t __cdecl CreateTexturePalette(const RGB_888 *pal);</title></rect>
<rect width="7.94" height="7.16" x="578.21" y="196.26" class="decompiled"><title>void __cdecl Lara_SwimTurn(ITEM *item);</title></rect>
<rect width="7.94" height="7.16" x="589.15" y="196.26" class="decompiled"><title>void __cdecl Sound_EndScene(void);</title></rect>
<rect width="7.94" height="7.16" x="600.09" y="196.26" class="known"><title>void __cdecl HookControl(int16_t item_num);</title></rect>
<rect width="7.86" height="7.16" x="611.04" y="196.26" class="decompiled"><title>void __cdecl Output_DrawPickup(int32_t sx, int32_t sy, int32_t scale, int16_t sprite_idx, int16_t shade);</title></rect>
<rect width="7.86" height="7.16" x="621.89" y="196.26" class="decompiled"><title>void __cdecl Lara_State_Tread(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="7.86" height="7.16" x="632.75" y="196.26" class="decompiled"><title>bool __cdecl Creature_CanTargetEnemy(const ITEM *item, const AI_INFO *info);</title></rect>
<rect width="7.78" height="7.16" x="643.61" y="196.26" class="decompiled"><title>void __cdecl Lara_State_Back(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="7.78" height="7.16" x="654.39" y="196.26" class="decompiled"><title>bool __cdecl Music_PlaySynced(int32_t track_id);</title></rect>
<rect width="7.70" height="7.16" x="665.17" y="196.26" class="known"><title>void __cdecl Object_DrawSpriteItem(const ITEM *item);</title></rect>
<rect width="7.70" height="7.16" x="675.86" y="196.26" class="decompiled"><title>void __cdecl Lara_Col_Fallback(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="7.61" height="7.16" x="686.56" y="196.26" class="known"><title>void __cdecl ControlBlood1(int16_t fx_num);</title></rect>
<rect width="7.61" height="7.16" x="697.17" y="196.26" class="decompiled"><title>void __cdecl Requester_Init(REQUEST_INFO *req);</title></rect>
<rect width="7.61" height="7.16" x="707.79" y="196.26" class="decompiled"><title>void __cdecl HWR_EnableZBuffer(bool z_write_enable, bool z_enable);</title></rect>
<rect width="7.53" height="7.16" x="718.40" y="196.26" class="decompiled"><title>int32_t __cdecl Inv_AnimateInventoryItem(INVENTORY_ITEM *inv_item);</title></rect>
<rect width="7.53" height="7.16" x="728.93" y="196.26" class="decompiled"><title>void __cdecl Inv_RingIsNotOpen(RING_INFO *ring);</title></rect>
<rect width="7.53" height="7.16" x="739.47" y="196.26" class="decompiled"><title>int32_t __cdecl AddAssaultTime(uint32_t time);</title></rect>
<rect width="7.40" height="7.29" x="578.21" y="206.42" class="decompiled"><title>void __cdecl Lara_Col_Stop(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="7.40" height="7.29" x="578.21" y="216.71" class="decompiled"><title>void __cdecl Lara_Col_Roll(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="7.40" height="7.29" x="578.21" y="227" class="decompiled"><title>void __cdecl SkidooArmed_Collision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="7.40" height="7.13" x="578.21" y="237.29" class="decompiled"><title>int32_t __cdecl Room_FindByPos(int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="7.40" height="7.13" x="578.21" y="247.42" class="known"><title>void __cdecl ControlExplosion1(int16_t fx_num);</title></rect>
<rect width="7.40" height="7.13" x="578.21" y="257.55" class="decompiled"><title>int32_t __cdecl Lara_DeflectEdge(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="7.40" height="7.13" x="578.21" y="267.68" class="decompiled"><title>void __cdecl SkidooDriver_Initialise(int16_t item_num);</title></rect>
<rect width="7.40" height="7.13" x="578.21" y="277.81" class="known"><title>bool __cdecl WinInputInit(void);</title></rect>
<rect width="7.40" height="7.13" x="578.21" y="287.94" class="decompiled"><title>void __cdecl Random_Seed(void);</title></rect>
<rect width="7.40" height="7.13" x="578.21" y="298.07" class="decompiled"><title>void __cdecl Option_DoInventory(INVENTORY_ITEM *item);</title></rect>
<rect width="7.40" height="7.05" x="578.21" y="308.20" class="known"><title>void __cdecl BellControl(int16_t item_num);</title></rect>
<rect width="7.40" height="7.05" x="578.21" y="318.25" class="decompiled"><title>void __cdecl Option_Controls_FlashConflicts(void);</title></rect>
<rect width="7.40" height="7.05" x="578.21" y="328.30" class="known"><title>void __cdecl S_SyncPictureBufferPalette(void);</title></rect>
<rect width="7.40" height="6.97" x="578.21" y="338.36" class="decompiled"><title>void __cdecl S_SaveSettings(void);</title></rect>
<rect width="7.40" height="6.89" x="578.21" y="348.33" class="decompiled"><title>BOUNDS_16 *__cdecl Item_GetBoundsAccurate(const ITEM *item);</title></rect>
<rect width="7.40" height="6.89" x="578.21" y="358.22" class="decompiled"><title>int32_t __cdecl Item_GlobalReplace(GAME_OBJECT_ID src_object_id, GAME_OBJECT_ID dst_object_id);</title></rect>
<rect width="7.40" height="6.89" x="578.21" y="368.11" class="decompiled"><title>void __cdecl Lara_State_StepRight(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="7.26" height="7.03" x="588.61" y="206.42" class="decompiled"><title>void __cdecl Lara_State_StepLeft(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="7.26" height="7.03" x="598.87" y="206.42" class="decompiled"><title>void __cdecl Gun_Pistols_Draw(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="7.26" height="7.03" x="609.13" y="206.42" class="known"><title>void __cdecl InitialiseDyingMonk(int16_t item_num);</title></rect>
<rect width="7.26" height="7.03" x="619.39" y="206.42" class="decompiled"><title>void __cdecl Skidoo_Explode(const ITEM *skidoo);</title></rect>
<rect width="7.26" height="7.03" x="629.64" y="206.42" class="decompiled"><title>int32_t __cdecl WinGameStart(void);</title></rect>
<rect width="7.17" height="7.03" x="639.90" y="206.42" class="decompiled"><title>void __cdecl Gun_Rifle_FireM16(bool running);</title></rect>
<rect width="7.09" height="7.03" x="650.07" y="206.42" class="decompiled"><title>void __cdecl Matrix_TranslateAbs(int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="7.09" height="7.03" x="660.17" y="206.42" class="known"><title>int16_t __cdecl Diver_Harpoon(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE y_rot, int16_t room_num);</title></rect>
<rect width="7.09" height="7.03" x="670.26" y="206.42" class="decompiled"><title>void __cdecl Overlay_DisplayModeInfo(char* string);</title></rect>
<rect width="7.01" height="7.03" x="680.35" y="206.42" class="decompiled"><title>void __cdecl Lara_TakeHit(ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="7.01" height="7.03" x="690.36" y="206.42" class="decompiled"><title>void __cdecl Lara_Col_FastDive(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="7.01" height="7.03" x="700.37" y="206.42" class="decompiled"><title>BOOL __cdecl Level_LoadCinematic(HANDLE handle);</title></rect>
<rect width="6.93" height="7.03" x="710.38" y="206.42" class="decompiled"><title>void __cdecl Math_GetVectorAngles(int32_t x, int32_t y, int32_t z, int16_t *dest);</title></rect>
<rect width="6.93" height="7.03" x="720.30" y="206.42" class="decompiled"><title>void __cdecl Creature_Collision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="6.93" height="7.03" x="730.23" y="206.42" class="known"><title>void __cdecl LaraBubbles(ITEM *item);</title></rect>
<rect width="6.84" height="7.03" x="740.16" y="206.42" class="decompiled"><title>void __cdecl Door_Collision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="7.31" height="6.58" x="588.61" y="216.45" class="decompiled"><title>int32_t __cdecl Inv_RequestItem(GAME_OBJECT_ID object_id);</title></rect>
<rect width="7.31" height="6.58" x="598.92" y="216.45" class="decompiled"><title>bool __cdecl Music_Init(void);</title></rect>
<rect width="7.22" height="6.58" x="609.23" y="216.45" class="known"><title>int16_t __cdecl Knife(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE yrot, int16_t room_num);</title></rect>
<rect width="7.22" height="6.58" x="619.45" y="216.45" class="known"><title>void __cdecl DrawHair(void);</title></rect>
<rect width="7.22" height="6.58" x="629.68" y="216.45" class="decompiled"><title>void __cdecl Lara_State_Glide(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="7.22" height="6.58" x="639.90" y="216.45" class="known"><title>bool __cdecl GetRegistryBoolValue(LPCTSTR lpValueName, bool *pValue, bool defaultValue);</title></rect>
<rect width="7.14" height="6.58" x="650.12" y="216.45" class="decompiled"><title>int16_t __cdecl Lara_FloorFront(ITEM *item, PHD_ANGLE ang, int32_t dist);</title></rect>
<rect width="7.14" height="6.58" x="660.25" y="216.45" class="decompiled"><title>void __cdecl Lara_State_ClimbStance(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="7.14" height="6.58" x="670.39" y="216.45" class="known"><title>void __cdecl InitialiseWindow(int16_t item_num);</title></rect>
<rect width="7.05" height="6.58" x="680.53" y="216.45" class="known"><title>void __cdecl InitialiseHair(void);</title></rect>
<rect width="7.05" height="6.58" x="690.57" y="216.45" class="decompiled"><title>void __cdecl Lara_Col_Jumper(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="6.96" height="6.58" x="700.62" y="216.45" class="decompiled"><title>void __cdecl GameWindowCalculateSizeFromClient(int32_t *width, int32_t *height);</title></rect>
<rect width="6.88" height="6.58" x="710.58" y="216.45" class="decompiled"><title>void __cdecl Matrix_LookAt(int32_t xsrc, int32_t ysrc, int32_t zsrc, int32_t xtar, int32_t ytar, int32_t ztar, int16_t roll);</title></rect>
<rect width="6.88" height="6.58" x="720.46" y="216.45" class="known"><title>void __cdecl Richochet(GAME_VECTOR *pos);</title></rect>
<rect width="6.88" height="6.58" x="730.34" y="216.45" class="decompiled"><title>void __cdecl Lara_LookLeftRight(void);</title></rect>
<rect width="6.79" height="6.58" x="740.21" y="216.45" class="known"><title>void __cdecl ControlSplash1(int16_t fx_num);</title></rect>
<rect width="6.65" height="6.71" x="588.61" y="226.03" class="decompiled"><title>void __thiscall WinVidGetColorBitMasks(COLOR_BIT_MASKS *bm, LPDDPIXELFORMAT pixel_format);</title></rect>
<rect width="6.65" height="6.71" x="588.61" y="235.74" class="decompiled"><title>BOOL __cdecl Level_LoadPalettes(HANDLE handle);</title></rect>
<rect width="6.65" height="6.71" x="588.61" y="245.45" class="known"><title>bool __cdecl GetRegistryBinaryValue(LPCTSTR lpValueName, LPBYTE value, DWORD valueSize, LPBYTE defaultValue);</title></rect>
<rect width="6.65" height="6.63" x="588.61" y="255.17" class="decompiled"><title>void __cdecl Gun_Rifle_Ready(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="6.65" height="6.63" x="588.61" y="264.79" class="decompiled"><title>void __cdecl Lara_State_SurfSwim(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="6.65" height="6.63" x="588.61" y="274.42" class="decompiled"><title>void __cdecl CreatePictureBuffer(void);</title></rect>
<rect width="6.65" height="6.54" x="588.61" y="284.05" class="decompiled"><title>int32_t __cdecl Box_UpdateLOT(LOT_INFO *lot, int32_t expansion);</title></rect>
<rect width="6.65" height="6.54" x="588.61" y="293.59" class="decompiled"><title>void __cdecl Item_RemoveDrawn(int16_t item_num);</title></rect>
<rect width="6.65" height="6.54" x="588.61" y="303.13" class="decompiled"><title>void __cdecl Music_Play(int16_t track_id, bool is_looped);</title></rect>
<rect width="6.65" height="6.54" x="588.61" y="312.67" class="known"><title>BOOL __cdecl UT_CenterWindow(HWND hWnd);</title></rect>
<rect width="6.65" height="6.46" x="588.61" y="322.21" class="known"><title>void __cdecl UT_MemBlt(BYTE *dstBuf, DWORD dstX, DWORD dstY, DWORD width, DWORD height, DWORD dstPitch, BYTE *srcBuf, DWORD srcX, DWORD srcY, DWORD srcPitch);</title></rect>
<rect width="6.65" height="6.28" x="588.61" y="331.67" class="decompiled"><title>int32_t __cdecl Output_VisibleZClip(const PHD_VBUF *vtx0, const PHD_VBUF *vtx1, const PHD_VBUF *vtx2);</title></rect>
<rect width="6.65" height="6.28" x="588.61" y="340.95" class="decompiled"><title>void __cdecl Overlay_AddDisplayPickup(GAME_OBJECT_ID object_id);</title></rect>
<rect width="6.65" height="6.28" x="588.61" y="350.24" class="decompiled"><title>int16_t __cdecl Effect_Create(int16_t room_num);</title></rect>
<rect width="6.65" height="6.28" x="588.61" y="359.52" class="known"><title>void *__cdecl game_malloc(size_t alloc_size, GAME_BUFFER buf_index);</title></rect>
<rect width="6.65" height="6.20" x="588.61" y="368.80" class="decompiled"><title>void __cdecl Output_SetFarZ(int32_t far_z);</title></rect>
<rect width="6.66" height="6.19" x="598.27" y="226.03" class="decompiled"><title>void __cdecl Lara_State_Swim(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="6.66" height="6.19" x="607.92" y="226.03" class="known"><title>void __cdecl Object_DrawUnclippedItem(const ITEM *item);</title></rect>
<rect width="6.66" height="6.19" x="617.58" y="226.03" class="decompiled"><title>bool __cdecl PlayFMV(const char *file_name);</title></rect>
<rect width="6.57" height="6.19" x="627.24" y="226.03" class="decompiled"><title>void __cdecl Direct3DRelease(void);</title></rect>
<rect width="6.57" height="6.19" x="636.81" y="226.03" class="decompiled"><title>void __cdecl GameWindowCalculateSizeFromClientByZero(int32_t *width, int32_t *height);</title></rect>
<rect width="6.57" height="6.19" x="646.38" y="226.03" class="decompiled"><title>bool __cdecl WinVidRegisterGameWindowClass(void);</title></rect>
<rect width="6.57" height="6.19" x="655.95" y="226.03" class="known"><title>int32_t __cdecl CreateTexturePage(int32_t width, int32_t height, bool alpha);</title></rect>
<rect width="6.48" height="6.19" x="665.51" y="226.03" class="decompiled"><title>void __cdecl Lara_Col_SwanDive(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="6.39" height="6.19" x="674.99" y="226.03" class="decompiled"><title>void __cdecl Sound_UpdateEffects(void);</title></rect>
<rect width="6.39" height="6.19" x="684.38" y="226.03" class="known"><title>void __cdecl ControlClockChimes(int16_t item_num);</title></rect>
<rect width="6.39" height="6.19" x="693.77" y="226.03" class="decompiled"><title>void __cdecl Lara_Col_Death(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="6.39" height="6.19" x="703.15" y="226.03" class="decompiled"><title>void __cdecl Object_SetupAllObjects(void);</title></rect>
<rect width="6.39" height="6.19" x="712.54" y="226.03" class="unused"><title>sub_4470F0</title></rect>
<rect width="6.39" height="6.19" x="721.93" y="226.03" class="unused"><title>sub_447AC0</title></rect>
<rect width="6.39" height="6.19" x="731.32" y="226.03" class="known"><title>void __cdecl SE_ControlsDlgUpdate(HWND hwndDlg);</title></rect>
<rect width="6.30" height="6.19" x="740.70" y="226.03" class="decompiled"><title>void __cdecl Object_Collision_Trap(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="6.33" height="6.16" x="598.27" y="235.22" class="known"><title>void __cdecl ControlAlarmSound(int16_t item_num);</title></rect>
<rect width="6.33" height="6.16" x="598.27" y="244.38" class="decompiled"><title>int32_t __cdecl Lara_HitCeiling(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="6.33" height="6.16" x="598.27" y="253.54" class="decompiled"><title>void __cdecl UpdateGameResolution(void);</title></rect>
<rect width="6.33" height="6.07" x="598.27" y="262.71" class="decompiled"><title>int32_t __cdecl GF_DoLevelSequence(int32_t level, GAMEFLOW_LEVEL_TYPE type);</title></rect>
<rect width="6.33" height="6.07" x="598.27" y="271.78" class="decompiled"><title>void __cdecl Lara_LookUpDown(void);</title></rect>
<rect width="6.33" height="6.07" x="598.27" y="280.86" class="known"><title>int16_t __cdecl GunShot(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE yrot, int16_t room_num);</title></rect>
<rect width="6.33" height="5.90" x="598.27" y="289.93" class="known"><title>void __cdecl CreateBubble(PHD_3DPOS *pos, int16_t room_num);</title></rect>
<rect width="6.33" height="5.90" x="598.27" y="298.83" class="decompiled"><title>int32_t __cdecl GameInit(bool skip_cd_init);</title></rect>
<rect width="6.33" height="5.90" x="598.27" y="307.72" class="known"><title>void __thiscall SE_DrawBitmap(BITMAP_RESOURCE *bmpRsrc, HDC hdc, int32_t x, int32_t y);</title></rect>
<rect width="6.33" height="5.81" x="598.27" y="316.62" class="known"><title>void __cdecl swap_meshes_with_meshswap1(ITEM *item);</title></rect>
<rect width="6.33" height="5.81" x="598.27" y="325.42" class="known"><title>void __cdecl swap_meshes_with_meshswap2(ITEM *item);</title></rect>
<rect width="6.33" height="5.81" x="598.27" y="334.23" class="decompiled"><title>void __cdecl Inv_Ring_MotionInit(RING_INFO *ring, int16_t frames, int16_t status, int16_t status_target);</title></rect>
<rect width="6.33" height="5.81" x="598.27" y="343.04" class="decompiled"><title>void __cdecl Inv_Ring_MotionItemDeselect(RING_INFO *ring, INVENTORY_ITEM *inv_item);</title></rect>
<rect width="6.33" height="5.72" x="598.27" y="351.85" class="known"><title>void __cdecl InitialiseStartInfo(void);</title></rect>
<rect width="6.33" height="5.72" x="598.27" y="360.56" class="known"><title>void __cdecl IncreaseScreenSize(void);</title></rect>
<rect width="6.33" height="5.72" x="598.27" y="369.28" class="known"><title>void __cdecl DecreaseScreenSize(void);</title></rect>
<rect width="6" height="5.94" x="607.59" y="235.22" class="known"><title>void __cdecl InitialiseGameFlags(void);</title></rect>
<rect width="6" height="5.94" x="616.60" y="235.22" class="decompiled"><title>DWORD __cdecl CalculateCompatibleColor(COLOR_BIT_MASKS *mask, int32_t red, int32_t green, int32_t blue, int32_t alpha);</title></rect>
<rect width="6" height="5.94" x="625.60" y="235.22" class="decompiled"><title>int32_t __cdecl Music_GetFrames(void);</title></rect>
<rect width="6" height="5.94" x="634.61" y="235.22" class="known"><title>bool __cdecl SE_RegisterSetupWindowClass(void);</title></rect>
<rect width="6" height="5.94" x="643.61" y="235.22" class="decompiled"><title>void __fastcall Output_FlatA(int32_t y0, int32_t y1, uint8_t color_idx); // actually, __watcall, which is esoteric and rarely supported</title></rect>
<rect width="5.91" height="5.94" x="652.62" y="235.22" class="decompiled"><title>void __cdecl Inv_Ring_GetView(RING_INFO *ring, PHD_3DPOS *viewer);</title></rect>
<rect width="5.91" height="5.94" x="661.53" y="235.22" class="decompiled"><title>void __cdecl Lara_State_SurfLeft(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="5.91" height="5.94" x="670.44" y="235.22" class="decompiled"><title>void __cdecl Lara_State_SurfRight(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="5.91" height="5.94" x="679.35" y="235.22" class="decompiled"><title>BOOL __cdecl Level_LoadCameras(HANDLE handle);</title></rect>
<rect width="5.91" height="5.94" x="688.27" y="235.22" class="decompiled"><title>BOOL __cdecl Level_LoadSoundEffects(HANDLE handle);</title></rect>
<rect width="5.91" height="5.94" x="697.18" y="235.22" class="known"><title>void __cdecl UT_InitAccurateTimer(void);</title></rect>
<rect width="5.82" height="5.94" x="706.09" y="235.22" class="decompiled"><title>void __cdecl Item_Translate(ITEM *item, int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="5.82" height="5.94" x="714.91" y="235.22" class="decompiled"><title>void __cdecl BGND_DrawInGameBlack(void);</title></rect>
<rect width="5.82" height="5.94" x="723.73" y="235.22" class="unused"><title>sub_444AB0</title></rect>
<rect width="5.73" height="5.94" x="732.55" y="235.22" class="decompiled"><title>void __cdecl Lara_State_SurfBack(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="5.73" height="5.94" x="741.27" y="235.22" class="decompiled"><title>void __cdecl Sound_StopEffect(int32_t sample_id);</title></rect>
<rect width="5.57" height="6.10" x="607.59" y="244.16" class="known"><title>bool __cdecl GetRegistryDwordValue(LPCTSTR lpValueName, DWORD *pValue, DWORD defaultValue);</title></rect>
<rect width="5.57" height="6" x="607.59" y="253.25" class="decompiled"><title>void __cdecl Item_UpdateRoom(ITEM *item, int32_t height);</title></rect>
<rect width="5.57" height="6" x="607.59" y="262.25" class="known"><title>void __cdecl ControlBirdTweeter(int16_t item_num);</title></rect>
<rect width="5.57" height="6" x="607.59" y="271.25" class="decompiled"><title>void __cdecl Inv_Ring_MotionItemSelect(RING_INFO *ring, INVENTORY_ITEM *inv_item);</title></rect>
<rect width="5.57" height="6" x="607.59" y="280.25" class="decompiled"><title>void __cdecl Lara_Col_ClimbLeft(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="5.57" height="6" x="607.59" y="289.25" class="known"><title>void __cdecl BaddieBiteEffect(ITEM *item, BITE *bite);</title></rect>
<rect width="5.57" height="6" x="607.59" y="298.26" class="known"><title>LRESULT __stdcall SE_NewPropSheetWndProc(HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="5.57" height="5.90" x="607.59" y="307.26" class="decompiled"><title>int16_t __cdecl Creature_Effect(ITEM *item, BITE *bite, int16_t (*__cdecl spawn)(int32_t x, int32_t y, int32_t z, int16_t speed, int16_t y_rot, int16_t room_num));</title></rect>
<rect width="5.57" height="5.90" x="607.59" y="316.16" class="decompiled"><title>void __cdecl Room_AddFlipItems(ROOM *r);</title></rect>
<rect width="5.57" height="5.90" x="607.59" y="325.06" class="decompiled"><title>void __cdecl Gun_Pistols_Ready(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="5.57" height="5.90" x="607.59" y="333.97" class="known"><title>BOOL __cdecl S_InitialiseSystem(void);</title></rect>
<rect width="5.57" height="5.90" x="607.59" y="342.87" class="known"><title>bool __cdecl GetRegistryFloatValue(LPCTSTR lpValueName, double *value, double defaultValue);</title></rect>
<rect width="5.57" height="5.81" x="607.59" y="351.77" class="decompiled"><title>void __cdecl Lara_Col_UWDeath(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="5.57" height="5.71" x="607.59" y="360.58" class="decompiled"><title>void __cdecl Item_AddActive(int16_t item_num);</title></rect>
<rect width="5.57" height="5.71" x="607.59" y="369.29" class="decompiled"><title>void __cdecl WinInReadKeyboard(LPVOID lpInputData);</title></rect>
<rect width="5.45" height="5.73" x="616.17" y="244.16" class="decompiled"><title>int32_t __cdecl Demo_Control(int32_t level_num);</title></rect>
<rect width="5.45" height="5.73" x="624.62" y="244.16" class="known"><title>int16_t __cdecl DoBloodSplat(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE direction, int16_t room_num);</title></rect>
<rect width="5.45" height="5.73" x="633.07" y="244.16" class="known"><title>void __cdecl DoChimeSound(ITEM *item);</title></rect>
<rect width="5.45" height="5.73" x="641.53" y="244.16" class="decompiled"><title>void __cdecl Lara_Col_Splat(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="5.45" height="5.73" x="649.98" y="244.16" class="decompiled"><title>void __cdecl Lara_Col_ClimbRight(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="5.45" height="5.73" x="658.43" y="244.16" class="decompiled"><title>void __cdecl HWR_ResetZBuffer(void);</title></rect>
<rect width="5.36" height="5.73" x="666.89" y="244.16" class="known"><title>void __cdecl XianKnight_Initialise(int16_t item_num);</title></rect>
<rect width="5.36" height="5.73" x="675.25" y="244.16" class="decompiled"><title>void __cdecl Item_ClearKilled(void);</title></rect>
<rect width="5.36" height="5.73" x="683.61" y="244.16" class="decompiled"><title>void __cdecl Lara_State_Hang(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="5.36" height="5.73" x="691.96" y="244.16" class="decompiled"><title>void __cdecl Lara_State_PickupFlare(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="5.36" height="5.73" x="700.32" y="244.16" class="known"><title>DWORD __cdecl Sync(void);</title></rect>
<rect width="5.26" height="5.73" x="708.68" y="244.16" class="decompiled"><title>void __cdecl Lara_State_FastBack(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="5.26" height="5.73" x="716.95" y="244.16" class="decompiled"><title>void __cdecl S_Wait(int32_t timeout, BOOL input_check);</title></rect>
<rect width="5.26" height="5.73" x="725.21" y="244.16" class="known"><title>int32_t __cdecl SE_GraphicsTest(void);</title></rect>
<rect width="5.26" height="5.73" x="733.47" y="244.16" class="known"><title>int32_t __cdecl SE_SoundTest(void);</title></rect>
<rect width="5.26" height="5.73" x="741.74" y="244.16" class="known"><title>void __thiscall SE_ChangeBitmapPalette(BITMAP_RESOURCE *bmpRsrc, HWND hWnd);</title></rect>
<rect width="5.35" height="5.55" x="616.17" y="252.89" class="decompiled"><title>void __cdecl Requester_Item_RightAlign(REQUEST_INFO *req, TEXTSTRING *txt);</title></rect>
<rect width="5.35" height="5.45" x="616.17" y="261.44" class="decompiled"><title>void __cdecl Room_GetNewRoom(int32_t x, int32_t y, int32_t z, int16_t room_num);</title></rect>
<rect width="5.35" height="5.45" x="616.17" y="269.88" class="decompiled"><title>void __cdecl Object_Collision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="5.35" height="5.45" x="616.17" y="278.33" class="decompiled"><title>int32_t __cdecl Item_IsTriggerActive(ITEM *item);</title></rect>
<rect width="5.35" height="5.45" x="616.17" y="286.78" class="decompiled"><title>BOOL __cdecl Level_LoadAnimatedTextures(HANDLE handle);</title></rect>
<rect width="5.35" height="5.45" x="616.17" y="295.22" class="decompiled"><title>void __cdecl Shell_Cleanup(void);</title></rect>
<rect width="5.35" height="5.35" x="616.17" y="303.67" class="decompiled"><title>void __cdecl Requester_Item_LeftAlign(REQUEST_INFO *req, TEXTSTRING *txt);</title></rect>
<rect width="5.35" height="5.35" x="616.17" y="312.02" class="decompiled"><title>void __cdecl Lara_State_FastDive(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="5.35" height="5.35" x="616.17" y="320.36" class="known"><title>int32_t __cdecl DoDynamics(int32_t height, int32_t fall_speed, int32_t *y);</title></rect>
<rect width="5.35" height="5.35" x="616.17" y="328.71" class="decompiled"><title>bool __cdecl DDrawCreate(LPGUID lpGUID);</title></rect>
<rect width="5.35" height="5.25" x="616.17" y="337.06" class="decompiled"><title>void __cdecl Lara_State_UWDeath(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="5.35" height="5.25" x="616.17" y="345.31" class="decompiled"><title>void __cdecl LOT_InitialiseArray(void);</title></rect>
<rect width="5.35" height="5.25" x="616.17" y="353.55" class="decompiled"><title>bool __cdecl WinVidGetDisplayModes(void);</title></rect>
<rect width="5.35" height="5.15" x="616.17" y="361.80" class="decompiled"><title>void __cdecl Item_InitialiseArray(int32_t num_items);</title></rect>
<rect width="5.35" height="5.05" x="616.17" y="369.95" class="decompiled"><title>void __cdecl Lara_State_Extra_DinoKill(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="4.94" height="5.47" x="624.52" y="252.89" class="decompiled"><title>int32_t __cdecl Lara_Fallen(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="4.94" height="5.47" x="624.52" y="261.36" class="decompiled"><title>void __cdecl Gun_SmashItem(int16_t item_num, LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="4.94" height="5.47" x="624.52" y="269.82" class="known"><title>void __cdecl S_SetupBelowWater(BOOL underwater);</title></rect>
<rect width="4.94" height="5.47" x="624.52" y="278.29" class="decompiled"><title>void __cdecl Music_Shutdown(void);</title></rect>
<rect width="4.94" height="5.47" x="624.52" y="286.76" class="known"><title>bool __cdecl TIME_Init(void);</title></rect>
<rect width="4.94" height="5.47" x="624.52" y="295.22" class="known"><title>LPCTSTR __cdecl GuidBinaryToString(GUID *guid);</title></rect>
<rect width="4.94" height="5.36" x="624.52" y="303.69" class="decompiled"><title>void __cdecl Creature_Underwater(ITEM *item, int32_t depth);</title></rect>
<rect width="4.94" height="5.36" x="624.52" y="312.05" class="decompiled"><title>const SECTOR *__cdecl Camera_GoodPosition(int32_t x, int32_t y, int32_t z, int16_t room_num);</title></rect>
<rect width="4.94" height="5.36" x="624.52" y="320.41" class="known"><title>void __cdecl Cultist3_Initialise(int16_t item_num);</title></rect>
<rect width="4.94" height="5.26" x="624.52" y="328.77" class="decompiled"><title>void __cdecl Gun_Pistols_SetArmInfo(LARA_ARM *arm, int32_t frame);</title></rect>
<rect width="4.94" height="5.26" x="624.52" y="337.03" class="decompiled"><title>void __cdecl LOT_DisableBaddieAI(int16_t item_num);</title></rect>
<rect width="4.94" height="5.26" x="624.52" y="345.29" class="decompiled"><title>void __cdecl Trapdoor_Control(int16_t item_num);</title></rect>
<rect width="4.94" height="5.15" x="624.52" y="353.54" class="decompiled"><title>void __cdecl Creature_Neck(ITEM *item, int16_t required);</title></rect>
<rect width="4.94" height="5.15" x="624.52" y="361.70" class="decompiled"><title>int16_t __cdecl Room_GetDoor(const SECTOR *sector);</title></rect>
<rect width="4.94" height="5.15" x="624.52" y="369.85" class="decompiled"><title>void __cdecl Gun_Pistols_DrawMeshes(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="4.97" height="5.12" x="632.45" y="252.89" class="decompiled"><title>int32_t __cdecl MovableBlock_TestDestination(ITEM *item, int32_t block_height);</title></rect>
<rect width="4.97" height="5.12" x="640.42" y="252.89" class="known"><title>void __cdecl ControlGunShot(int16_t fx_num);</title></rect>
<rect width="4.97" height="5.12" x="648.39" y="252.89" class="known"><title>JOYSTICK_NODE *__cdecl GetJoystick(GUID *lpGuid);</title></rect>
<rect width="4.97" height="5.12" x="656.35" y="252.89" class="known"><title>bool __cdecl OpenGameRegistryKey(LPCTSTR key);</title></rect>
<rect width="4.97" height="5.12" x="664.32" y="252.89" class="known"><title>double __cdecl UT_Microseconds(void);</title></rect>
<rect width="4.86" height="5.12" x="672.28" y="252.89" class="decompiled"><title>void __cdecl Lara_State_Extra_StartAnim(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="4.86" height="5.12" x="680.15" y="252.89" class="decompiled"><title>void __cdecl BGND_Free(void);</title></rect>
<rect width="4.86" height="5.12" x="688.01" y="252.89" class="decompiled"><title>bool __cdecl WinVidClearBuffer(LPDDS surface, LPRECT rect, DWORD fill_color);</title></rect>
<rect width="4.86" height="5.12" x="695.87" y="252.89" class="decompiled"><title>void __cdecl WinVidExitMessage(void);</title></rect>
<rect width="4.76" height="5.12" x="703.74" y="252.89" class="decompiled"><title>void __cdecl Lara_State_Extra_Breath(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="4.76" height="5.12" x="711.50" y="252.89" class="known"><title>void __cdecl WriteSG(void *pointer, int32_t size);</title></rect>
<rect width="4.76" height="5.12" x="719.26" y="252.89" class="known"><title>void __cdecl GetSavedGamesList(REQUEST_INFO *req);</title></rect>
<rect width="4.66" height="5.12" x="727.02" y="252.89" class="decompiled"><title>int32_t __cdecl Boat_DoDynamics(int32_t height, int32_t fall_speed, int32_t *y);</title></rect>
<rect width="4.66" height="5.12" x="734.68" y="252.89" class="decompiled"><title>void __cdecl Lara_State_FastTurn(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="4.66" height="5.12" x="742.34" y="252.89" class="known"><title>void __cdecl Flare_SetArm(int32_t frame);</title></rect>
<rect width="4.80" height="4.98" x="632.45" y="261.02" class="known"><title>void __cdecl DartEffectControl(int16_t fx_num);</title></rect>
<rect width="4.80" height="4.98" x="632.45" y="268.99" class="known"><title>void __cdecl SE_OptionsStrCat(LPTSTR *dstString, bool isEnabled, bool *isNext, LPCTSTR srcString);</title></rect>
<rect width="4.80" height="4.87" x="632.45" y="276.97" class="decompiled"><title>void __cdecl Lara_State_BackJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="4.80" height="4.87" x="632.45" y="284.84" class="decompiled"><title>DISPLAY_MODE *__thiscall InsertDisplayModeInListTail(DISPLAY_MODE_LIST *modeList);</title></rect>
<rect width="4.80" height="4.87" x="632.45" y="292.71" class="decompiled"><title>void __cdecl HWR_EnableColorKey(bool state);</title></rect>
<rect width="4.80" height="4.87" x="632.45" y="300.58" class="decompiled"><title>void __cdecl HWR_FreeTexturePages(void);</title></rect>
<rect width="4.80" height="4.87" x="632.45" y="308.45" class="known"><title>LONG __cdecl SetRegistryStringValue(LPCTSTR lpValueName, LPCTSTR value, int32_t length);</title></rect>
<rect width="4.80" height="4.76" x="632.45" y="316.32" class="decompiled"><title>void __cdecl Creature_Head(ITEM *item, int16_t required);</title></rect>
<rect width="4.80" height="4.76" x="632.45" y="324.08" class="decompiled"><title>void __cdecl LOT_ClearLOT(LOT_INFO *lot);</title></rect>
<rect width="4.80" height="4.76" x="632.45" y="331.84" class="decompiled"><title>void __cdecl Lara_CatchFire(void);</title></rect>
<rect width="4.80" height="4.76" x="632.45" y="339.61" class="known"><title>BOOL __cdecl ReadFileSync(HANDLE handle, LPVOID lpBuffer, DWORD nBytesToRead, LPDWORD lpnBytesRead, LPOVERLAPPED lpOverlapped);</title></rect>
<rect width="4.80" height="4.66" x="632.45" y="347.37" class="known"><title>void __cdecl AddDynamicLight(int32_t x, int32_t y, int32_t z, int32_t intensity, int32_t falloff);</title></rect>
<rect width="4.80" height="4.66" x="632.45" y="355.03" class="decompiled"><title>int32_t __cdecl CalculateWindowWidth(int32_t width, int32_t height);</title></rect>
<rect width="4.80" height="4.66" x="632.45" y="362.69" class="decompiled"><title>DISPLAY_ADAPTER_NODE *__cdecl WinVidGetDisplayAdapter(GUID *lpGuid);</title></rect>
<rect width="4.80" height="4.66" x="632.45" y="370.34" class="decompiled"><title>DISPLAY_MODE *__thiscall InsertDisplayModeInListHead(DISPLAY_MODE_LIST *modeList);</title></rect>
<rect width="5.01" height="4.46" x="640.25" y="261.02" class="decompiled"><title>const SOUND_ADAPTER_NODE *__cdecl S_Audio_Sample_GetAdapter(GUID *guid);</title></rect>
<rect width="5.01" height="4.46" x="648.26" y="261.02" class="decompiled"><title>void __cdecl WinStopFMV(bool is_playback);</title></rect>
<rect width="5.01" height="4.46" x="656.27" y="261.02" class="decompiled"><title>int32_t __fastcall Math_Atan(int32_t x, int32_t y);</title></rect>
<rect width="4.89" height="4.46" x="664.27" y="261.02" class="decompiled"><title>int32_t __cdecl Creature_Activate(int16_t item_num);</title></rect>
<rect width="4.89" height="4.46" x="672.17" y="261.02" class="decompiled"><title>void __cdecl Matrix_TranslateRel_ID(int32_t x, int32_t y, int32_t z, int32_t x2, int32_t y2, int32_t z2);</title></rect>
<rect width="4.89" height="4.46" x="680.06" y="261.02" class="decompiled"><title>void __cdecl Lara_State_Extra_YetiKill(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="4.78" height="4.46" x="687.96" y="261.02" class="known"><title>void __cdecl InitialiseKillerStatue(int16_t item_num);</title></rect>
<rect width="4.78" height="4.46" x="695.74" y="261.02" class="decompiled"><title>HRESULT __cdecl DDrawSurfaceRestoreLost(LPDDS surface1, LPDDS surface2, bool blank);</title></rect>
<rect width="4.78" height="4.46" x="703.52" y="261.02" class="decompiled"><title>DWORD __cdecl GetRenderBitDepth(DWORD dwRGBBitCount);</title></rect>
<rect width="4.78" height="4.46" x="711.31" y="261.02" class="known"><title>void __cdecl S_InsertBackPolygon(int32_t x0, int32_t y0, int32_t x1, int32_t y1);</title></rect>
<rect width="4.78" height="4.46" x="719.09" y="261.02" class="decompiled"><title>int32_t __cdecl S_Audio_Sample_OutPlay(int32_t sample_id, uint16_t volume, int32_t pitch, int32_t pan);</title></rect>
<rect width="4.78" height="4.46" x="726.87" y="261.02" class="decompiled"><title>int32_t __cdecl S_Audio_Sample_OutPlayLooped(int32_t track_id, uint16_t volume, int32_t pitch, int32_t pan);</title></rect>
<rect width="4.67" height="4.46" x="734.66" y="261.02" class="decompiled"><title>void __cdecl Overlay_DrawGameInfo(bool pickup_state);</title></rect>
<rect width="4.67" height="4.46" x="742.33" y="261.02" class="decompiled"><title>bool __thiscall CompareVideoModes(const DISPLAY_MODE *mode1, const DISPLAY_MODE *mode2);</title></rect>
<rect width="4.60" height="4.53" x="640.25" y="268.48" class="decompiled"><title>bool __cdecl S_Audio_Sample_IsTrackPlaying(int32_t track_id);</title></rect>
<rect width="4.60" height="4.43" x="640.25" y="276.01" class="known"><title>void __cdecl FallingBlockCeiling(const ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *out_height);</title></rect>
<rect width="4.60" height="4.43" x="640.25" y="283.44" class="decompiled"><title>HRESULT __cdecl DDrawSurfaceCreate(LPDDSDESC dsp, LPDDS *surface);</title></rect>
<rect width="4.60" height="4.43" x="640.25" y="290.86" class="decompiled"><title>void __cdecl BitMaskGetNumberOfBits(uint32_t bit_mask, uint32_t *bit_depth, uint32_t *bit_offset);</title></rect>
<rect width="4.60" height="4.43" x="640.25" y="298.29" class="known"><title>void __cdecl GetValidLevelsList(REQUEST_INFO *req);</title></rect>
<rect width="4.60" height="4.32" x="640.25" y="305.71" class="known"><title>void __cdecl draw_right_gun(ITEM *item);</title></rect>
<rect width="4.60" height="4.32" x="640.25" y="313.03" class="known"><title>void __cdecl draw_left_gun(ITEM *item);</title></rect>
<rect width="4.60" height="4.32" x="640.25" y="320.34" class="known"><title>void __cdecl Cultist1_Initialise(int16_t item_num);</title></rect>
<rect width="4.60" height="4.32" x="640.25" y="327.66" class="decompiled"><title>void __cdecl WinVidShowGameWindow(int32_t nCmdShow);</title></rect>
<rect width="4.60" height="4.32" x="640.25" y="334.98" class="known"><title>void __cdecl S_FadeToBlack(void);</title></rect>
<rect width="4.60" height="4.21" x="640.25" y="342.29" class="decompiled"><title>void __cdecl Door_Shut(DOORPOS_DATA *d);</title></rect>
<rect width="4.60" height="4.21" x="640.25" y="349.50" class="known"><title>int32_t __cdecl UT_ErrorBox(UINT uID, HWND hWnd);</title></rect>
<rect width="4.60" height="4.10" x="640.25" y="356.71" class="decompiled"><title>void __cdecl Matrix_TranslateRel_I(int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="4.60" height="4.10" x="640.25" y="363.80" class="decompiled"><title>void __cdecl Matrix_RotYXZ_I(int16_t y, int16_t x, int16_t z);</title></rect>
<rect width="4.60" height="4.10" x="640.25" y="370.90" class="decompiled"><title>void __cdecl WinVidSetMinWindowSize(int32_t width, int32_t height);</title></rect>
<rect width="4.49" height="4.20" x="647.85" y="268.48" class="decompiled"><title>void __cdecl WinVidSetMaxWindowSize(int32_t width, int32_t height);</title></rect>
<rect width="4.37" height="4.20" x="655.34" y="268.48" class="known"><title>void __cdecl lara_normal_effect(ITEM *item);</title></rect>
<rect width="4.37" height="4.20" x="662.71" y="268.48" class="decompiled"><title>void __cdecl Inv_Ring_Light(RING_INFO *ring);</title></rect>
<rect width="4.37" height="4.20" x="670.08" y="268.48" class="decompiled"><title>void __cdecl Lara_State_FastFall(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="4.37" height="4.20" x="677.45" y="268.48" class="decompiled"><title>void __cdecl Skidoo_Initialise(int16_t item_num);</title></rect>
<rect width="4.37" height="4.20" x="684.82" y="268.48" class="decompiled"><title>bool __cdecl WinVidInit(void);</title></rect>
<rect width="4.37" height="4.20" x="692.19" y="268.48" class="decompiled"><title>void __cdecl Option_Controls_DefaultConflict(void);</title></rect>
<rect width="4.37" height="4.20" x="699.56" y="268.48" class="known"><title>void __cdecl UpdateTicks(void);</title></rect>
<rect width="4.26" height="4.20" x="706.93" y="268.48" class="known"><title>void __cdecl ControlDingDong(int16_t item_num);</title></rect>
<rect width="4.26" height="4.20" x="714.19" y="268.48" class="known"><title>void __cdecl Trapdoor_Ceiling(const ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *out_height);</title></rect>
<rect width="4.14" height="4.20" x="721.44" y="268.48" class="known"><title>void __cdecl Flare_Ready(void);</title></rect>
<rect width="4.14" height="4.20" x="728.58" y="268.48" class="known"><title>void __cdecl FallingBlockFloor(const ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *out_height);</title></rect>
<rect width="4.14" height="4.20" x="735.72" y="268.48" class="decompiled"><title>void __cdecl Enumerate3DDevices(DISPLAY_ADAPTER *adapter);</title></rect>
<rect width="4.14" height="4.20" x="742.86" y="268.48" class="decompiled"><title>DWORD __cdecl EncodePutPCX(BYTE value, BYTE num, BYTE *buffer);</title></rect>
<rect width="4.47" height="3.89" x="647.85" y="275.68" class="known"><title>int32_t __stdcall SE_PropSheetCallback(HWND hwndDlg, UINT uMsg, LPARAM lParam);</title></rect>
<rect width="4.47" height="3.89" x="655.32" y="275.68" class="known"><title>HWR_TEXTURE_HANDLE __cdecl GetTexturePageHandle(int32_t page_idx);</title></rect>
<rect width="4.35" height="3.89" x="662.79" y="275.68" class="decompiled"><title>void __cdecl Matrix_RotYXZsuperpack_I(const int16_t **pprot1, const int16_t **pprot2, int32_t skip);</title></rect>
<rect width="4.35" height="3.89" x="670.14" y="275.68" class="decompiled"><title>int32_t __cdecl Keyhole_Trigger(int16_t item_num);</title></rect>
<rect width="4.35" height="3.89" x="677.49" y="275.68" class="decompiled"><title>HRESULT __cdecl WinVidBufferLock(LPDDS surface, LPDDSDESC desc, DWORD flags);</title></rect>
<rect width="4.35" height="3.89" x="684.83" y="275.68" class="known"><title>int32_t __cdecl SE_SoundTestExecute(void);</title></rect>
<rect width="4.23" height="3.89" x="692.18" y="275.68" class="decompiled"><title>void __cdecl Output_DrawPolyGTMap(const int16_t *obj_ptr);</title></rect>
<rect width="4.23" height="3.89" x="699.41" y="275.68" class="decompiled"><title>void __cdecl Output_DrawPolyWGTMap(const int16_t *obj_ptr);</title></rect>
<rect width="4.23" height="3.89" x="706.64" y="275.68" class="decompiled"><title>void __cdecl Boat_Initialise(int16_t item_num);</title></rect>
<rect width="4.23" height="3.89" x="713.86" y="275.68" class="known"><title>void __cdecl ControlCutShotgun(int16_t item_num);</title></rect>
<rect width="4.23" height="3.89" x="721.09" y="275.68" class="known"><title>void __cdecl InitialiseBlade(int16_t item_num);</title></rect>
<rect width="4.23" height="3.89" x="728.32" y="275.68" class="known"><title>void __cdecl InitialiseRollingBall(int16_t item_num);</title></rect>
<rect width="4.23" height="3.89" x="735.55" y="275.68" class="decompiled"><title>int32_t __cdecl RenderErrorBox(int32_t error_code);</title></rect>
<rect width="4.23" height="3.89" x="742.77" y="275.68" class="decompiled"><title>void __cdecl Shell_ExitSystem(const char *message);</title></rect>
<rect width="4.14" height="3.97" x="647.85" y="282.57" class="decompiled"><title>void __cdecl S_Audio_Sample_OutCloseAllTracks(void);</title></rect>
<rect width="4.14" height="3.86" x="647.85" y="289.54" class="decompiled"><title>int32_t __cdecl Gun_CheckForHoldingState(int32_t state);</title></rect>
<rect width="4.14" height="3.86" x="647.85" y="296.40" class="decompiled"><title>GAME_OBJECT_ID Gun_GetWeaponAnim(const LARA_GUN_TYPE gun_type);</title></rect>
<rect width="4.14" height="3.86" x="647.85" y="303.26" class="decompiled"><title>void __cdecl Drawbridge_Ceiling(const ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *out_height);</title></rect>
<rect width="4.14" height="3.86" x="647.85" y="310.12" class="decompiled"><title>int32_t __cdecl Bridge_GetOffset(const ITEM *item, int32_t x, int32_t z);</title></rect>
<rect width="4.14" height="3.86" x="647.85" y="316.98" class="known"><title>void __cdecl ControlGlow(int16_t fx_num);</title></rect>
<rect width="4.14" height="3.86" x="647.85" y="323.83" class="decompiled"><title>void __cdecl WaitPrimaryBufferFlip(void);</title></rect>
<rect width="4.14" height="3.86" x="647.85" y="330.69" class="decompiled"><title>void __cdecl S_RemoveCtrlText(void);</title></rect>
<rect width="4.14" height="3.86" x="647.85" y="337.55" class="known"><title>void __cdecl TexturePageReleaseVidMemSurface(TEXPAGE_DESC *page);</title></rect>
<rect width="4.14" height="3.74" x="647.85" y="344.41" class="decompiled"><title>void __cdecl Gun_Pistols_UndrawMeshLeft(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="4.14" height="3.74" x="647.85" y="351.15" class="decompiled"><title>void __cdecl Gun_Pistols_UndrawMeshRight(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="4.14" height="3.74" x="647.85" y="357.89" class="known"><title>void __cdecl Trapdoor_Floor(const ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *out_height);</title></rect>
<rect width="4.14" height="3.74" x="647.85" y="364.63" class="decompiled"><title>void __cdecl WinVidHideGameWindow(void);</title></rect>
<rect width="4.14" height="3.63" x="647.85" y="371.37" class="decompiled"><title>void __cdecl Output_InitPolyList(void);</title></rect>
<rect width="3.82" height="3.93" x="654.99" y="282.57" class="decompiled"><title>void __cdecl Requester_SetSize(REQUEST_INFO *req, int32_t maxlines, int32_t ypos);</title></rect>
<rect width="3.82" height="3.93" x="661.81" y="282.57" class="decompiled"><title>int16_t __cdecl Item_Create(void);</title></rect>
<rect width="3.82" height="3.93" x="668.63" y="282.57" class="decompiled"><title>void __cdecl Lara_State_SwitchOn(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="3.82" height="3.93" x="675.45" y="282.57" class="decompiled"><title>void __cdecl Switch_Control(int16_t item_num);</title></rect>
<rect width="3.82" height="3.93" x="682.27" y="282.57" class="decompiled"><title>uint32_t __cdecl Text_GetScaleV(uint32_t value);</title></rect>
<rect width="3.82" height="3.93" x="689.09" y="282.57" class="unused"><title>sub_447170</title></rect>
<rect width="3.82" height="3.93" x="695.91" y="282.57" class="known"><title>void __cdecl TempVideoRemove(void);</title></rect>
<rect width="3.82" height="3.93" x="702.73" y="282.57" class="unused"><title>sub_447B40</title></rect>
<rect width="3.82" height="3.93" x="709.56" y="282.57" class="decompiled"><title>int32_t __cdecl S_Audio_Sample_GetFreeTrackIndex(void);</title></rect>
<rect width="3.82" height="3.93" x="716.38" y="282.57" class="decompiled"><title>void __cdecl Shell_Shutdown(void);</title></rect>
<rect width="3.82" height="3.93" x="723.20" y="282.57" class="decompiled"><title>void __cdecl S_Audio_Sample_OutSetPanAndVolume(int32_t track_id, int32_t pan, uint16_t volume);</title></rect>
<rect width="3.82" height="3.93" x="730.02" y="282.57" class="decompiled"><title>void __cdecl Music_Stop(void);</title></rect>
<rect width="3.58" height="3.93" x="736.84" y="282.57" class="decompiled"><title>void __cdecl Output_DrawPolyGTMapPersp(const int16_t *obj_ptr);</title></rect>
<rect width="3.58" height="3.93" x="743.42" y="282.57" class="decompiled"><title>void __cdecl Output_DrawPolyWGTMapPersp(const int16_t *obj_ptr);</title></rect>
<rect width="3.68" height="3.84" x="654.99" y="289.50" class="decompiled"><title>void __cdecl Item_ShiftCol(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="3.68" height="3.84" x="654.99" y="296.34" class="decompiled"><title>int32_t __cdecl Game_DrawCinematic(void);</title></rect>
<rect width="3.68" height="3.84" x="654.99" y="303.18" class="decompiled"><title>int32_t __cdecl Game_Draw(void);</title></rect>
<rect width="3.68" height="3.84" x="654.99" y="310.01" class="known"><title>void __cdecl ControlLaraAlarm(int16_t item_num);</title></rect>
<rect width="3.68" height="3.84" x="654.99" y="316.85" class="decompiled"><title>void __cdecl Text_ChangeText(TEXTSTRING *string, const char *text);</title></rect>
<rect width="3.68" height="3.84" x="654.99" y="323.68" class="decompiled"><title>uint32_t __cdecl Text_GetScaleH(uint32_t value);</title></rect>
<rect width="3.68" height="3.84" x="654.99" y="330.52" class="decompiled"><title>bool __cdecl D3DIsSupported(LPD3DDEVICEDESC desc);</title></rect>
<rect width="3.68" height="3.84" x="654.99" y="337.36" class="known"><title>void __cdecl S_InitialiseScreen(GAMEFLOW_LEVEL_TYPE level_type);</title></rect>
<rect width="3.68" height="3.84" x="654.99" y="344.19" class="known"><title>LONG __cdecl SetRegistryBinaryValue(LPCTSTR lpValueName, LPBYTE value, DWORD valueSize);</title></rect>
<rect width="3.68" height="3.84" x="654.99" y="351.03" class="known"><title>void __thiscall SE_ReleaseBitmapResource(BITMAP_RESOURCE *bmpRsrc);</title></rect>
<rect width="3.68" height="3.71" x="654.99" y="357.86" class="decompiled"><title>void __cdecl Output_PrintPolyList(uint8_t *surface_ptr);</title></rect>
<rect width="3.68" height="3.71" x="654.99" y="364.58" class="decompiled"><title>void __cdecl Lara_Col_Default(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="3.68" height="3.71" x="654.99" y="371.29" class="decompiled"><title>void __cdecl Drawbridge_Floor(const ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *out_height);</title></rect>
<rect width="3.88" height="3.51" x="661.67" y="289.50" class="known"><title>void __cdecl ChangeFileNameExtension(char *file_name, const char *file_ext);</title></rect>
<rect width="3.88" height="3.51" x="668.55" y="289.50" class="known"><title>DWORD __cdecl S_DumpScreen(void);</title></rect>
<rect width="3.88" height="3.51" x="675.43" y="289.50" class="known"><title>LPVOID __cdecl UT_LoadResource(LPCTSTR lpName, LPCTSTR lpType);</title></rect>
<rect width="3.88" height="3.51" x="682.32" y="289.50" class="known"><title>LONG __cdecl SetRegistryFloatValue(LPCTSTR lpValueName, double value);</title></rect>
<rect width="3.76" height="3.51" x="689.20" y="289.50" class="decompiled"><title>void __cdecl Output_DrawPolyFlat(const int16_t *obj_ptr);</title></rect>
<rect width="3.76" height="3.51" x="695.95" y="289.50" class="decompiled"><title>void __cdecl Output_DrawPolyTrans(const int16_t *obj_ptr);</title></rect>
<rect width="3.76" height="3.51" x="702.71" y="289.50" class="decompiled"><title>void __cdecl Output_DrawPolyGouraud(const int16_t *obj_ptr);</title></rect>
<rect width="3.76" height="3.51" x="709.47" y="289.50" class="decompiled"><title>void __cdecl Creature_Tilt(ITEM *item, int16_t angle);</title></rect>
<rect width="3.76" height="3.51" x="716.22" y="289.50" class="decompiled"><title>FRAME_INFO *__cdecl Item_GetBestFrame(const ITEM *item);</title></rect>
<rect width="3.76" height="3.51" x="722.98" y="289.50" class="decompiled"><title>void __cdecl Lara_State_HangLeft(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="3.76" height="3.51" x="729.73" y="289.50" class="decompiled"><title>void __cdecl Lara_State_HangRight(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="3.76" height="3.51" x="736.49" y="289.50" class="decompiled"><title>void __cdecl Lara_State_ClimbLeft(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="3.76" height="3.51" x="743.24" y="289.50" class="decompiled"><title>void __cdecl Lara_State_ClimbRight(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="3.43" height="3.84" x="661.67" y="296.01" class="decompiled"><title>void __cdecl Lift_Initialise(int16_t item_num);</title></rect>
<rect width="3.43" height="3.84" x="661.67" y="302.86" class="decompiled"><title>void __cdecl Lift_Floor(const ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *out_height);</title></rect>
<rect width="3.43" height="3.84" x="661.67" y="309.70" class="decompiled"><title>void __cdecl Lift_Ceiling(const ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *out_height);</title></rect>
<rect width="3.43" height="3.84" x="661.67" y="316.54" class="decompiled"><title>void __cdecl BridgeTilt1_Ceiling(const ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *out_height);</title></rect>
<rect width="3.43" height="3.84" x="661.67" y="323.38" class="known"><title>void __cdecl ReadSG(void *pointer, int32_t size);</title></rect>
<rect width="3.43" height="3.84" x="661.67" y="330.23" class="decompiled"><title>void __cdecl WinVidSetGameWindowSize(int32_t width, int32_t height);</title></rect>
<rect width="3.43" height="3.84" x="661.67" y="337.07" class="decompiled"><title>void __thiscall S_FlaggedString_InitAdapter(DISPLAY_ADAPTER *adapter);</title></rect>
<rect width="3.43" height="3.84" x="661.67" y="343.91" class="known"><title>void __cdecl S_FadeInInventory(BOOL isFade);</title></rect>
<rect width="3.43" height="3.84" x="661.67" y="350.76" class="known"><title>void __cdecl S_DrawScreenLine(int32_t x, int32_t y, int32_t z, int32_t x_len, int32_t y_len, BYTE color_idx, D3DCOLOR *gour, uint16_t flags);</title></rect>
<rect width="3.43" height="3.84" x="661.67" y="357.60" class="decompiled"><title>void __cdecl HWR_GetPageHandles(void);</title></rect>
<rect width="3.43" height="3.84" x="661.67" y="364.44" class="known"><title>bool __cdecl ReloadTextures(bool reset);</title></rect>
<rect width="3.43" height="3.71" x="661.67" y="371.29" class="decompiled"><title>void __cdecl Matrix_InitInterpolate(int32_t frac, int32_t rate);</title></rect>
<rect width="3.40" height="3.75" x="668.09" y="296.01" class="decompiled"><title>void __cdecl BridgeTilt2_Ceiling(const ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *out_height);</title></rect>
<rect width="3.40" height="3.75" x="674.49" y="296.01" class="known"><title>void __cdecl TempVideoAdjust(int32_t hires, double sizer);</title></rect>
<rect width="3.40" height="3.75" x="680.88" y="296.01" class="known"><title>void __cdecl game_free(size_t free_size);</title></rect>
<rect width="3.27" height="3.75" x="687.28" y="296.01" class="decompiled"><title>void __cdecl Output_SortPolyList(void);</title></rect>
<rect width="3.27" height="3.75" x="693.55" y="296.01" class="decompiled"><title>void __cdecl CutscenePlayerGen_Initialise(int16_t item_num);</title></rect>
<rect width="3.27" height="3.75" x="699.82" y="296.01" class="decompiled"><title>void __cdecl Lara_State_RightJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="3.27" height="3.75" x="706.09" y="296.01" class="decompiled"><title>void __cdecl Lara_State_LeftJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="3.27" height="3.75" x="712.37" y="296.01" class="decompiled"><title>void __cdecl Lara_Col_HangLeft(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="3.27" height="3.75" x="718.64" y="296.01" class="decompiled"><title>void __cdecl Lara_Col_HangRight(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="3.27" height="3.75" x="724.91" y="296.01" class="decompiled"><title>void __cdecl Gun_Rifle_DrawMeshes(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="3.27" height="3.75" x="731.18" y="296.01" class="decompiled"><title>int32_t __cdecl Pickup_Trigger(int16_t item_num);</title></rect>
<rect width="3.27" height="3.75" x="737.46" y="296.01" class="decompiled"><title>void __cdecl DDrawRelease(void);</title></rect>
<rect width="3.27" height="3.75" x="743.73" y="296.01" class="decompiled"><title>void __cdecl Matrix_PushUnit(void);</title></rect>
<rect width="3.57" height="3.31" x="668.09" y="302.76" class="decompiled"><title>const int16_t *__cdecl Output_CalcSkyboxLight(const int16_t *obj_ptr);</title></rect>
<rect width="3.57" height="3.31" x="668.09" y="309.07" class="decompiled"><title>void __cdecl Inv_RingActive(void);</title></rect>
<rect width="3.57" height="3.31" x="668.09" y="315.38" class="decompiled"><title>void __cdecl Lara_GetCollisionInfo(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="3.57" height="3.31" x="668.09" y="321.70" class="decompiled"><title>void __cdecl Lara_Col_SurfSwim(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="3.57" height="3.31" x="668.09" y="328.01" class="decompiled"><title>void __cdecl Door_Open(DOORPOS_DATA *d);</title></rect>
<rect width="3.57" height="3.31" x="668.09" y="334.32" class="decompiled"><title>void __cdecl BGND_GetPageHandles(void);</title></rect>
<rect width="3.57" height="3.31" x="668.09" y="340.63" class="decompiled"><title>void __thiscall DisplayModeListDelete(DISPLAY_MODE_LIST *pList);</title></rect>
<rect width="3.57" height="3.31" x="668.09" y="346.94" class="known"><title>void __cdecl FreeTexturePage(int32_t page_idx);</title></rect>
<rect width="3.57" height="3.19" x="668.09" y="353.26" class="decompiled"><title>void __cdecl Matrix_RotY_I(int16_t ang);</title></rect>
<rect width="3.57" height="3.19" x="668.09" y="359.44" class="decompiled"><title>void __cdecl Matrix_RotX_I(int16_t ang);</title></rect>
<rect width="3.57" height="3.19" x="668.09" y="365.63" class="decompiled"><title>void __cdecl Matrix_RotZ_I(int16_t ang);</title></rect>
<rect width="3.57" height="3.19" x="668.09" y="371.81" class="known"><title>int32_t __cdecl Music_GetRealTrack(int32_t track);</title></rect>
<rect width="3.36" height="3.39" x="674.66" y="302.76" class="decompiled"><title>void __cdecl S_Audio_Sample_AdjustTrackPitch(int32_t track_id, int32_t pitch);</title></rect>
<rect width="3.36" height="3.39" x="674.66" y="309.15" class="known"><title>void __cdecl S_CalculateStaticLight(int16_t adder);</title></rect>
<rect width="3.36" height="3.26" x="674.66" y="315.54" class="known"><title>void __cdecl ControlRichochet1(int16_t fx_num);</title></rect>
<rect width="3.36" height="3.26" x="674.66" y="321.80" class="decompiled"><title>void __cdecl Effect_InitialiseArray(void);</title></rect>
<rect width="3.36" height="3.26" x="674.66" y="328.06" class="decompiled"><title>void __cdecl Lara_State_PushBlock(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="3.36" height="3.26" x="674.66" y="334.32" class="decompiled"><title>void __cdecl Lara_State_Pickup(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="3.36" height="3.26" x="674.66" y="340.57" class="decompiled"><title>void __cdecl Lara_State_UseKey(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="3.36" height="3.26" x="674.66" y="346.83" class="decompiled"><title>void __cdecl BridgeTilt1_Floor(const ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *out_height);</title></rect>
<rect width="3.36" height="3.26" x="674.66" y="353.09" class="decompiled"><title>bool __cdecl BGND_Init(void);</title></rect>
<rect width="3.36" height="3.26" x="674.66" y="359.35" class="known"><title>void __cdecl CleanupTextures(void);</title></rect>
<rect width="3.36" height="3.26" x="674.66" y="365.61" class="known"><title>BOOL __cdecl OpenRegistryKey(LPCTSTR lpSubKey);</title></rect>
<rect width="3.36" height="3.13" x="674.66" y="371.87" class="decompiled"><title>void __cdecl Creature_Initialise(int16_t item_num);</title></rect>
<rect width="3.32" height="3.17" x="681.03" y="302.76" class="decompiled"><title>int32_t __cdecl Room_FindGridShift(int32_t src, int32_t dst);</title></rect>
<rect width="3.32" height="3.17" x="687.35" y="302.76" class="decompiled"><title>void __cdecl Inv_Ring_RotateLeft(RING_INFO *ring);</title></rect>
<rect width="3.32" height="3.17" x="693.67" y="302.76" class="decompiled"><title>void __cdecl Inv_Ring_RotateRight(RING_INFO *ring);</title></rect>
<rect width="3.32" height="3.17" x="699.98" y="302.76" class="decompiled"><title>void __cdecl Lara_State_SwanDive(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="3.32" height="3.17" x="706.30" y="302.76" class="decompiled"><title>void __cdecl BridgeTilt2_Floor(const ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *out_height);</title></rect>
<rect width="3.32" height="3.17" x="712.62" y="302.76" class="unused"><title>sub_4471C0</title></rect>
<rect width="3.32" height="3.17" x="718.94" y="302.76" class="unused"><title>sub_447B90</title></rect>
<rect width="3.32" height="3.17" x="725.26" y="302.76" class="decompiled"><title>void __cdecl S_Audio_Sample_CloseTrack(int32_t track_id);</title></rect>
<rect width="3.18" height="3.17" x="731.58" y="302.76" class="decompiled"><title>void __cdecl S_Audio_Sample_CloseAllTracks(void);</title></rect>
<rect width="3.18" height="3.17" x="737.76" y="302.76" class="known"><title>void __cdecl S_DrawScreenFBox(int32_t sx, int32_t sy, int32_t z, int32_t width, int32_t height, BYTE color_idx, const GOURAUD_FILL *gour, uint16_t flags);</title></rect>
<rect width="3.05" height="3.17" x="743.95" y="302.76" class="decompiled"><title>void __cdecl Demo_GetInput(void);</title></rect>
<rect width="3.39" height="2.85" x="681.03" y="308.93" class="decompiled"><title>BOOL __cdecl Overlay_FlashCounter(void);</title></rect>
<rect width="3.39" height="2.85" x="687.41" y="308.93" class="known"><title>void __cdecl WinInStart(void);</title></rect>
<rect width="3.24" height="2.85" x="693.80" y="308.93" class="known"><title>void __cdecl ChandelierFX(ITEM *item);</title></rect>
<rect width="3.24" height="2.85" x="700.04" y="308.93" class="decompiled"><title>void __cdecl Overlay_DrawModeInfo(void);</title></rect>
<rect width="3.24" height="2.85" x="706.29" y="308.93" class="decompiled"><title>void __cdecl Inv_Ring_CalcAdders(RING_INFO *ring, int16_t rotation_duration);</title></rect>
<rect width="3.24" height="2.85" x="712.53" y="308.93" class="decompiled"><title>void __cdecl Inv_Ring_MotionSetup(RING_INFO *ring, int16_t status, int16_t status_target, int16_t frames);</title></rect>
<rect width="3.24" height="2.85" x="718.78" y="308.93" class="decompiled"><title>void __cdecl Lara_State_Fallback(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="3.24" height="2.85" x="725.02" y="308.93" class="decompiled"><title>void __cdecl MovableBlock_Initialise(int16_t item_num);</title></rect>
<rect width="3.24" height="2.85" x="731.27" y="308.93" class="decompiled"><title>void __cdecl Drawbridge_Collision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="3.24" height="2.85" x="737.51" y="308.93" class="decompiled"><title>void __cdecl Text_Init(void);</title></rect>
<rect width="3.24" height="2.85" x="743.76" y="308.93" class="decompiled"><title>void __cdecl S_Audio_Sample_AdjustTrackVolumeAndPan(int32_t track_id, int32_t volume, int32_t pan);</title></rect>
<rect width="3.18" height="2.91" x="681.03" y="314.78" class="known"><title>LPTSTR __cdecl UT_FindArg(LPCTSTR str);</title></rect>
<rect width="3.18" height="2.91" x="681.03" y="320.68" class="decompiled"><title>uint32_t  __fastcall Math_Sqrt(uint32_t n);</title></rect>
<rect width="3.18" height="2.77" x="681.03" y="326.59" class="decompiled"><title>void __cdecl Lara_State_Slide(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="3.18" height="2.77" x="681.03" y="332.36" class="decompiled"><title>void __cdecl Gun_Rifle_UndrawMeshes(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="3.18" height="2.77" x="681.03" y="338.13" class="decompiled"><title>void __cdecl Text_Flash(TEXTSTRING *string, int16_t enable, int16_t rate);</title></rect>
<rect width="3.18" height="2.77" x="681.03" y="343.90" class="decompiled"><title>DWORD __cdecl GetZBufferDepth(void);</title></rect>
<rect width="3.18" height="2.77" x="681.03" y="349.68" class="decompiled"><title>void __cdecl HWR_ResetColorKey(void);</title></rect>
<rect width="3.18" height="2.64" x="681.03" y="355.45" class="decompiled"><title>void __cdecl Output_InsertPolygons_I(int16_t *ptr, int32_t clip);</title></rect>
<rect width="3.18" height="2.64" x="681.03" y="361.09" class="decompiled"><title>void __cdecl Sound_Init(void);</title></rect>
<rect width="3.18" height="2.64" x="681.03" y="366.72" class="decompiled"><title>void __cdecl S_Audio_Sample_Shutdown(void);</title></rect>
<rect width="3.18" height="2.64" x="681.03" y="372.36" class="known"><title>void __cdecl S_UnloadLevelFile(void);</title></rect>
<rect width="2.95" height="2.85" x="687.21" y="314.78" class="decompiled"><title>int32_t __cdecl S_Audio_Sample_CalculateSampleVolume(int32_t volume);</title></rect>
<rect width="2.95" height="2.85" x="693.16" y="314.78" class="known"><title>LONG __cdecl SetRegistryBoolValue(LPCTSTR lpValueName, bool value);</title></rect>
<rect width="2.81" height="2.85" x="699.11" y="314.78" class="decompiled"><title>void __cdecl Text_AddOutline(TEXTSTRING *string, int16_t enable, int16_t color, uint16_t *gour_ptr, uint16_t flags);</title></rect>
<rect width="2.81" height="2.85" x="704.93" y="314.78" class="known"><title>void __cdecl DInputKeyboardRelease(void);</title></rect>
<rect width="2.81" height="2.85" x="710.74" y="314.78" class="decompiled"><title>void __cdecl HWR_ResetTexSource(void);</title></rect>
<rect width="2.67" height="2.85" x="716.55" y="314.78" class="decompiled"><title>void __cdecl Overlay_MakeAmmoString(char *string);</title></rect>
<rect width="2.67" height="2.85" x="722.22" y="314.78" class="decompiled"><title>int32_t __cdecl CalculateWindowHeight(int32_t width, int32_t height);</title></rect>
<rect width="2.53" height="2.85" x="727.89" y="314.78" class="decompiled"><title>void __cdecl Matrix_Push_I(void);</title></rect>
<rect width="2.53" height="2.85" x="733.42" y="314.78" class="decompiled"><title>void __cdecl Lara_State_PPReady(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="2.53" height="2.85" x="738.94" y="314.78" class="known"><title>void __cdecl InitialiseLevelFlags(void);</title></rect>
<rect width="2.53" height="2.85" x="744.47" y="314.78" class="decompiled"><title>void __cdecl Text_Draw(void);</title></rect>
<rect width="2.47" height="2.92" x="687.21" y="320.63" class="known"><title>void __cdecl S_FadeOutInventory(BOOL isFade);</title></rect>
<rect width="2.47" height="2.77" x="687.21" y="326.55" class="decompiled"><title>void __cdecl Inv_Ring_MotionRadius(RING_INFO *ring, int16_t target);</title></rect>
<rect width="2.47" height="2.77" x="687.21" y="332.32" class="known"><title>LPCTSTR __cdecl GetFullPath(LPCTSTR file_name);</title></rect>
<rect width="2.47" height="2.77" x="687.21" y="338.08" class="known"><title>void __cdecl ScreenClear(bool is_phd_win_size);</title></rect>
<rect width="2.47" height="2.77" x="687.21" y="343.85" class="decompiled"><title>int32_t __cdecl S_Audio_Sample_CalculateSamplePan(int16_t pan);</title></rect>
<rect width="2.47" height="2.77" x="687.21" y="349.62" class="known"><title>void __cdecl FreeTexturePages(void);</title></rect>
<rect width="2.47" height="2.77" x="687.21" y="355.39" class="known"><title>void __cdecl SE_PassMessageToImage(HWND hWnd, UINT uMsg, WPARAM wParam);</title></rect>
<rect width="2.47" height="2.62" x="687.21" y="361.15" class="decompiled"><title>void __cdecl Inv_Ring_MotionCameraPos(RING_INFO *ring, int16_t target);</title></rect>
<rect width="2.47" height="2.62" x="687.21" y="366.77" class="decompiled"><title>int32_t __cdecl Text_Remove(TEXTSTRING *string);</title></rect>
<rect width="2.47" height="2.62" x="687.21" y="372.38" class="decompiled"><title>HRESULT __cdecl WinVidBufferUnlock(LPDDS surface, LPDDSDESC desc);</title></rect>
<rect width="2.88" height="2.22" x="692.67" y="320.63" class="known"><title>LPDIRECT3DTEXTURE2 __cdecl Create3DTexture(LPDDS surface);</title></rect>
<rect width="2.88" height="2.22" x="698.55" y="320.63" class="known"><title>HRESULT __cdecl EnumerateTextureFormats(void);</title></rect>
<rect width="2.72" height="2.22" x="704.43" y="320.63" class="decompiled"><title>void __cdecl Room_TriggerMusicTrack(int16_t value, int16_t flags, int16_t type);</title></rect>
<rect width="2.72" height="2.22" x="710.14" y="320.63" class="known"><title>void __cdecl AssaultStart(ITEM *item);</title></rect>
<rect width="2.72" height="2.22" x="715.86" y="320.63" class="decompiled"><title>void __cdecl Inv_RemoveInventoryText(void);</title></rect>
<rect width="2.72" height="2.22" x="721.58" y="320.63" class="decompiled"><title>void __cdecl Sound_Shutdown(void);</title></rect>
<rect width="2.72" height="2.22" x="727.29" y="320.63" class="decompiled"><title>int16_t __cdecl Text_GetTextLength(const char *text);</title></rect>
<rect width="2.72" height="2.22" x="733.01" y="320.63" class="known"><title>bool __cdecl DInputEnumDevices(JOYSTICK_LIST *joystickList);</title></rect>
<rect width="2.72" height="2.22" x="738.73" y="320.63" class="decompiled"><title>void __cdecl HWR_TexSource(HWR_TEXTURE_HANDLE tex_source);</title></rect>
<rect width="2.56" height="2.22" x="744.44" y="320.63" class="known"><title>void __cdecl RubbleFX(ITEM *item);</title></rect>
<rect width="2.57" height="2.21" x="692.67" y="325.85" class="known"><title>void __cdecl ExplosionFX(ITEM *item);</title></rect>
<rect width="2.57" height="2.21" x="692.67" y="331.07" class="decompiled"><title>void __cdecl Lara_Col_BackJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="2.57" height="2.21" x="692.67" y="336.28" class="decompiled"><title>void __cdecl Lara_Col_RightJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="2.57" height="2.21" x="692.67" y="341.50" class="decompiled"><title>void __cdecl Lara_Col_LeftJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="2.57" height="2.21" x="692.67" y="346.71" class="decompiled"><title>void __cdecl Lara_Col_SlideBack(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="2.57" height="2.21" x="692.67" y="351.93" class="decompiled"><title>void __cdecl Lara_Col_SurfBack(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="2.57" height="2.21" x="692.67" y="357.14" class="decompiled"><title>void __cdecl Lara_Col_SurfLeft(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="2.57" height="2.21" x="692.67" y="362.36" class="decompiled"><title>void __cdecl Lara_Col_SurfRight(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="2.57" height="2.21" x="692.67" y="367.57" class="known"><title>void __cdecl SecretControl(int16_t item_num);</title></rect>
<rect width="2.57" height="2.21" x="692.67" y="372.79" class="known"><title>uint16_t __cdecl S_COLOR(int32_t red, int32_t green, int32_t blue);</title></rect>
<rect width="2.36" height="2.42" x="698.24" y="325.85" class="known"><title>void __cdecl FreePalette(int32_t palette_idx);</title></rect>
<rect width="2.21" height="2.42" x="703.60" y="325.85" class="decompiled"><title>void __cdecl Matrix_Pop_I(void);</title></rect>
<rect width="2.21" height="2.42" x="708.81" y="325.85" class="decompiled"><title>void __cdecl Inv_Ring_MotionRotation(RING_INFO *ring, int16_t rotation, int16_t target);</title></rect>
<rect width="2.21" height="2.42" x="714.01" y="325.85" class="decompiled"><title>void __cdecl MovableBlock_Draw(const ITEM *item);</title></rect>
<rect width="2.21" height="2.42" x="719.22" y="325.85" class="decompiled"><title>void __cdecl WinVidFreeWindow(void);</title></rect>
<rect width="2.21" height="2.42" x="724.43" y="325.85" class="decompiled"><title>bool __cdecl DInputCreate(void);</title></rect>
<rect width="2.21" height="2.42" x="729.63" y="325.85" class="decompiled"><title>bool __cdecl HWR_Init(void);</title></rect>
<rect width="2.05" height="2.42" x="734.84" y="325.85" class="decompiled"><title>void __cdecl Lara_InitialiseLoad(int16_t item_num);</title></rect>
<rect width="2.05" height="2.42" x="739.89" y="325.85" class="known"><title>void __cdecl init_game_malloc(void);</title></rect>
<rect width="2.05" height="2.42" x="744.95" y="325.85" class="known"><title>void __cdecl S_SetupAboveWater(BOOL underwater);</title></rect>
<rect width="1.97" height="2.34" x="698.24" y="331.27" class="decompiled"><title>void __cdecl Inv_Ring_MotionCameraPitch(RING_INFO *ring, int16_t target);</title></rect>
<rect width="1.97" height="2.34" x="698.24" y="336.61" class="known"><title>void __cdecl SafeFreeTexturePage(int32_t page_idx);</title></rect>
<rect width="1.97" height="2.17" x="698.24" y="341.95" class="known"><title>void __cdecl AssaultStop(ITEM *item);</title></rect>
<rect width="1.97" height="2.17" x="698.24" y="347.13" class="decompiled"><title>int32_t __cdecl GF_DoFrontendSequence(void);</title></rect>
<rect width="1.97" height="2.17" x="698.24" y="352.30" class="decompiled"><title>bool __cdecl D3DCreate(void);</title></rect>
<rect width="1.97" height="2.17" x="698.24" y="357.47" class="decompiled"><title>void __thiscall S_FlaggedString_Create(STRING_FLAGGED *string, int32_t size);</title></rect>
<rect width="1.97" height="2.17" x="698.24" y="362.65" class="decompiled"><title>BOOL __cdecl S_Audio_Sample_OutIsTrackPlaying(int32_t track_id);</title></rect>
<rect width="1.97" height="2.17" x="698.24" y="367.82" class="known"><title>bool __cdecl InitTextures(void);</title></rect>
<rect width="1.97" height="2.01" x="698.24" y="372.99" class="decompiled"><title>void __cdecl Lara_Col_Slide(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="1.79" height="2.19" x="703.21" y="331.27" class="decompiled"><title>void __cdecl Lara_State_ClimbEnd(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="1.79" height="2.19" x="703.21" y="336.46" class="decompiled"><title>void __cdecl Lara_Col_SurfTread(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="1.79" height="2.19" x="703.21" y="341.66" class="decompiled"><title>void __cdecl Text_CentreH(TEXTSTRING *string, int16_t enable);</title></rect>
<rect width="1.79" height="2.19" x="703.21" y="346.85" class="decompiled"><title>void __cdecl Text_CentreV(TEXTSTRING *string, int16_t enable);</title></rect>
<rect width="1.79" height="2.19" x="703.21" y="352.04" class="decompiled"><title>void __cdecl Text_AlignRight(TEXTSTRING *string, int16_t enable);</title></rect>
<rect width="1.79" height="2.19" x="703.21" y="357.23" class="decompiled"><title>void __cdecl Text_AlignBottom(TEXTSTRING *string, int16_t enable);</title></rect>
<rect width="1.79" height="2.19" x="703.21" y="362.42" class="decompiled"><title>int32_t __cdecl Random_GetControl(void);</title></rect>
<rect width="1.79" height="2.19" x="703.21" y="367.62" class="decompiled"><title>int32_t __cdecl Random_GetDraw(void);</title></rect>
<rect width="1.79" height="2.19" x="703.21" y="372.81" class="known"><title>LONG __cdecl SetRegistryDwordValue(LPCTSTR lpValueName, DWORD value);</title></rect>
<rect width="1.92" height="2.06" x="708.01" y="331.27" class="decompiled"><title>void __cdecl Matrix_Push(void);</title></rect>
<rect width="1.76" height="2.06" x="712.93" y="331.27" class="decompiled"><title>void __cdecl Lara_State_Special(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="1.76" height="2.06" x="717.69" y="331.27" class="decompiled"><title>void __cdecl Lara_State_Extra_GongBong(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="1.59" height="2.06" x="722.44" y="331.27" class="known"><title>void __cdecl BoilerFX(ITEM *item);</title></rect>
<rect width="1.59" height="2.06" x="727.04" y="331.27" class="known"><title>void __cdecl PistonFX(ITEM *item);</title></rect>
<rect width="1.59" height="2.06" x="731.63" y="331.27" class="known"><title>void __cdecl CurtainFX(ITEM *item);</title></rect>
<rect width="1.59" height="2.06" x="736.22" y="331.27" class="known"><title>void __cdecl StatueFX(ITEM *item);</title></rect>
<rect width="1.59" height="2.06" x="740.81" y="331.27" class="known"><title>void __cdecl SetChangeFX(ITEM *item);</title></rect>
<rect width="1.59" height="2.06" x="745.41" y="331.27" class="decompiled"><title>void __cdecl Lara_State_Reach(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="1.96" height="1.69" x="708.01" y="336.33" class="decompiled"><title>bool __cdecl S_Audio_Sample_DSoundCreate(GUID *guid);</title></rect>
<rect width="1.96" height="1.69" x="708.01" y="341.02" class="known"><title>void __cdecl S_DontDisplayPicture(void);</title></rect>
<rect width="1.96" height="1.69" x="708.01" y="345.70" class="decompiled"><title>void __cdecl S_Audio_Sample_OutSetPitch(int32_t track_id, int32_t pitch);</title></rect>
<rect width="1.96" height="1.69" x="708.01" y="350.39" class="known"><title>int32_t __cdecl GetFreePaletteIndex(void);</title></rect>
<rect width="1.96" height="1.69" x="708.01" y="355.07" class="known"><title>int32_t __cdecl GetFreeTexturePageIndex(void);</title></rect>
<rect width="1.96" height="1.69" x="708.01" y="359.76" class="known"><title>void __thiscall SE_UpdateBitmapPalette(BITMAP_RESOURCE *bmpRsrc, HWND hWnd, HWND hSender);</title></rect>
<rect width="1.96" height="1.52" x="708.01" y="364.44" class="decompiled"><title>void __cdecl Inv_RemoveAllItems(void);</title></rect>
<rect width="1.96" height="1.52" x="708.01" y="368.96" class="decompiled"><title>void __cdecl Requester_Item_CenterAlign(REQUEST_INFO *req, TEXTSTRING *txt);</title></rect>
<rect width="1.96" height="1.52" x="708.01" y="373.48" class="decompiled"><title>void __cdecl Lara_ControlExtra(int16_t item_num);</title></rect>
<rect width="1.81" height="1.66" x="712.97" y="336.33" class="decompiled"><title>void __cdecl BridgeFlat_Ceiling(const ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *out_height);</title></rect>
<rect width="1.81" height="1.66" x="717.77" y="336.33" class="decompiled"><title>int32_t __fastcall Math_Sin(int16_t angle);</title></rect>
<rect width="1.63" height="1.66" x="722.58" y="336.33" class="decompiled"><title>bool __cdecl EnumerateDisplayAdapters(DISPLAY_ADAPTER_LIST *displayAdapterList);</title></rect>
<rect width="1.63" height="1.66" x="727.21" y="336.33" class="decompiled"><title>void __cdecl DInputRelease(void);</title></rect>
<rect width="1.63" height="1.66" x="731.84" y="336.33" class="decompiled"><title>bool __cdecl S_Audio_Sample_DSoundEnumerate(SOUND_ADAPTER_LIST *adapter_list);</title></rect>
<rect width="1.63" height="1.66" x="736.47" y="336.33" class="decompiled"><title>int32_t __fastcall Math_SinImpl(int16_t angle);</title></rect>
<rect width="1.45" height="1.66" x="741.10" y="336.33" class="decompiled"><title>int32_t __cdecl Input_GetDebounced(int32_t input);</title></rect>
<rect width="1.45" height="1.66" x="745.55" y="336.33" class="decompiled"><title>bool __cdecl HWR_VertexBufferFull(void);</title></rect>
<rect width="1.30" height="1.63" x="712.97" y="340.99" class="decompiled"><title>void __cdecl Lara_State_SlideBack(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="1.30" height="1.63" x="712.97" y="345.62" class="known"><title>void __cdecl Flare_DrawMeshes(void);</title></rect>
<rect width="1.30" height="1.63" x="712.97" y="350.24" class="known"><title>void __cdecl Flare_UndrawMeshes(void);</title></rect>
<rect width="1.30" height="1.63" x="712.97" y="354.87" class="unused"><title>sub_444990</title></rect>
<rect width="1.30" height="1.63" x="712.97" y="359.49" class="unused"><title>sub_444AA0</title></rect>
<rect width="1.30" height="1.63" x="712.97" y="364.12" class="unused"><title>sub_4470B0</title></rect>
<rect width="1.30" height="1.63" x="712.97" y="368.75" class="unused"><title>sub_447160</title></rect>
<rect width="1.30" height="1.63" x="712.97" y="373.37" class="unused"><title>sub_447A80</title></rect>
<rect width="1.79" height="1.16" x="717.27" y="340.99" class="unused"><title>sub_447B30</title></rect>
<rect width="1.79" height="1.16" x="722.06" y="340.99" class="known"><title>BOOL __cdecl S_LoadLevelFile(LPCTSTR file_name, int32_t level_num, GAMEFLOW_LEVEL_TYPE level_type);</title></rect>
<rect width="1.79" height="1.16" x="726.85" y="340.99" class="known"><title>int32_t __cdecl UT_MessageBox(LPCTSTR lpText, HWND hWnd);</title></rect>
<rect width="1.59" height="1.16" x="731.64" y="340.99" class="known"><title>void __cdecl AssaultReset(ITEM *item);</title></rect>
<rect width="1.59" height="1.16" x="736.23" y="340.99" class="decompiled"><title>void __cdecl Text_SetScale(TEXTSTRING *string, int32_t scale_h, int32_t scale_v);</title></rect>
<rect width="1.59" height="1.16" x="740.82" y="340.99" class="known"><title>void __cdecl WinInRunControlPanel(HWND hWnd);</title></rect>
<rect width="1.59" height="1.16" x="745.41" y="340.99" class="unused"><title>sub_44E860</title></rect>
<rect width="1.28" height="1.46" x="717.27" y="345.15" class="known"><title>void __cdecl SE_GraphicsAdapterSet(HWND hwndDlg, DISPLAY_ADAPTER_NODE *adapter);</title></rect>
<rect width="1.28" height="1.46" x="721.55" y="345.15" class="decompiled"><title>void __cdecl S_Audio_Sample_OutCloseTrack(int32_t track_id);</title></rect>
<rect width="1.09" height="1.46" x="725.82" y="345.15" class="known"><title>void __cdecl turn180_effect(ITEM *item);</title></rect>
<rect width="1.09" height="1.46" x="729.92" y="345.15" class="known"><title>void __cdecl invisibility_off(ITEM *item);</title></rect>
<rect width="1.09" height="1.46" x="734.01" y="345.15" class="decompiled"><title>void __cdecl BridgeFlat_Floor(const ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *out_height);</title></rect>
<rect width="1.09" height="1.46" x="738.10" y="345.15" class="decompiled"><title>void __cdecl HWR_BeginScene(void);</title></rect>
<rect width="0.91" height="1.46" x="742.19" y="345.15" class="decompiled"><title>void __cdecl Overlay_InitialisePickUpDisplay(void);</title></rect>
<rect width="0.91" height="1.46" x="746.09" y="345.15" class="decompiled"><title>void __cdecl Lara_State_WaterOut(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="1.12" height="1.23" x="717.27" y="349.61" class="known"><title>void __cdecl ResetSG(void);</title></rect>
<rect width="1.12" height="1.03" x="717.27" y="353.84" class="decompiled"><title>void __cdecl Lara_State_Death(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="1.12" height="1.03" x="717.27" y="357.86" class="decompiled"><title>void __cdecl Lara_State_Climbing(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="1.12" height="1.03" x="717.27" y="361.89" class="decompiled"><title>void __cdecl Lara_State_ClimbDown(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="1.12" height="1.03" x="717.27" y="365.92" class="decompiled"><title>void __cdecl Lara_State_Dive(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="1.12" height="1.03" x="717.27" y="369.95" class="known"><title>void __cdecl S_AdjustTexelCoordinates(void);</title></rect>
<rect width="1.12" height="1.03" x="717.27" y="373.97" class="known"><title>void __cdecl SE_GraphicsTestFinish(void);</title></rect>
<rect width="0.89" height="1.06" x="721.39" y="349.61" class="decompiled"><title>void __cdecl Requester_RemoveAllItems(REQUEST_INFO *req);</title></rect>
<rect width="0.89" height="1.06" x="721.39" y="353.66" class="decompiled"><title>void __cdecl Lara_State_UpJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="0.89" height="1.06" x="721.39" y="357.72" class="decompiled"><title>void __cdecl Lara_State_Extra_Airlock(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="0.89" height="1.06" x="721.39" y="361.78" class="decompiled"><title>void __cdecl Lara_Col_TurnLeft(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="0.89" height="1.06" x="721.39" y="365.83" class="decompiled"><title>void __cdecl Lara_Col_Land(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="0.89" height="1.06" x="721.39" y="369.89" class="decompiled"><title>void __cdecl Lara_Col_StepLeft(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="0.89" height="1.06" x="721.39" y="373.94" class="decompiled"><title>void __cdecl Lara_Col_Null(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="1.16" height="0.79" x="725.28" y="349.61" class="decompiled"><title>void __cdecl Lara_Col_Swim(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="1.16" height="0.79" x="729.43" y="349.61" class="decompiled"><title>void __thiscall S_FlaggedString_Delete(STRING_FLAGGED *string);</title></rect>
<rect width="1.16" height="0.79" x="733.59" y="349.61" class="decompiled"><title>void __cdecl WinVidFinish(void);</title></rect>
<rect width="1.16" height="0.79" x="737.75" y="349.61" class="decompiled"><title>bool __cdecl S_IntroFMV(const char *file_name1, const char *file_name2);</title></rect>
<rect width="1.16" height="0.79" x="741.90" y="349.61" class="known"><title>LONG __cdecl DeleteRegistryValue(LPCTSTR lpValueName);</title></rect>
<rect width="0.94" height="0.79" x="746.06" y="349.61" class="unused"><title>sub_4449A0</title></rect>
<rect width="0.58" height="1.18" x="725.28" y="353.40" class="decompiled"><title>DISPLAY_MODE *__thiscall InsertDisplayMode(DISPLAY_MODE_LIST *modeList, DISPLAY_MODE_NODE *before);</title></rect>
<rect width="0.58" height="1.18" x="725.28" y="357.58" class="unused"><title>sub_4470C0</title></rect>
<rect width="0.58" height="1.18" x="725.28" y="361.76" class="unused"><title>sub_447A90</title></rect>
<rect width="0.58" height="1.18" x="725.28" y="365.93" class="known"><title>void __cdecl SafeFreePalette(int32_t palette_idx);</title></rect>
<rect width="0.58" height="0.95" x="725.28" y="370.11" class="decompiled"><title>HWND __cdecl WinVidFindGameWindow(void);</title></rect>
<rect width="0.58" height="0.95" x="725.28" y="374.05" class="known"><title>void __cdecl GameBuf_Shutdown(void);</title></rect>
<rect width="0.74" height="0.77" x="728.85" y="353.40" class="known"><title>HWND __cdecl SE_FindSetupDialog(void);</title></rect>
<rect width="0.52" height="0.77" x="732.60" y="353.40" class="decompiled"><title>void __cdecl Text_RemoveBackground(TEXTSTRING *string);</title></rect>
<rect width="0.52" height="0.77" x="736.12" y="353.40" class="decompiled"><title>void __cdecl Text_RemoveOutline(TEXTSTRING *string);</title></rect>
<rect width="0.52" height="0.77" x="739.65" y="353.40" class="unused"><title>sub_44E880</title></rect>
<rect width="0.52" height="0.77" x="743.17" y="353.40" class="known"><title>void __cdecl ScreenPartialDump(void);</title></rect>
<rect width="0.30" height="0.77" x="746.70" y="353.40" class="known"><title>void __cdecl WinInFinish(void);</title></rect>
<rect width="0.35" height="0.72" x="728.85" y="357.17" class="known"><title>void __cdecl S_FinishInventory(void);</title></rect>
<rect width="0.35" height="0.72" x="728.85" y="360.89" class="known"><title>bool __cdecl IsNewRegistryKeyCreated(void);</title></rect>
<rect width="0.35" height="0.47" x="728.85" y="364.61" class="decompiled"><title>bool __cdecl S_PlayFMV(const char *file_name);</title></rect>
<rect width="0.35" height="0.47" x="728.85" y="368.08" class="known"><title>void __cdecl SE_AdvancedDlgInit(HWND hwndDlg);</title></rect>
<rect width="0.35" height="0.22" x="728.85" y="371.55" class="decompiled"><title>void __thiscall DisplayModeListInit(DISPLAY_MODE_LIST *pList);</title></rect>
<rect width="0.35" height="0.22" x="728.85" y="374.78" class="known"><title>void __cdecl ScreenDump(void);</title></rect>
<rect width="0.35" height="0.22" x="732.20" y="357.17" class="known"><title>LONG __cdecl CloseRegistryKey(void);</title></rect>
<rect width="0.10" height="0.22" x="735.55" y="357.17" class="decompiled"><title>LPCTSTR __cdecl DecodeErrorMessage(DWORD error_code);</title></rect>
<rect width="0.10" height="0.22" x="738.65" y="357.17" class="known"><title>void __cdecl finish_level_effect(ITEM *item);</title></rect>
<rect width="0.10" height="0.22" x="741.49" y="357.17" class="known"><title>void __cdecl dynamic_light_off(ITEM *item);</title></rect>
<rect width="0.10" height="0.22" x="744.32" y="357.17" class="decompiled"><title>void __cdecl Lara_State_Null(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="0.10" height="0.22" x="747.16" y="357.17" class="decompiled"><title>void __cdecl Lara_State_UWTwist(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="0.10" height="0.18" x="732.20" y="360.38" class="known"><title>void __cdecl S_ClearScreen(void);</title></rect>
<rect width="0.10" height="0.10" x="732.20" y="363.56" class="decompiled"><title>void __cdecl Game_SetCutsceneTrack(int32_t track);</title></rect>
<rect width="0.10" height="0.10" x="732.20" y="366.45" class="known"><title>void __cdecl lara_hands_free(ITEM *item);</title></rect>
<rect width="0.10" height="0.10" x="732.20" y="369.34" class="decompiled"><title>void __cdecl Lara_State_Splat(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="0.10" height="0.10" x="732.20" y="372.22" class="decompiled"><title>void __cdecl Random_SeedControl(int32_t seed);</title></rect>
<rect width="0.10" height="0.10" x="732.20" y="375.11" class="decompiled"><title>void __cdecl Random_SeedDraw(int32_t seed);</title></rect>
<rect width="0.11" height="0.10" x="735.07" y="360.38" class="known"><title>void __cdecl SE_SoundAdapterSet(HWND hwndDlg, SOUND_ADAPTER_NODE *adapter);</title></rect>
<rect width="0.11" height="0.10" x="738.18" y="360.38" class="known"><title>void __cdecl SE_ControlsJoystickSet(HWND hwndDlg, JOYSTICK_NODE *joystick);</title></rect>
<rect width="0.11" height="0.10" x="741.29" y="360.38" class="decompiled"><title>void __cdecl Sound_SetMasterVolume(int32_t volume);</title></rect>
<rect width="0.10" height="0.10" x="744.40" y="360.38" class="known"><title>void __cdecl invisibility_on(ITEM *item);</title></rect>
<rect width="0.10" height="0.10" x="747.20" y="360.38" class="known"><title>void __cdecl dynamic_light_on(ITEM *item);</title></rect>
<rect width="0.10" height="0.10" x="735.07" y="363.05" class="decompiled"><title>void __cdecl WinVidClearMinWindowSize(void);</title></rect>
<rect width="0.10" height="0.10" x="737.67" y="363.05" class="decompiled"><title>void __cdecl WinVidClearMaxWindowSize(void);</title></rect>
<rect width="0.10" height="0.10" x="740.26" y="363.05" class="decompiled"><title>bool __cdecl Direct3DInit(void);</title></rect>
<rect width="0.10" height="0.10" x="742.21" y="363.05" class="decompiled"><title>bool __cdecl S_Audio_Sample_IsEnabled(void);</title></rect>
<rect width="0.10" height="0.10" x="744.16" y="363.05" class="decompiled"><title>int32_t __cdecl LevelCompleteSequence(void);</title></rect>
<rect width="0.10" height="0.10" x="746.11" y="363.05" class="known"><title>int32_t __cdecl GetRenderHeight(void);</title></rect>
<rect width="0.10" height="0.10" x="748.05" y="363.05" class="known"><title>int32_t __cdecl GetRenderWidth(void);</title></rect>
<rect width="0.10" height="0.10" x="735.07" y="365.61" class="decompiled"><title>int32_t __fastcall Math_Cos(int16_t angle);</title></rect>
<rect width="0.10" height="0.10" x="735.07" y="367.67" class="decompiled"><title>int __cdecl Player_PlayFrame(LPVOID, LPVOID, LPVOID, DWORD, LPCRECT, DWORD, DWORD, DWORD);</title></rect>
<rect width="0.10" height="0.10" x="735.07" y="369.74" class="decompiled"><title>int __cdecl Movie_GetTotalFrames(LPVOID);</title></rect>
<rect width="0.10" height="0.10" x="735.07" y="371.80" class="decompiled"><title>int __cdecl Movie_GetCurrentFrame(LPVOID);</title></rect>
<rect width="0.10" height="0.10" x="735.07" y="373.87" class="decompiled"><title>int __cdecl Player_StartTimer(LPVOID);</title></rect>
<rect width="0.10" height="0.10" x="735.07" y="375.93" class="decompiled"><title>int __cdecl Player_InitMoviePlayback(LPVOID, LPVOID, LPVOID);</title></rect>
<rect width="0.10" height="0.10" x="737.48" y="365.61" class="decompiled"><title>int __cdecl Movie_SetSyncAdjust(LPVOID, LPVOID, DWORD);</title></rect>
<rect width="0.10" height="0.10" x="737.48" y="367.67" class="decompiled"><title>int __cdecl Player_InitSound(LPVOID, DWORD, DWORD, BOOL, DWORD, DWORD, DWORD, DWORD, DWORD);</title></rect>
<rect width="0.10" height="0.10" x="737.48" y="369.74" class="decompiled"><title>int __cdecl Movie_GetSoundChannels(LPVOID);</title></rect>
<rect width="0.10" height="0.10" x="737.48" y="371.80" class="decompiled"><title>int __cdecl Movie_GetSoundRate(LPVOID);</title></rect>
<rect width="0.10" height="0.10" x="737.48" y="373.87" class="decompiled"><title>int __cdecl Movie_GetSoundPrecision(LPVOID);</title></rect>
<rect width="0.10" height="0.10" x="737.48" y="375.93" class="decompiled"><title>int __cdecl Player_GetDSErrorCode(void);</title></rect>
<rect width="0.10" height="0.10" x="739.89" y="365.61" class="decompiled"><title>int __cdecl Player_InitSoundSystem(HWND);</title></rect>
<rect width="0.10" height="0.10" x="741.91" y="365.61" class="decompiled"><title>int __cdecl Player_BlankScreen(DWORD, DWORD, DWORD, DWORD);</title></rect>
<rect width="0.10" height="0.10" x="743.93" y="365.61" class="decompiled"><title>int __cdecl Player_InitPlaybackMode(HWND, LPVOID, DWORD, DWORD);</title></rect>
<rect width="0.10" height="0.10" x="745.96" y="365.61" class="decompiled"><title>int __cdecl Player_InitVideo(LPVOID, LPVOID, DWORD, DWORD, DWORD, DWORD, DWORD, DWORD, DWORD, DWORD, DWORD, DWORD, DWORD);</title></rect>
<rect width="0.10" height="0.10" x="747.98" y="365.61" class="decompiled"><title>int __cdecl Movie_GetXSize(LPVOID);</title></rect>
<rect width="0.10" height="0.10" x="739.89" y="368.07" class="decompiled"><title>int __cdecl Movie_GetYSize(LPVOID);</title></rect>
<rect width="0.10" height="0.10" x="739.89" y="370.55" class="decompiled"><title>int __cdecl Movie_GetFormat(LPVOID);</title></rect>
<rect width="0.10" height="0.10" x="739.89" y="373.03" class="decompiled"><title>int __cdecl Player_InitMovie(LPVOID, DWORD, DWORD, LPCTSTR, DWORD);</title></rect>
<rect width="0.10" height="0.10" x="739.89" y="375.52" class="decompiled"><title>int __cdecl Player_PassInDirectDrawObject(LPDIRECTDRAW3);</title></rect>
<rect width="0.10" height="0.10" x="741.90" y="368.07" class="decompiled"><title>int __cdecl Player_ReturnPlaybackMode(BOOL);</title></rect>
<rect width="0.10" height="0.10" x="743.92" y="368.07" class="decompiled"><title>int __cdecl Player_ShutDownSoundSystem(void);</title></rect>
<rect width="0.10" height="0.10" x="745.95" y="368.07" class="decompiled"><title>int __cdecl Player_ShutDownMovie(LPVOID);</title></rect>
<rect width="0.10" height="0.10" x="747.97" y="368.07" class="decompiled"><title>int __cdecl Player_ShutDownVideo(LPVOID);</title></rect>
<rect width="0.10" height="0.10" x="741.90" y="370.53" class="decompiled"><title>int __cdecl Player_ShutDownSound(LPVOID);</title></rect>
<rect width="0.10" height="0.10" x="741.90" y="373.16" class="decompiled"><title>int __cdecl Player_StopTimer(LPVOID);</title></rect>
<rect width="0.10" height="0.10" x="741.90" y="375.80" class="known"><title>void __cdecl flip_map_effect(ITEM *item);</title></rect>
<rect width="0.10" height="0.10" x="743.78" y="370.53" class="known"><title>void __cdecl reset_hair(ITEM *item);</title></rect>
<rect width="0.10" height="0.10" x="745.86" y="370.53" class="decompiled"><title>void __cdecl Inv_DoInventoryPicture(void);</title></rect>
<rect width="0.10" height="0.10" x="747.93" y="370.53" class="unused"><title>sub_444BB0</title></rect>
<rect width="0.10" height="0.10" x="743.78" y="372.53" class="unused"><title>sub_4473A0</title></rect>
<rect width="0.10" height="0.10" x="743.78" y="374.35" class="unused"><title>sub_447FA0</title></rect>
<rect width="0.10" height="0.10" x="743.78" y="376.18" class="unused"><title>sub_448410</title></rect>
<rect width="0.10" height="0.10" x="746.06" y="372.53" class="unused"><title>sub_4523A0</title></rect>
<rect width="0.10" height="0.10" x="748.03" y="372.53" class="known"><title>LONG __cdecl CloseGameRegistryKey(void);</title></rect>
<rect width="0.10" height="0.10" x="746.06" y="374.63" class="known"><title>void __cdecl SE_SoundTestFinish(void);</title></rect>
<rect width="0.10" height="0.10" x="746.06" y="376.74" class="decompiled"><title>bool __cdecl RenderInit(void);</title></rect>
<rect width="0.10" height="0.10" x="748.03" y="374.63" class="known"><title>int32_t __cdecl SE_GraphicsTestExecute(void);</title></rect>
<rect width="0.10" height="0.10" x="748.03" y="375.90" class="unused"><title>void __cdecl Output_InsertInventoryBackground(const int16_t *obj_ptr);</title></rect>
<rect width="0.10" height="0.10" x="749.01" y="375.90" class="unused"><title>sub_444BC0</title></rect>
<rect width="0.10" height="0.10" x="748.03" y="376.74" class="unused"><title>sub_448420</title></rect>
<rect width="0.10" height="0.10" x="748.69" y="376.74" class="unused"><title>sub_44E6F0</title></rect>
<rect width="0.10" height="0.10" x="749.34" y="376.74" class="unused"><title>sub_4523B0</title></rect>
</g>
</g>
</svg>
