<svg version="1.1"
    viewBox="-2 -2 751 956"
    xmlns="http://www.w3.org/2000/svg">
    <style>
        .todo {
            --bg: rgba(255, 255, 255, 0.25);
            --fg: rgba(100, 100, 100, 0.5);
        }
        .known {
            --bg: rgba(255, 255, 0, 0.25);
            --fg: rgba(250, 150, 0, 0.85);
        }
        .decompiled {
            --bg: rgba(0, 255, 0, 0.5);
            --fg: rgba(0, 150, 0, 0.85);
        }
        .unused {
            --bg: rgba(255, 0, 0, 0.05);
            --fg: rgba(250, 0, 0, 0.5);
        }
        rect {
            fill: var(--bg);
            stroke: var(--fg);
            stroke-width: 0.5;
        }
        rect.unused {
            fill: url("#unused-cross");
        }
        text {
            alignment-baseline: central;
            font-family: sans-serif;
            font-size: 15px;
            fill: var(--fg, black);
            stroke: none;
        }
        @media (prefers-color-scheme: dark) {
          text {
            fill: var(--fg, white);
          }
        }
        tspan {
            alignment-baseline: central;
            fill: var(--fg, inherit);
        }
    </style>
    <defs>
        <pattern id='unused-cross' x='0' y='0' width='100%' height='100%' viewBox='0 0 12 12' preserveAspectRatio='none'>
            <path d='M0,0L12,12M0,12L12,0' stroke-width='0.5' stroke='red'/>
        </pattern>
    </defs>
<g transform="translate(0 0)">
<text x="0" y="7.50">Legend:</text>
<g transform="translate(0 20)">
<text x="17" y="7.50">Function fully decompiled</text>
<rect width="12" height="12" x="0" y="1.50" class="decompiled"/>
</g>
<g transform="translate(0 38)">
<text x="17" y="7.50">Function not yet decompiled, but with a known signature</text>
<rect width="12" height="12" x="0" y="1.50" class="known"/>
</g>
<g transform="translate(0 56)">
<text x="17" y="7.50">Function not yet decompiled, with an unknown signature</text>
<rect width="12" height="12" x="0" y="1.50" class="todo"/>
</g>
<g transform="translate(0 74)">
<text x="17" y="7.50">Function not used by the game</text>
<rect width="12" height="12" x="0" y="1.50" class="unused"/>
</g>
</g>
<g transform="translate(0 116)">
<text x="0" y="7.50">Tomb2.exe progress according to the physical function order:</text>
<text class="todo" style="font-size: 12px; " x="747" y="9"><tspan text-anchor="end"><tspan class="decompiled">62.23% (758)</tspan> · <tspan class="known">35.30% (430)</tspan> · <tspan class="todo">0% (0)</tspan> · <tspan class="unused">2.46% (30)</tspan></tspan></text>
<g transform="translate(0 20)">
<rect width="464.88" height="6" x="0" y="0" class="decompiled"/>
<rect width="263.72" height="6" x="464.88" y="0" class="known"/>
<rect width="18.40" height="6" x="728.60" y="0" class="unused"/>
</g>
<g transform="translate(0 31)">
<rect width="12" height="12" x="0" y="0" class="decompiled"><title>void __cdecl Matrix_GenerateW2V(PHD_3DPOS *viewpos);</title></rect>
<rect width="12" height="12" x="15" y="0" class="decompiled"><title>void __cdecl Matrix_LookAt(int32_t xsrc, int32_t ysrc, int32_t zsrc, int32_t xtar, int32_t ytar, int32_t ztar, int16_t roll);</title></rect>
<rect width="12" height="12" x="30" y="0" class="decompiled"><title>void __cdecl Math_GetVectorAngles(int32_t x, int32_t y, int32_t z, int16_t *dest);</title></rect>
<rect width="12" height="12" x="45" y="0" class="decompiled"><title>void __cdecl Matrix_RotX(int16_t rx);</title></rect>
<rect width="12" height="12" x="60" y="0" class="decompiled"><title>void __cdecl Matrix_RotY(int16_t ry);</title></rect>
<rect width="12" height="12" x="75" y="0" class="decompiled"><title>void __cdecl Matrix_RotZ(int16_t rz);</title></rect>
<rect width="12" height="12" x="90" y="0" class="decompiled"><title>void __cdecl Matrix_RotYXZ(int16_t ry, int16_t rx, int16_t rz);</title></rect>
<rect width="12" height="12" x="105" y="0" class="decompiled"><title>void __cdecl Matrix_RotYXZpack(uint32_t rpack);</title></rect>
<rect width="12" height="12" x="120" y="0" class="decompiled"><title>bool __cdecl Matrix_TranslateRel(int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="12" height="12" x="135" y="0" class="decompiled"><title>void __cdecl Matrix_TranslateAbs(int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="12" height="12" x="150" y="0" class="decompiled"><title>void __cdecl Output_InsertPolygons(const int16_t *obj_ptr, int32_t clip);</title></rect>
<rect width="12" height="12" x="165" y="0" class="decompiled"><title>void __cdecl Output_InsertRoom(const int16_t *obj_ptr, int32_t is_outside);</title></rect>
<rect width="12" height="12" x="180" y="0" class="decompiled"><title>const int16_t *__cdecl Output_CalcSkyboxLight(const int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="195" y="0" class="decompiled"><title>void __cdecl Output_InsertSkybox(const int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="210" y="0" class="unused"><title>void __cdecl Output_InsertInventoryBackground(const int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="225" y="0" class="decompiled"><title>const int16_t *__cdecl Output_CalcObjectVertices(const int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="240" y="0" class="decompiled"><title>const int16_t *__cdecl Output_CalcVerticeLight(const int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="255" y="0" class="decompiled"><title>const int16_t *__cdecl Output_CalcRoomVertices(const int16_t *obj_ptr, int32_t far_clip);</title></rect>
<rect width="12" height="12" x="270" y="0" class="decompiled"><title>void __cdecl Output_RotateLight(int16_t pitch, int16_t yaw);</title></rect>
<rect width="12" height="12" x="285" y="0" class="decompiled"><title>void __cdecl Output_InitPolyList(void);</title></rect>
<rect width="12" height="12" x="300" y="0" class="decompiled"><title>void __cdecl Output_SortPolyList(void);</title></rect>
<rect width="12" height="12" x="315" y="0" class="decompiled"><title>void __cdecl Output_QuickSort(int32_t left, int32_t right);</title></rect>
<rect width="12" height="12" x="330" y="0" class="decompiled"><title>void __cdecl Output_PrintPolyList(uint8_t *surface_ptr);</title></rect>
<rect width="12" height="12" x="345" y="0" class="decompiled"><title>void __cdecl Output_AlterFOV(int16_t fov);</title></rect>
<rect width="12" height="12" x="360" y="0" class="decompiled"><title>void __cdecl Output_SetNearZ(int32_t near_z);</title></rect>
<rect width="12" height="12" x="375" y="0" class="decompiled"><title>void __cdecl Output_SetFarZ(int32_t far_z);</title></rect>
<rect width="12" height="12" x="390" y="0" class="decompiled"><title>void __cdecl Output_Init(int16_t x, int16_t y, int32_t width, int32_t height, int32_t near_z, int32_t far_z, int16_t view_angle, int32_t screen_width, int32_t screen_height);</title></rect>
<rect width="12" height="12" x="405" y="0" class="decompiled"><title>void __cdecl Output_DrawPolyLine(const int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="420" y="0" class="decompiled"><title>void __cdecl Output_DrawPolyFlat(const int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="435" y="0" class="decompiled"><title>void __cdecl Output_DrawPolyTrans(const int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="450" y="0" class="decompiled"><title>void __cdecl Output_DrawPolyGouraud(const int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="465" y="0" class="decompiled"><title>void __cdecl Output_DrawPolyGTMap(const int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="480" y="0" class="decompiled"><title>void __cdecl Output_DrawPolyWGTMap(const int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="495" y="0" class="decompiled"><title>int32_t __cdecl Output_XGenX(const int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="510" y="0" class="decompiled"><title>int32_t __cdecl Output_XGenXG(const int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="525" y="0" class="decompiled"><title>int32_t __cdecl Output_XGenXGUV(const int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="540" y="0" class="decompiled"><title>int32_t __cdecl Output_XGenXGUVPerspFP(const int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="555" y="0" class="decompiled"><title>void __cdecl Output_GTMapPersp32FP(int32_t y1, int32_t y2, uint8_t *tex_page);</title></rect>
<rect width="12" height="12" x="570" y="0" class="decompiled"><title>void __cdecl Output_WGTMapPersp32FP(int32_t y1, int32_t y2, uint8_t *tex_page);</title></rect>
<rect width="12" height="12" x="585" y="0" class="decompiled"><title>void __cdecl Output_DrawPolyGTMapPersp(const int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="600" y="0" class="decompiled"><title>void __cdecl Output_DrawPolyWGTMapPersp(const int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="615" y="0" class="decompiled"><title>int32_t __cdecl Output_VisibleZClip(const PHD_VBUF *vtx0, const PHD_VBUF *vtx1, const PHD_VBUF *vtx2);</title></rect>
<rect width="12" height="12" x="630" y="0" class="decompiled"><title>int32_t __cdecl Output_ZedClipper(int32_t vtx_count, POINT_INFO *pts, VERTEX_INFO *vtx);</title></rect>
<rect width="12" height="12" x="645" y="0" class="decompiled"><title>int32_t __cdecl Output_XYGUVClipper(int32_t vtx_count, VERTEX_INFO *vtx);</title></rect>
<rect width="12" height="12" x="660" y="0" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectGT4(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="12" height="12" x="675" y="0" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectGT3(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="12" height="12" x="690" y="0" class="decompiled"><title>int32_t __cdecl Output_XYGClipper(int32_t vtx_count, VERTEX_INFO *vtx);</title></rect>
<rect width="12" height="12" x="705" y="0" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectG4(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="12" height="12" x="720" y="0" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectG3(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="12" height="12" x="735" y="0" class="decompiled"><title>int32_t __cdecl Output_XYClipper(int32_t vtx_count, VERTEX_INFO *vtx);</title></rect>
<rect width="12" height="12" x="0" y="15" class="decompiled"><title>void __cdecl Output_InsertTrans8(const PHD_VBUF *vbuf, int16_t shade);</title></rect>
<rect width="12" height="12" x="15" y="15" class="decompiled"><title>void __cdecl Output_InsertTransQuad(int32_t x, int32_t y, int32_t width, int32_t height, int32_t z);</title></rect>
<rect width="12" height="12" x="30" y="15" class="decompiled"><title>void __cdecl Output_InsertFlatRect(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t z, uint8_t color_idx);</title></rect>
<rect width="12" height="12" x="45" y="15" class="decompiled"><title>void __cdecl Output_InsertLine(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t z, uint8_t color_idx);</title></rect>
<rect width="12" height="12" x="60" y="15" class="decompiled"><title>void __cdecl Output_InsertGT3_ZBuffered(const PHD_VBUF *vtx0, const PHD_VBUF *vtx1, const PHD_VBUF *vtx2, const PHD_TEXTURE *texture, const PHD_UV *uv0, const PHD_UV *uv1, const PHD_UV *uv2);</title></rect>
<rect width="12" height="12" x="75" y="15" class="decompiled"><title>void __cdecl Output_DrawClippedPoly_Textured(int32_t vtx_count);</title></rect>
<rect width="12" height="12" x="90" y="15" class="decompiled"><title>void __cdecl Output_InsertGT4_ZBuffered(const PHD_VBUF *vtx0, const PHD_VBUF *vtx1, const PHD_VBUF *vtx2, const PHD_VBUF *vtx3, const PHD_TEXTURE *texture);</title></rect>
<rect width="12" height="12" x="105" y="15" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectGT4_ZBuffered(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="12" height="12" x="120" y="15" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectGT3_ZBuffered(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="12" height="12" x="135" y="15" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectG4_ZBuffered(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="12" height="12" x="150" y="15" class="decompiled"><title>void __cdecl Output_DrawPoly_Gouraud(int32_t vtx_count, int32_t red, int32_t green, int32_t blue);</title></rect>
<rect width="12" height="12" x="165" y="15" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectG3_ZBuffered(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="12" height="12" x="180" y="15" class="decompiled"><title>void __cdecl Output_InsertFlatRect_ZBuffered(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t z, uint8_t color_idx);</title></rect>
<rect width="12" height="12" x="195" y="15" class="decompiled"><title>void __cdecl Output_InsertLine_ZBuffered(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t z, uint8_t color_idx);</title></rect>
<rect width="12" height="12" x="210" y="15" class="decompiled"><title>void __cdecl Output_InsertGT3_Sorted(const PHD_VBUF *vtx0, const PHD_VBUF *vtx1, const PHD_VBUF *vtx2, const PHD_TEXTURE *texture, const PHD_UV *uv0, const PHD_UV *uv1, const PHD_UV *uv2, SORT_TYPE sort_type);</title></rect>
<rect width="12" height="12" x="225" y="15" class="decompiled"><title>void __cdecl Output_InsertClippedPoly_Textured(int32_t vtx_count, float z, int16_t poly_type, int16_t tex_page);</title></rect>
<rect width="12" height="12" x="240" y="15" class="decompiled"><title>void __cdecl Output_InsertGT4_Sorted(const PHD_VBUF *vtx0, const PHD_VBUF *vtx1, const PHD_VBUF *vtx2, const PHD_VBUF *vtx3, const PHD_TEXTURE *texture, SORT_TYPE sort_type);</title></rect>
<rect width="12" height="12" x="255" y="15" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectGT4_Sorted(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="12" height="12" x="270" y="15" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectGT3_Sorted(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="12" height="12" x="285" y="15" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectG4_Sorted(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="12" height="12" x="300" y="15" class="decompiled"><title>void __cdecl Output_InsertPoly_Gouraud(int32_t vtx_count, float z, int32_t red, int32_t green, int32_t blue, int16_t poly_type);</title></rect>
<rect width="12" height="12" x="315" y="15" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectG3_Sorted(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="12" height="12" x="330" y="15" class="decompiled"><title>void __cdecl Output_InsertSprite_Sorted(int32_t z, int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t sprite_idx, int16_t shade);</title></rect>
<rect width="12" height="12" x="345" y="15" class="decompiled"><title>void __cdecl Output_InsertFlatRect_Sorted(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t z, uint8_t color_idx);</title></rect>
<rect width="12" height="12" x="360" y="15" class="decompiled"><title>void __cdecl Output_InsertLine_Sorted(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t z, uint8_t color_idx);</title></rect>
<rect width="12" height="12" x="375" y="15" class="decompiled"><title>void __cdecl Output_InsertTrans8_Sorted(const PHD_VBUF *vbuf, int16_t shade);</title></rect>
<rect width="12" height="12" x="390" y="15" class="decompiled"><title>void __cdecl Output_InsertTransQuad_Sorted(int32_t x, int32_t y, int32_t width, int32_t height, int32_t z);</title></rect>
<rect width="12" height="12" x="405" y="15" class="decompiled"><title>void __cdecl Output_InsertSprite(int32_t z, int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t sprite_idx, int16_t shade);</title></rect>
<rect width="12" height="12" x="420" y="15" class="decompiled"><title>void __cdecl Output_DrawSprite(uint32_t flags, int32_t x, int32_t y, int32_t z, int16_t sprite_idx, int16_t shade, int16_t scale);</title></rect>
<rect width="12" height="12" x="435" y="15" class="decompiled"><title>void __cdecl Output_DrawPickup(int32_t sx, int32_t sy, int32_t scale, int16_t sprite_idx, int16_t shade);</title></rect>
<rect width="12" height="12" x="450" y="15" class="decompiled"><title>const int16_t *__cdecl Output_InsertRoomSprite(const int16_t *obj_ptr, int32_t vtx_count);</title></rect>
<rect width="12" height="12" x="465" y="15" class="decompiled"><title>void __cdecl Output_DrawScreenSprite2D(int32_t sx, int32_t sy, int32_t sz, int32_t scale_h, int32_t scale_v, int16_t sprite_idx, int16_t shade, uint16_t flags);</title></rect>
<rect width="12" height="12" x="480" y="15" class="decompiled"><title>void __cdecl Output_DrawScreenSprite(int32_t sx, int32_t sy, int32_t sz, int32_t scale_h, int32_t scale_v, int16_t sprite_idx, int16_t shade, uint16_t flags);</title></rect>
<rect width="12" height="12" x="495" y="15" class="decompiled"><title>void __cdecl Output_DrawScaledSpriteC(const int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="510" y="15" class="decompiled"><title>void __cdecl Bird_Initialise(int16_t item_num);</title></rect>
<rect width="12" height="12" x="525" y="15" class="decompiled"><title>void __cdecl Bird_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="540" y="15" class="decompiled"><title>void __cdecl Boat_Initialise(int16_t item_num);</title></rect>
<rect width="12" height="12" x="555" y="15" class="decompiled"><title>int32_t __cdecl Boat_CheckGeton(int16_t item_num, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="570" y="15" class="decompiled"><title>void __cdecl Boat_Collision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="585" y="15" class="decompiled"><title>int32_t __cdecl Boat_TestWaterHeight(ITEM *item, int32_t z_off, int32_t x_off, XYZ_32 *pos);</title></rect>
<rect width="12" height="12" x="600" y="15" class="decompiled"><title>void __cdecl Boat_DoShift(int32_t boat_num);</title></rect>
<rect width="12" height="12" x="615" y="15" class="decompiled"><title>void __cdecl Boat_DoWakeEffect(ITEM *boat);</title></rect>
<rect width="12" height="12" x="630" y="15" class="decompiled"><title>int32_t __cdecl Boat_DoDynamics(int32_t height, int32_t fall_speed, int32_t *y);</title></rect>
<rect width="12" height="12" x="645" y="15" class="decompiled"><title>int32_t __cdecl Boat_Dynamics(int16_t boat_num);</title></rect>
<rect width="12" height="12" x="660" y="15" class="decompiled"><title>int32_t __cdecl Boat_UserControl(ITEM *boat);</title></rect>
<rect width="12" height="12" x="675" y="15" class="decompiled"><title>void __cdecl Boat_Animation(ITEM *boat, int32_t collide);</title></rect>
<rect width="12" height="12" x="690" y="15" class="decompiled"><title>void __cdecl Boat_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="705" y="15" class="decompiled"><title>void __cdecl Gondola_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="720" y="15" class="decompiled"><title>void __cdecl Creature_Initialise(int16_t item_num);</title></rect>
<rect width="12" height="12" x="735" y="15" class="decompiled"><title>int32_t __cdecl Creature_Activate(int16_t item_num);</title></rect>
<rect width="12" height="12" x="0" y="30" class="decompiled"><title>void __cdecl Creature_AIInfo(ITEM *item, AI_INFO *info);</title></rect>
<rect width="12" height="12" x="15" y="30" class="decompiled"><title>int32_t __cdecl Box_SearchLOT(LOT_INFO *lot, int32_t expansion);</title></rect>
<rect width="12" height="12" x="30" y="30" class="decompiled"><title>int32_t __cdecl Box_UpdateLOT(LOT_INFO *lot, int32_t expansion);</title></rect>
<rect width="12" height="12" x="45" y="30" class="decompiled"><title>void __cdecl Box_TargetBox(LOT_INFO *lot, int16_t box_num);</title></rect>
<rect width="12" height="12" x="60" y="30" class="decompiled"><title>int32_t __cdecl Box_StalkBox(const ITEM *item, const ITEM *enemy, int16_t box_num);</title></rect>
<rect width="12" height="12" x="75" y="30" class="decompiled"><title>int32_t __cdecl Box_EscapeBox(const ITEM *item, const ITEM *enemy, int16_t box_num);</title></rect>
<rect width="12" height="12" x="90" y="30" class="decompiled"><title>int32_t __cdecl Box_ValidBox(const ITEM *item, int16_t zone_num, int16_t box_num);</title></rect>
<rect width="12" height="12" x="105" y="30" class="decompiled"><title>void __cdecl Creature_Mood(ITEM *item, AI_INFO *info, int32_t violent);</title></rect>
<rect width="12" height="12" x="120" y="30" class="decompiled"><title>TARGET_TYPE __cdecl Box_CalculateTarget(XYZ_32 *target, ITEM *item, LOT_INFO *lot);</title></rect>
<rect width="12" height="12" x="135" y="30" class="decompiled"><title>int32_t __cdecl Creature_CheckBaddieOverlap(int16_t item_num);</title></rect>
<rect width="12" height="12" x="150" y="30" class="decompiled"><title>int32_t __cdecl Box_BadFloor(int32_t x, int32_t y, int32_t z, int32_t box_height, int32_t next_height, int16_t room_num, LOT_INFO *lot);</title></rect>
<rect width="12" height="12" x="165" y="30" class="decompiled"><title>void __cdecl Creature_Die(int16_t item_num, int32_t explode);</title></rect>
<rect width="12" height="12" x="180" y="30" class="decompiled"><title>int32_t __cdecl Creature_Animate(int16_t item_num, int16_t angle, int16_t tilt);</title></rect>
<rect width="12" height="12" x="195" y="30" class="decompiled"><title>int16_t __cdecl Creature_Turn(ITEM *item, int16_t maximum_turn);</title></rect>
<rect width="12" height="12" x="210" y="30" class="decompiled"><title>void __cdecl Creature_Tilt(ITEM *item, int16_t angle);</title></rect>
<rect width="12" height="12" x="225" y="30" class="decompiled"><title>void __cdecl Creature_Head(ITEM *item, int16_t required);</title></rect>
<rect width="12" height="12" x="240" y="30" class="decompiled"><title>void __cdecl Creature_Neck(ITEM *item, int16_t required);</title></rect>
<rect width="12" height="12" x="255" y="30" class="decompiled"><title>void __cdecl Creature_Float(int16_t item_num);</title></rect>
<rect width="12" height="12" x="270" y="30" class="decompiled"><title>void __cdecl Creature_Underwater(ITEM *item, int32_t depth);</title></rect>
<rect width="12" height="12" x="285" y="30" class="decompiled"><title>int16_t __cdecl Creature_Effect(ITEM *item, BITE *bite, int16_t (*__cdecl spawn)(int32_t x, int32_t y, int32_t z, int16_t speed, int16_t y_rot, int16_t room_num));</title></rect>
<rect width="12" height="12" x="300" y="30" class="decompiled"><title>int32_t __cdecl Creature_Vault(int16_t item_num, int16_t angle, int32_t vault, int32_t shift);</title></rect>
<rect width="12" height="12" x="315" y="30" class="decompiled"><title>void __cdecl Creature_Kill(ITEM *item, int32_t kill_anim, int32_t kill_state, int32_t lara_kill_state);</title></rect>
<rect width="12" height="12" x="330" y="30" class="decompiled"><title>void __cdecl Creature_GetBaddieTarget(int16_t item_num, int32_t goody);</title></rect>
<rect width="12" height="12" x="345" y="30" class="decompiled"><title>void __cdecl Camera_Initialise(void);</title></rect>
<rect width="12" height="12" x="360" y="30" class="decompiled"><title>void __cdecl Camera_Move(const GAME_VECTOR *target, int32_t speed);</title></rect>
<rect width="12" height="12" x="375" y="30" class="decompiled"><title>void __cdecl Camera_Clip(int32_t *x, int32_t *y, int32_t *h, int32_t target_x, int32_t target_y, int32_t target_h, int32_t left, int32_t top, int32_t right, int32_t bottom);</title></rect>
<rect width="12" height="12" x="390" y="30" class="decompiled"><title>void __cdecl Camera_Shift(int32_t *x, int32_t *y, int32_t *h, int32_t target_x, int32_t target_y, int32_t target_h, int32_t left, int32_t top, int32_t right, int32_t bottom);</title></rect>
<rect width="12" height="12" x="405" y="30" class="decompiled"><title>const SECTOR *__cdecl Camera_GoodPosition(int32_t x, int32_t y, int32_t z, int16_t room_num);</title></rect>
<rect width="12" height="12" x="420" y="30" class="decompiled"><title>void __cdecl Camera_SmartShift(GAME_VECTOR *target, void (*__cdecl shift)(int32_t *x, int32_t *y, int32_t *h, int32_t target_x, int32_t target_y, int32_t target_h, int32_t left, int32_t top, int32_t right, int32_t bottom));</title></rect>
<rect width="12" height="12" x="435" y="30" class="decompiled"><title>void __cdecl Camera_Chase(const ITEM *item);</title></rect>
<rect width="12" height="12" x="450" y="30" class="decompiled"><title>int32_t __cdecl Camera_ShiftClamp(GAME_VECTOR *pos, int32_t clamp);</title></rect>
<rect width="12" height="12" x="465" y="30" class="decompiled"><title>void __cdecl Camera_Combat(const ITEM *item);</title></rect>
<rect width="12" height="12" x="480" y="30" class="decompiled"><title>void __cdecl Camera_Look(const ITEM *item);</title></rect>
<rect width="12" height="12" x="495" y="30" class="decompiled"><title>void __cdecl Camera_Fixed(void);</title></rect>
<rect width="12" height="12" x="510" y="30" class="decompiled"><title>void __cdecl Camera_Update(void);</title></rect>
<rect width="12" height="12" x="525" y="30" class="decompiled"><title>void __cdecl Game_SetCutsceneTrack(int32_t track);</title></rect>
<rect width="12" height="12" x="540" y="30" class="decompiled"><title>int32_t __cdecl Game_Cutscene_Start(int32_t level_num);</title></rect>
<rect width="12" height="12" x="555" y="30" class="decompiled"><title>void __cdecl Misc_InitCinematicRooms(void);</title></rect>
<rect width="12" height="12" x="570" y="30" class="decompiled"><title>int32_t __cdecl Game_Cutscene_Control(int32_t nframes);</title></rect>
<rect width="12" height="12" x="585" y="30" class="decompiled"><title>void __cdecl Camera_UpdateCutscene(void);</title></rect>
<rect width="12" height="12" x="600" y="30" class="decompiled"><title>int32_t __cdecl Room_FindByPos(int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="12" height="12" x="615" y="30" class="decompiled"><title>void __cdecl CutscenePlayer_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="630" y="30" class="decompiled"><title>void __cdecl Lara_Control_Cutscene(int16_t item_num);</title></rect>
<rect width="12" height="12" x="645" y="30" class="decompiled"><title>void __cdecl CutscenePlayer1_Initialise(int16_t item_num);</title></rect>
<rect width="12" height="12" x="660" y="30" class="decompiled"><title>void __cdecl CutscenePlayerGen_Initialise(int16_t item_num);</title></rect>
<rect width="12" height="12" x="675" y="30" class="decompiled"><title>void __cdecl Camera_LoadCutsceneFrame(void);</title></rect>
<rect width="12" height="12" x="690" y="30" class="decompiled"><title>void __cdecl Collide_GetCollisionInfo(COLL_INFO *coll, int32_t xpos, int32_t ypos, int32_t zpos, int16_t room_num, int32_t obj_height);</title></rect>
<rect width="12" height="12" x="705" y="30" class="decompiled"><title>int32_t __cdecl Room_FindGridShift(int32_t src, int32_t dst);</title></rect>
<rect width="12" height="12" x="720" y="30" class="decompiled"><title>int32_t __cdecl Collide_CollideStaticObjects(COLL_INFO *coll, int32_t x, int32_t y, int32_t z, int16_t room_num, int32_t height);</title></rect>
<rect width="12" height="12" x="735" y="30" class="decompiled"><title>void __cdecl Room_GetNearbyRooms(int32_t x, int32_t y, int32_t z, int32_t r, int32_t h, int16_t room_num);</title></rect>
<rect width="12" height="12" x="0" y="45" class="decompiled"><title>void __cdecl Room_GetNewRoom(int32_t x, int32_t y, int32_t z, int16_t room_num);</title></rect>
<rect width="12" height="12" x="15" y="45" class="decompiled"><title>void __cdecl Item_ShiftCol(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="30" y="45" class="decompiled"><title>void __cdecl Item_UpdateRoom(ITEM *item, int32_t height);</title></rect>
<rect width="12" height="12" x="45" y="45" class="decompiled"><title>int16_t __cdecl Room_GetTiltType(const SECTOR *sector, int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="12" height="12" x="60" y="45" class="decompiled"><title>void __cdecl Lara_BaddieCollision(ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="75" y="45" class="decompiled"><title>void __cdecl Lara_TakeHit(ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="90" y="45" class="decompiled"><title>void __cdecl Creature_Collision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="105" y="45" class="decompiled"><title>void __cdecl Object_Collision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="120" y="45" class="decompiled"><title>void __cdecl Door_Collision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="135" y="45" class="decompiled"><title>void __cdecl Object_Collision_Trap(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="150" y="45" class="decompiled"><title>void __cdecl Lara_Push(ITEM *item, ITEM *lara_item, COLL_INFO *coll, int32_t spaz_on, int32_t big_push);</title></rect>
<rect width="12" height="12" x="165" y="45" class="decompiled"><title>int32_t __cdecl Item_TestBoundsCollide(const ITEM *src_item, const ITEM *dst_item, int32_t radius);</title></rect>
<rect width="12" height="12" x="180" y="45" class="decompiled"><title>int32_t __cdecl Item_TestPosition(int16_t *bounds, ITEM *src_item, ITEM *dst_item);</title></rect>
<rect width="12" height="12" x="195" y="45" class="decompiled"><title>void __cdecl Item_AlignPosition(XYZ_32 *vec, ITEM *src_item, ITEM *dst_item);</title></rect>
<rect width="12" height="12" x="210" y="45" class="decompiled"><title>int32_t __cdecl Lara_MovePosition(XYZ_32 *vec, ITEM *item, ITEM *lara_item);</title></rect>
<rect width="12" height="12" x="225" y="45" class="decompiled"><title>int32_t __cdecl Misc_Move3DPosTo3DPos(PHD_3DPOS *src_pos, const PHD_3DPOS *dest_pos, int32_t velocity, PHD_ANGLE ang_add);</title></rect>
<rect width="12" height="12" x="240" y="45" class="decompiled"><title>int32_t __cdecl Game_Control(int32_t nframes, int32_t demo_mode);</title></rect>
<rect width="12" height="12" x="255" y="45" class="decompiled"><title>void __cdecl Item_Animate(ITEM *item);</title></rect>
<rect width="12" height="12" x="270" y="45" class="decompiled"><title>int32_t __cdecl Item_GetAnimChange(ITEM *item, const ANIM *anim);</title></rect>
<rect width="12" height="12" x="285" y="45" class="decompiled"><title>void __cdecl Item_Translate(ITEM *item, int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="12" height="12" x="300" y="45" class="decompiled"><title>SECTOR *__cdecl Room_GetSector(int32_t x, int32_t y, int32_t z, int16_t *room_num);</title></rect>
<rect width="12" height="12" x="315" y="45" class="decompiled"><title>int32_t __cdecl Room_GetWaterHeight(int32_t x, int32_t y, int32_t z, int16_t room_num);</title></rect>
<rect width="12" height="12" x="330" y="45" class="decompiled"><title>int32_t __cdecl Room_GetHeight(const SECTOR *sector, int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="12" height="12" x="345" y="45" class="decompiled"><title>void __cdecl Camera_RefreshFromTrigger(int16_t type, const int16_t *data);</title></rect>
<rect width="12" height="12" x="360" y="45" class="decompiled"><title>void __cdecl Room_TestTriggers(int16_t *data, int32_t heavy);</title></rect>
<rect width="12" height="12" x="375" y="45" class="decompiled"><title>int32_t __cdecl Item_IsTriggerActive(ITEM *item);</title></rect>
<rect width="12" height="12" x="390" y="45" class="decompiled"><title>int32_t __cdecl Room_GetCeiling(const SECTOR *sector, int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="12" height="12" x="405" y="45" class="decompiled"><title>int16_t __cdecl Room_GetDoor(const SECTOR *sector);</title></rect>
<rect width="12" height="12" x="420" y="45" class="decompiled"><title>int32_t __cdecl LOS_Check(const GAME_VECTOR *start, GAME_VECTOR *target);</title></rect>
<rect width="12" height="12" x="435" y="45" class="decompiled"><title>int32_t __cdecl LOS_CheckZ(const GAME_VECTOR *start, GAME_VECTOR *target);</title></rect>
<rect width="12" height="12" x="450" y="45" class="decompiled"><title>int32_t __cdecl LOS_CheckX(const GAME_VECTOR *start, GAME_VECTOR *target);</title></rect>
<rect width="12" height="12" x="465" y="45" class="decompiled"><title>int32_t __cdecl LOS_ClipTarget(const GAME_VECTOR *start, GAME_VECTOR *target, const SECTOR *sector);</title></rect>
<rect width="12" height="12" x="480" y="45" class="decompiled"><title>int32_t __cdecl LOS_CheckSmashable(const GAME_VECTOR *start, GAME_VECTOR *target);</title></rect>
<rect width="12" height="12" x="495" y="45" class="decompiled"><title>void __cdecl Room_FlipMap(void);</title></rect>
<rect width="12" height="12" x="510" y="45" class="decompiled"><title>void __cdecl Room_RemoveFlipItems(ROOM *r);</title></rect>
<rect width="12" height="12" x="525" y="45" class="decompiled"><title>void __cdecl Room_AddFlipItems(ROOM *r);</title></rect>
<rect width="12" height="12" x="540" y="45" class="decompiled"><title>void __cdecl Room_TriggerMusicTrack(int16_t value, int16_t flags, int16_t type);</title></rect>
<rect width="12" height="12" x="555" y="45" class="decompiled"><title>void __cdecl Room_TriggerMusicTrackImpl(int16_t value, int16_t flags, int16_t type);</title></rect>
<rect width="12" height="12" x="570" y="45" class="decompiled"><title>int32_t __cdecl Demo_Control(int32_t level_num);</title></rect>
<rect width="12" height="12" x="585" y="45" class="decompiled"><title>int32_t __cdecl Demo_Start(int32_t level_num);</title></rect>
<rect width="12" height="12" x="600" y="45" class="decompiled"><title>void __cdecl Demo_LoadLaraPos(void);</title></rect>
<rect width="12" height="12" x="615" y="45" class="decompiled"><title>void __cdecl Demo_GetInput(void);</title></rect>
<rect width="12" height="12" x="630" y="45" class="known"><title>int16_t __cdecl Diver_Harpoon(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE y_rot, int16_t room_num);</title></rect>
<rect width="12" height="12" x="645" y="45" class="known"><title>int32_t __cdecl Diver_GetWaterSurface(int32_t x, int32_t y, int32_t z, int16_t room_num);</title></rect>
<rect width="12" height="12" x="660" y="45" class="decompiled"><title>void __cdecl Diver_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="675" y="45" class="known"><title>void __cdecl Dog_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="690" y="45" class="known"><title>void __cdecl Tiger_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="705" y="45" class="known"><title>void __cdecl ControlTwinkle(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="720" y="45" class="known"><title>void __cdecl CreateBartoliLight(int16_t item_num);</title></rect>
<rect width="12" height="12" x="735" y="45" class="decompiled"><title>int16_t __cdecl Effect_MissileFlame(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE yrot, int16_t room_num);</title></rect>
<rect width="12" height="12" x="0" y="60" class="decompiled"><title>void __cdecl Dragon_Collision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="15" y="60" class="decompiled"><title>void __cdecl Dragon_Bones(int16_t item_num);</title></rect>
<rect width="12" height="12" x="30" y="60" class="known"><title>void __cdecl DragonControl(int16_t back_num);</title></rect>
<rect width="12" height="12" x="45" y="60" class="known"><title>void __cdecl InitialiseBartoli(int16_t item_num);</title></rect>
<rect width="12" height="12" x="60" y="60" class="known"><title>void __cdecl BartoliControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="75" y="60" class="known"><title>void __cdecl DinoControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="90" y="60" class="decompiled"><title>int32_t __cdecl Game_DrawCinematic(void);</title></rect>
<rect width="12" height="12" x="105" y="60" class="decompiled"><title>int32_t __cdecl Game_Draw(void);</title></rect>
<rect width="12" height="12" x="120" y="60" class="decompiled"><title>void __cdecl Room_DrawAllRooms(int16_t current_room);</title></rect>
<rect width="12" height="12" x="135" y="60" class="decompiled"><title>void __cdecl Room_GetBounds(void);</title></rect>
<rect width="12" height="12" x="150" y="60" class="decompiled"><title>void __cdecl Room_SetBounds(const int16_t *objptr, int32_t room_num, ROOM *parent);</title></rect>
<rect width="12" height="12" x="165" y="60" class="decompiled"><title>void __cdecl Room_Clip(ROOM *r);</title></rect>
<rect width="12" height="12" x="180" y="60" class="decompiled"><title>void __cdecl Room_DrawSingleRoomGeometry(int16_t room_num);</title></rect>
<rect width="12" height="12" x="195" y="60" class="decompiled"><title>void __cdecl Room_DrawSingleRoomObjects(int16_t room_num);</title></rect>
<rect width="12" height="12" x="210" y="60" class="decompiled"><title>void __cdecl Effect_Draw(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="225" y="60" class="known"><title>void __cdecl Object_DrawSpriteItem(ITEM *item);</title></rect>
<rect width="12" height="12" x="240" y="60" class="known"><title>void __cdecl Object_DrawAnimatingItem(ITEM *item);</title></rect>
<rect width="12" height="12" x="255" y="60" class="decompiled"><title>void __cdecl Lara_Draw(const ITEM *item);</title></rect>
<rect width="12" height="12" x="270" y="60" class="decompiled"><title>void __cdecl Lara_Draw_I(const ITEM *item, const FRAME_INFO *frame1, const FRAME_INFO *frame2, int32_t frac, int32_t rate);</title></rect>
<rect width="12" height="12" x="285" y="60" class="decompiled"><title>void __cdecl Matrix_InitInterpolate(int32_t frac, int32_t rate);</title></rect>
<rect width="12" height="12" x="300" y="60" class="decompiled"><title>void __cdecl Matrix_Pop_I(void);</title></rect>
<rect width="12" height="12" x="315" y="60" class="decompiled"><title>void __cdecl Matrix_Push_I(void);</title></rect>
<rect width="12" height="12" x="330" y="60" class="decompiled"><title>void __cdecl Matrix_RotY_I(int16_t ang);</title></rect>
<rect width="12" height="12" x="345" y="60" class="decompiled"><title>void __cdecl Matrix_RotX_I(int16_t ang);</title></rect>
<rect width="12" height="12" x="360" y="60" class="decompiled"><title>void __cdecl Matrix_RotZ_I(int16_t ang);</title></rect>
<rect width="12" height="12" x="375" y="60" class="decompiled"><title>void __cdecl Matrix_TranslateRel_I(int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="12" height="12" x="390" y="60" class="decompiled"><title>void __cdecl Matrix_TranslateRel_ID(int32_t x, int32_t y, int32_t z, int32_t x2, int32_t y2, int32_t z2);</title></rect>
<rect width="12" height="12" x="405" y="60" class="decompiled"><title>void __cdecl Matrix_RotYXZ_I(int16_t y, int16_t x, int16_t z);</title></rect>
<rect width="12" height="12" x="420" y="60" class="decompiled"><title>void __cdecl Matrix_RotYXZsuperpack_I(const int16_t **pprot1, const int16_t **pprot2, int32_t skip);</title></rect>
<rect width="12" height="12" x="435" y="60" class="decompiled"><title>void __cdecl Matrix_RotYXZsuperpack(const int16_t **pprot, int32_t skip);</title></rect>
<rect width="12" height="12" x="450" y="60" class="decompiled"><title>void __cdecl Output_InsertPolygons_I(int16_t *ptr, int32_t clip);</title></rect>
<rect width="12" height="12" x="465" y="60" class="decompiled"><title>void __cdecl Matrix_Interpolate(void);</title></rect>
<rect width="12" height="12" x="480" y="60" class="decompiled"><title>void __cdecl Matrix_InterpolateArm(void);</title></rect>
<rect width="12" height="12" x="495" y="60" class="known"><title>void __cdecl Gun_DrawFlash(LARA_GUN_TYPE weapon_type, int32_t clip);</title></rect>
<rect width="12" height="12" x="510" y="60" class="known"><title>void __cdecl Output_CalculateObjectLighting(const ITEM *item, const FRAME_INFO *frame);</title></rect>
<rect width="12" height="12" x="525" y="60" class="decompiled"><title>int32_t __cdecl Item_GetFrames(const ITEM *item, FRAME_INFO *frmptr[], int32_t *rate);</title></rect>
<rect width="12" height="12" x="540" y="60" class="decompiled"><title>BOUNDS_16 *__cdecl Item_GetBoundsAccurate(const ITEM *item);</title></rect>
<rect width="12" height="12" x="555" y="60" class="decompiled"><title>FRAME_INFO *__cdecl Item_GetBestFrame(const ITEM *item);</title></rect>
<rect width="12" height="12" x="570" y="60" class="known"><title>void __cdecl AddDynamicLight(int32_t x, int32_t y, int32_t z, int32_t intensity, int32_t falloff);</title></rect>
<rect width="12" height="12" x="585" y="60" class="known"><title>void __cdecl BigEelControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="600" y="60" class="known"><title>void __cdecl EelControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="615" y="60" class="decompiled"><title>int32_t __cdecl Lara_IsNearItem(PHD_3DPOS *pos, int32_t distance);</title></rect>
<rect width="12" height="12" x="630" y="60" class="decompiled"><title>void __cdecl Sound_UpdateEffects(void);</title></rect>
<rect width="12" height="12" x="645" y="60" class="known"><title>int16_t __cdecl DoBloodSplat(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE direction, int16_t room_num);</title></rect>
<rect width="12" height="12" x="660" y="60" class="known"><title>void __cdecl DoLotsOfBlood(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE direction, int16_t room_num, int32_t num);</title></rect>
<rect width="12" height="12" x="675" y="60" class="known"><title>void __cdecl ControlBlood1(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="690" y="60" class="known"><title>void __cdecl ControlExplosion1(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="705" y="60" class="known"><title>void __cdecl Richochet(GAME_VECTOR *pos);</title></rect>
<rect width="12" height="12" x="720" y="60" class="known"><title>void __cdecl ControlRichochet1(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="735" y="60" class="known"><title>void __cdecl CreateBubble(PHD_3DPOS *pos, int16_t room_num);</title></rect>
<rect width="12" height="12" x="0" y="75" class="known"><title>void __cdecl LaraBubbles(ITEM *item);</title></rect>
<rect width="12" height="12" x="15" y="75" class="known"><title>void __cdecl ControlBubble1(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="30" y="75" class="known"><title>void __cdecl Splash(ITEM *item);</title></rect>
<rect width="12" height="12" x="45" y="75" class="known"><title>void __cdecl ControlSplash1(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="60" y="75" class="known"><title>void __cdecl ControlWaterSprite(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="75" y="75" class="known"><title>void __cdecl ControlSnowSprite(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="90" y="75" class="known"><title>void __cdecl ControlHotLiquid(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="105" y="75" class="known"><title>void __cdecl WaterFall(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="120" y="75" class="known"><title>void __cdecl finish_level_effect(ITEM *item);</title></rect>
<rect width="12" height="12" x="135" y="75" class="known"><title>void __cdecl turn180_effect(ITEM *item);</title></rect>
<rect width="12" height="12" x="150" y="75" class="known"><title>void __cdecl floor_shake_effect(ITEM *item);</title></rect>
<rect width="12" height="12" x="165" y="75" class="known"><title>void __cdecl lara_normal_effect(ITEM *item);</title></rect>
<rect width="12" height="12" x="180" y="75" class="known"><title>void __cdecl BoilerFX(ITEM *item);</title></rect>
<rect width="12" height="12" x="195" y="75" class="known"><title>void __cdecl FloodFX(ITEM *item);</title></rect>
<rect width="12" height="12" x="210" y="75" class="known"><title>void __cdecl RubbleFX(ITEM *item);</title></rect>
<rect width="12" height="12" x="225" y="75" class="known"><title>void __cdecl ChandelierFX(ITEM *item);</title></rect>
<rect width="12" height="12" x="240" y="75" class="known"><title>void __cdecl ExplosionFX(ITEM *item);</title></rect>
<rect width="12" height="12" x="255" y="75" class="known"><title>void __cdecl PistonFX(ITEM *item);</title></rect>
<rect width="12" height="12" x="270" y="75" class="known"><title>void __cdecl CurtainFX(ITEM *item);</title></rect>
<rect width="12" height="12" x="285" y="75" class="known"><title>void __cdecl StatueFX(ITEM *item);</title></rect>
<rect width="12" height="12" x="300" y="75" class="known"><title>void __cdecl SetChangeFX(ITEM *item);</title></rect>
<rect width="12" height="12" x="315" y="75" class="known"><title>void __cdecl ControlDingDong(int16_t item_num);</title></rect>
<rect width="12" height="12" x="330" y="75" class="known"><title>void __cdecl ControlLaraAlarm(int16_t item_num);</title></rect>
<rect width="12" height="12" x="345" y="75" class="known"><title>void __cdecl ControlAlarmSound(int16_t item_num);</title></rect>
<rect width="12" height="12" x="360" y="75" class="known"><title>void __cdecl ControlBirdTweeter(int16_t item_num);</title></rect>
<rect width="12" height="12" x="375" y="75" class="known"><title>void __cdecl DoChimeSound(ITEM *item);</title></rect>
<rect width="12" height="12" x="390" y="75" class="known"><title>void __cdecl ControlClockChimes(int16_t item_num);</title></rect>
<rect width="12" height="12" x="405" y="75" class="known"><title>void __cdecl SphereOfDoomCollision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="420" y="75" class="known"><title>void __cdecl SphereOfDoom(int16_t item_num);</title></rect>
<rect width="12" height="12" x="435" y="75" class="known"><title>void __cdecl DrawSphereOfDoom(ITEM *item);</title></rect>
<rect width="12" height="12" x="450" y="75" class="known"><title>void __cdecl lara_hands_free(ITEM *item);</title></rect>
<rect width="12" height="12" x="465" y="75" class="known"><title>void __cdecl flip_map_effect(ITEM *item);</title></rect>
<rect width="12" height="12" x="480" y="75" class="known"><title>void __cdecl draw_right_gun(ITEM *item);</title></rect>
<rect width="12" height="12" x="495" y="75" class="known"><title>void __cdecl draw_left_gun(ITEM *item);</title></rect>
<rect width="12" height="12" x="510" y="75" class="known"><title>void __cdecl swap_meshes_with_meshswap1(ITEM *item);</title></rect>
<rect width="12" height="12" x="525" y="75" class="known"><title>void __cdecl swap_meshes_with_meshswap2(ITEM *item);</title></rect>
<rect width="12" height="12" x="540" y="75" class="known"><title>void __cdecl swap_meshes_with_meshswap3(ITEM *item);</title></rect>
<rect width="12" height="12" x="555" y="75" class="known"><title>void __cdecl invisibility_on(ITEM *item);</title></rect>
<rect width="12" height="12" x="570" y="75" class="known"><title>void __cdecl invisibility_off(ITEM *item);</title></rect>
<rect width="12" height="12" x="585" y="75" class="known"><title>void __cdecl dynamic_light_on(ITEM *item);</title></rect>
<rect width="12" height="12" x="600" y="75" class="known"><title>void __cdecl dynamic_light_off(ITEM *item);</title></rect>
<rect width="12" height="12" x="615" y="75" class="known"><title>void __cdecl reset_hair(ITEM *item);</title></rect>
<rect width="12" height="12" x="630" y="75" class="known"><title>void __cdecl AssaultStart(ITEM *item);</title></rect>
<rect width="12" height="12" x="645" y="75" class="known"><title>void __cdecl AssaultStop(ITEM *item);</title></rect>
<rect width="12" height="12" x="660" y="75" class="known"><title>void __cdecl AssaultReset(ITEM *item);</title></rect>
<rect width="12" height="12" x="675" y="75" class="known"><title>void __cdecl AssaultFinished(ITEM *item);</title></rect>
<rect width="12" height="12" x="690" y="75" class="known"><title>int16_t __cdecl Knife(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE yrot, int16_t room_num);</title></rect>
<rect width="12" height="12" x="705" y="75" class="known"><title>void __cdecl Cult2Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="720" y="75" class="known"><title>void __cdecl MonkControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="735" y="75" class="known"><title>void __cdecl Worker3Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="0" y="90" class="known"><title>void __cdecl DrawXianLord(ITEM *item);</title></rect>
<rect width="12" height="12" x="15" y="90" class="known"><title>void __cdecl XianDamage(ITEM *item, CREATURE *xian, int32_t damage);</title></rect>
<rect width="12" height="12" x="30" y="90" class="known"><title>void __cdecl InitialiseXianLord(int16_t item_num);</title></rect>
<rect width="12" height="12" x="45" y="90" class="known"><title>void __cdecl XianLordControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="60" y="90" class="known"><title>void __cdecl WarriorSparkleTrail(ITEM *item);</title></rect>
<rect width="12" height="12" x="75" y="90" class="known"><title>void __cdecl WarriorControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="90" y="90" class="decompiled"><title>int32_t __cdecl GF_LoadScriptFile(const char *fname);</title></rect>
<rect width="12" height="12" x="105" y="90" class="decompiled"><title>int32_t __cdecl GF_DoFrontendSequence(void);</title></rect>
<rect width="12" height="12" x="120" y="90" class="decompiled"><title>int32_t __cdecl GF_DoLevelSequence(int32_t level, GAMEFLOW_LEVEL_TYPE type);</title></rect>
<rect width="12" height="12" x="135" y="90" class="decompiled"><title>int32_t __cdecl GF_InterpretSequence(int16_t *ptr, GAMEFLOW_LEVEL_TYPE type, int32_t seq_type);</title></rect>
<rect width="12" height="12" x="150" y="90" class="decompiled"><title>void __cdecl GF_ModifyInventory(int32_t level, int32_t type);</title></rect>
<rect width="12" height="12" x="165" y="90" class="known"><title>void __cdecl InitialiseHair(void);</title></rect>
<rect width="12" height="12" x="180" y="90" class="known"><title>void __cdecl HairControl(int32_t in_cutscene);</title></rect>
<rect width="12" height="12" x="195" y="90" class="known"><title>void __cdecl DrawHair(void);</title></rect>
<rect width="12" height="12" x="210" y="90" class="decompiled"><title>BOOL __cdecl Overlay_FlashCounter(void);</title></rect>
<rect width="12" height="12" x="225" y="90" class="decompiled"><title>void __cdecl Overlay_DrawAssaultTimer(void);</title></rect>
<rect width="12" height="12" x="240" y="90" class="decompiled"><title>void __cdecl Overlay_DrawGameInfo(bool pickup_state);</title></rect>
<rect width="12" height="12" x="255" y="90" class="decompiled"><title>void __cdecl Overlay_DrawHealthBar(bool flash_state);</title></rect>
<rect width="12" height="12" x="270" y="90" class="decompiled"><title>void __cdecl Overlay_DrawAirBar(bool flash_state);</title></rect>
<rect width="12" height="12" x="285" y="90" class="decompiled"><title>void __cdecl Overlay_MakeAmmoString(char *string);</title></rect>
<rect width="12" height="12" x="300" y="90" class="decompiled"><title>void __cdecl Overlay_DrawAmmoInfo(void);</title></rect>
<rect width="12" height="12" x="315" y="90" class="decompiled"><title>void __cdecl Overlay_InitialisePickUpDisplay(void);</title></rect>
<rect width="12" height="12" x="330" y="90" class="decompiled"><title>void __cdecl Overlay_DrawPickups(bool pickup_state);</title></rect>
<rect width="12" height="12" x="345" y="90" class="decompiled"><title>void __cdecl Overlay_AddDisplayPickup(GAME_OBJECT_ID object_id);</title></rect>
<rect width="12" height="12" x="360" y="90" class="decompiled"><title>void __cdecl Overlay_DisplayModeInfo(char* string);</title></rect>
<rect width="12" height="12" x="375" y="90" class="decompiled"><title>void __cdecl Overlay_DrawModeInfo(void);</title></rect>
<rect width="12" height="12" x="390" y="90" class="decompiled"><title>int32_t __cdecl Inv_Display(int32_t inventory_mode);</title></rect>
<rect width="12" height="12" x="405" y="90" class="decompiled"><title>void __cdecl Inv_Construct(void);</title></rect>
<rect width="12" height="12" x="420" y="90" class="decompiled"><title>void __cdecl Inv_SelectMeshes(INVENTORY_ITEM *inv_item);</title></rect>
<rect width="12" height="12" x="435" y="90" class="decompiled"><title>int32_t __cdecl Inv_AnimateInventoryItem(INVENTORY_ITEM *inv_item);</title></rect>
<rect width="12" height="12" x="450" y="90" class="decompiled"><title>void __cdecl Inv_DrawInventoryItem(INVENTORY_ITEM *inv_item);</title></rect>
<rect width="12" height="12" x="465" y="90" class="decompiled"><title>int32_t __cdecl Input_GetDebounced(int32_t input);</title></rect>
<rect width="12" height="12" x="480" y="90" class="decompiled"><title>void __cdecl Inv_DoInventoryPicture(void);</title></rect>
<rect width="12" height="12" x="495" y="90" class="decompiled"><title>void __cdecl Inv_DoInventoryBackground(void);</title></rect>
<rect width="12" height="12" x="510" y="90" class="decompiled"><title>void __cdecl Inv_InitColors(void);</title></rect>
<rect width="12" height="12" x="525" y="90" class="decompiled"><title>void __cdecl Inv_RingIsOpen(RING_INFO *ring);</title></rect>
<rect width="12" height="12" x="540" y="90" class="decompiled"><title>void __cdecl Inv_RingIsNotOpen(RING_INFO *ring);</title></rect>
<rect width="12" height="12" x="555" y="90" class="decompiled"><title>void __cdecl Inv_RingNotActive(INVENTORY_ITEM *inv_item);</title></rect>
<rect width="12" height="12" x="570" y="90" class="decompiled"><title>void __cdecl Inv_RingActive(void);</title></rect>
<rect width="12" height="12" x="585" y="90" class="decompiled"><title>int32_t __cdecl Inv_AddItem(GAME_OBJECT_ID object_id);</title></rect>
<rect width="12" height="12" x="600" y="90" class="decompiled"><title>void __cdecl Inv_InsertItem(INVENTORY_ITEM *inv_item);</title></rect>
<rect width="12" height="12" x="615" y="90" class="decompiled"><title>int32_t __cdecl Inv_RequestItem(GAME_OBJECT_ID object_id);</title></rect>
<rect width="12" height="12" x="630" y="90" class="decompiled"><title>void __cdecl Inv_RemoveAllItems(void);</title></rect>
<rect width="12" height="12" x="645" y="90" class="decompiled"><title>int32_t __cdecl Inv_RemoveItem(GAME_OBJECT_ID object_id);</title></rect>
<rect width="12" height="12" x="660" y="90" class="decompiled"><title>int32_t __cdecl Inv_GetItemOption(GAME_OBJECT_ID object_id);</title></rect>
<rect width="12" height="12" x="675" y="90" class="decompiled"><title>void __cdecl Inv_RemoveInventoryText(void);</title></rect>
<rect width="12" height="12" x="690" y="90" class="decompiled"><title>void __cdecl Inv_Ring_Init(RING_INFO *ring, int16_t type, INVENTORY_ITEM **list, int16_t qty, int16_t current, IMOTION_INFO *imo);</title></rect>
<rect width="12" height="12" x="705" y="90" class="decompiled"><title>void __cdecl Inv_Ring_GetView(RING_INFO *ring, PHD_3DPOS *viewer);</title></rect>
<rect width="12" height="12" x="720" y="90" class="decompiled"><title>void __cdecl Inv_Ring_Light(RING_INFO *ring);</title></rect>
<rect width="12" height="12" x="735" y="90" class="decompiled"><title>void __cdecl Inv_Ring_CalcAdders(RING_INFO *ring, int16_t rotation_duration);</title></rect>
<rect width="12" height="12" x="0" y="105" class="decompiled"><title>void __cdecl Inv_Ring_DoMotions(RING_INFO *ring);</title></rect>
<rect width="12" height="12" x="15" y="105" class="decompiled"><title>void __cdecl Inv_Ring_RotateLeft(RING_INFO *ring);</title></rect>
<rect width="12" height="12" x="30" y="105" class="decompiled"><title>void __cdecl Inv_Ring_RotateRight(RING_INFO *ring);</title></rect>
<rect width="12" height="12" x="45" y="105" class="decompiled"><title>void __cdecl Inv_Ring_MotionInit(RING_INFO *ring, int16_t frames, int16_t status, int16_t status_target);</title></rect>
<rect width="12" height="12" x="60" y="105" class="decompiled"><title>void __cdecl Inv_Ring_MotionSetup(RING_INFO *ring, int16_t status, int16_t status_target, int16_t frames);</title></rect>
<rect width="12" height="12" x="75" y="105" class="decompiled"><title>void __cdecl Inv_Ring_MotionRadius(RING_INFO *ring, int16_t target);</title></rect>
<rect width="12" height="12" x="90" y="105" class="decompiled"><title>void __cdecl Inv_Ring_MotionRotation(RING_INFO *ring, int16_t rotation, int16_t target);</title></rect>
<rect width="12" height="12" x="105" y="105" class="decompiled"><title>void __cdecl Inv_Ring_MotionCameraPos(RING_INFO *ring, int16_t target);</title></rect>
<rect width="12" height="12" x="120" y="105" class="decompiled"><title>void __cdecl Inv_Ring_MotionCameraPitch(RING_INFO *ring, int16_t target);</title></rect>
<rect width="12" height="12" x="135" y="105" class="decompiled"><title>void __cdecl Inv_Ring_MotionItemSelect(RING_INFO *ring, INVENTORY_ITEM *inv_item);</title></rect>
<rect width="12" height="12" x="150" y="105" class="decompiled"><title>void __cdecl Inv_Ring_MotionItemDeselect(RING_INFO *ring, INVENTORY_ITEM *inv_item);</title></rect>
<rect width="12" height="12" x="165" y="105" class="decompiled"><title>void __cdecl Requester_Init(REQUEST_INFO *req);</title></rect>
<rect width="12" height="12" x="180" y="105" class="decompiled"><title>void __cdecl Requester_Shutdown(REQUEST_INFO *req);</title></rect>
<rect width="12" height="12" x="195" y="105" class="decompiled"><title>void __cdecl Requester_Item_CenterAlign(REQUEST_INFO *req, TEXTSTRING *txt);</title></rect>
<rect width="12" height="12" x="210" y="105" class="decompiled"><title>void __cdecl Requester_Item_LeftAlign(REQUEST_INFO *req, TEXTSTRING *txt);</title></rect>
<rect width="12" height="12" x="225" y="105" class="decompiled"><title>void __cdecl Requester_Item_RightAlign(REQUEST_INFO *req, TEXTSTRING *txt);</title></rect>
<rect width="12" height="12" x="240" y="105" class="decompiled"><title>int32_t __cdecl Requester_Display(REQUEST_INFO *req, int32_t des, int32_t backgrounds);</title></rect>
<rect width="12" height="12" x="255" y="105" class="decompiled"><title>void __cdecl Requester_SetHeading(REQUEST_INFO *req, char *text1, uint32_t flags1, char *text2, uint32_t flags2);</title></rect>
<rect width="12" height="12" x="270" y="105" class="decompiled"><title>void __cdecl Requester_RemoveAllItems(REQUEST_INFO *req);</title></rect>
<rect width="12" height="12" x="285" y="105" class="decompiled"><title>void __cdecl Requester_ChangeItem(REQUEST_INFO *req, int32_t item, const char *text1, uint32_t flags1, const char *text2, uint32_t flags2);</title></rect>
<rect width="12" height="12" x="300" y="105" class="decompiled"><title>void __cdecl Requester_AddItem(REQUEST_INFO *req, const char *text1, uint32_t flags1, const char *text2, uint32_t flags2);</title></rect>
<rect width="12" height="12" x="315" y="105" class="decompiled"><title>void __cdecl Requester_SetSize(REQUEST_INFO *req, int32_t maxlines, int32_t ypos);</title></rect>
<rect width="12" height="12" x="330" y="105" class="decompiled"><title>int32_t __cdecl AddAssaultTime(uint32_t time);</title></rect>
<rect width="12" height="12" x="345" y="105" class="decompiled"><title>void __cdecl ShowGymStatsText(char *time_str, int32_t type);</title></rect>
<rect width="12" height="12" x="360" y="105" class="decompiled"><title>void __cdecl ShowStatsText(char *time_str, int32_t type);</title></rect>
<rect width="12" height="12" x="375" y="105" class="decompiled"><title>void __cdecl ShowEndStatsText(void);</title></rect>
<rect width="12" height="12" x="390" y="105" class="decompiled"><title>void __cdecl Item_InitialiseArray(int32_t num_items);</title></rect>
<rect width="12" height="12" x="405" y="105" class="decompiled"><title>void __cdecl Item_Kill(int16_t item_num);</title></rect>
<rect width="12" height="12" x="420" y="105" class="decompiled"><title>int16_t __cdecl Item_Create(void);</title></rect>
<rect width="12" height="12" x="435" y="105" class="decompiled"><title>void __cdecl Item_Initialise(int16_t item_num);</title></rect>
<rect width="12" height="12" x="450" y="105" class="decompiled"><title>void __cdecl Item_RemoveActive(int16_t item_num);</title></rect>
<rect width="12" height="12" x="465" y="105" class="decompiled"><title>void __cdecl Item_RemoveDrawn(int16_t item_num);</title></rect>
<rect width="12" height="12" x="480" y="105" class="decompiled"><title>void __cdecl Item_AddActive(int16_t item_num);</title></rect>
<rect width="12" height="12" x="495" y="105" class="decompiled"><title>void __cdecl Item_NewRoom(int16_t item_num, int16_t room_num);</title></rect>
<rect width="12" height="12" x="510" y="105" class="decompiled"><title>int32_t __cdecl Item_GlobalReplace(GAME_OBJECT_ID src_object_id, GAME_OBJECT_ID dst_object_id);</title></rect>
<rect width="12" height="12" x="525" y="105" class="decompiled"><title>void __cdecl Effect_InitialiseArray(void);</title></rect>
<rect width="12" height="12" x="540" y="105" class="decompiled"><title>int16_t __cdecl Effect_Create(int16_t room_num);</title></rect>
<rect width="12" height="12" x="555" y="105" class="decompiled"><title>void __cdecl Effect_Kill(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="570" y="105" class="decompiled"><title>void __cdecl Effect_NewRoom(int16_t fx_num, int16_t room_num);</title></rect>
<rect width="12" height="12" x="585" y="105" class="decompiled"><title>void __cdecl Item_ClearKilled(void);</title></rect>
<rect width="12" height="12" x="600" y="105" class="decompiled"><title>void __cdecl Lara_HandleAboveWater(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="615" y="105" class="decompiled"><title>void __cdecl Lara_LookUpDown(void);</title></rect>
<rect width="12" height="12" x="630" y="105" class="decompiled"><title>void __cdecl Lara_LookLeftRight(void);</title></rect>
<rect width="12" height="12" x="645" y="105" class="decompiled"><title>void __cdecl Lara_ResetLook(void);</title></rect>
<rect width="12" height="12" x="660" y="105" class="decompiled"><title>void __cdecl Lara_State_Walk(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="675" y="105" class="decompiled"><title>void __cdecl Lara_State_Run(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="690" y="105" class="decompiled"><title>void __cdecl Lara_State_Stop(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="705" y="105" class="decompiled"><title>void __cdecl Lara_State_ForwardJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="720" y="105" class="decompiled"><title>void __cdecl Lara_State_FastBack(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="735" y="105" class="decompiled"><title>void __cdecl Lara_State_TurnRight(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="0" y="120" class="decompiled"><title>void __cdecl Lara_State_TurnLeft(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="15" y="120" class="decompiled"><title>void __cdecl Lara_State_Death(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="30" y="120" class="decompiled"><title>void __cdecl Lara_State_FastFall(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="45" y="120" class="decompiled"><title>void __cdecl Lara_State_Hang(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="60" y="120" class="decompiled"><title>void __cdecl Lara_State_Reach(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="75" y="120" class="decompiled"><title>void __cdecl Lara_State_Splat(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="90" y="120" class="decompiled"><title>void __cdecl Lara_State_Compress(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="105" y="120" class="decompiled"><title>void __cdecl Lara_State_Back(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="120" y="120" class="decompiled"><title>void __cdecl Lara_State_Null(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="135" y="120" class="decompiled"><title>void __cdecl Lara_State_FastTurn(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="150" y="120" class="decompiled"><title>void __cdecl Lara_State_StepRight(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="165" y="120" class="decompiled"><title>void __cdecl Lara_State_StepLeft(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="180" y="120" class="decompiled"><title>void __cdecl Lara_State_Slide(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="195" y="120" class="decompiled"><title>void __cdecl Lara_State_BackJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="210" y="120" class="decompiled"><title>void __cdecl Lara_State_RightJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="225" y="120" class="decompiled"><title>void __cdecl Lara_State_LeftJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="240" y="120" class="decompiled"><title>void __cdecl Lara_State_UpJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="255" y="120" class="decompiled"><title>void __cdecl Lara_State_Fallback(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="270" y="120" class="decompiled"><title>void __cdecl Lara_State_HangLeft(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="285" y="120" class="decompiled"><title>void __cdecl Lara_State_HangRight(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="300" y="120" class="decompiled"><title>void __cdecl Lara_State_SlideBack(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="315" y="120" class="decompiled"><title>void __cdecl Lara_State_PushBlock(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="330" y="120" class="decompiled"><title>void __cdecl Lara_State_PPReady(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="345" y="120" class="decompiled"><title>void __cdecl Lara_State_Pickup(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="360" y="120" class="decompiled"><title>void __cdecl Lara_State_PickupFlare(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="375" y="120" class="decompiled"><title>void __cdecl Lara_State_SwitchOn(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="390" y="120" class="decompiled"><title>void __cdecl Lara_State_UseKey(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="405" y="120" class="decompiled"><title>void __cdecl Lara_State_Special(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="420" y="120" class="decompiled"><title>void __cdecl Lara_State_SwanDive(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="435" y="120" class="decompiled"><title>void __cdecl Lara_State_FastDive(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="450" y="120" class="decompiled"><title>void __cdecl Lara_State_WaterOut(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="465" y="120" class="decompiled"><title>void __cdecl Lara_State_Wade(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="480" y="120" class="decompiled"><title>void __cdecl Lara_State_DeathSlide(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="495" y="120" class="decompiled"><title>void __cdecl Lara_State_Extra_Breath(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="510" y="120" class="decompiled"><title>void __cdecl Lara_State_Extra_YetiKill(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="525" y="120" class="decompiled"><title>void __cdecl Lara_State_Extra_SharkKill(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="540" y="120" class="decompiled"><title>void __cdecl Lara_State_Extra_Airlock(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="555" y="120" class="decompiled"><title>void __cdecl Lara_State_Extra_GongBong(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="570" y="120" class="decompiled"><title>void __cdecl Lara_State_Extra_DinoKill(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="585" y="120" class="decompiled"><title>void __cdecl Lara_State_Extra_PullDagger(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="600" y="120" class="decompiled"><title>void __cdecl Lara_State_Extra_StartAnim(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="615" y="120" class="decompiled"><title>void __cdecl Lara_State_Extra_StartHouse(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="630" y="120" class="decompiled"><title>void __cdecl Lara_State_Extra_FinalAnim(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="645" y="120" class="decompiled"><title>int32_t __cdecl Lara_Fallen(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="660" y="120" class="decompiled"><title>void __cdecl Lara_CollideStop(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="675" y="120" class="decompiled"><title>void __cdecl Lara_Col_Walk(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="690" y="120" class="decompiled"><title>void __cdecl Lara_Col_Run(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="705" y="120" class="decompiled"><title>void __cdecl Lara_Col_Stop(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="720" y="120" class="decompiled"><title>void __cdecl Lara_Col_ForwardJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="735" y="120" class="decompiled"><title>void __cdecl Lara_Col_FastBack(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="0" y="135" class="decompiled"><title>void __cdecl Lara_Col_TurnRight(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="15" y="135" class="decompiled"><title>void __cdecl Lara_Col_TurnLeft(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="30" y="135" class="decompiled"><title>void __cdecl Lara_Col_Death(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="45" y="135" class="decompiled"><title>void __cdecl Lara_Col_FastFall(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="60" y="135" class="decompiled"><title>void __cdecl Lara_Col_Hang(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="75" y="135" class="decompiled"><title>void __cdecl Lara_Col_Reach(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="90" y="135" class="decompiled"><title>void __cdecl Lara_Col_Splat(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="105" y="135" class="decompiled"><title>void __cdecl Lara_Col_Land(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="120" y="135" class="decompiled"><title>void __cdecl Lara_Col_Compress( ITEM *item, COLL_INFO *coll );</title></rect>
<rect width="12" height="12" x="135" y="135" class="decompiled"><title>void __cdecl Lara_Col_Back(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="150" y="135" class="decompiled"><title>void __cdecl Lara_Col_StepRight(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="165" y="135" class="decompiled"><title>void __cdecl Lara_Col_StepLeft(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="180" y="135" class="decompiled"><title>void __cdecl Lara_Col_Slide(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="195" y="135" class="decompiled"><title>void __cdecl Lara_Col_BackJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="210" y="135" class="decompiled"><title>void __cdecl Lara_Col_RightJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="225" y="135" class="decompiled"><title>void __cdecl Lara_Col_LeftJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="240" y="135" class="decompiled"><title>void __cdecl Lara_Col_UpJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="255" y="135" class="decompiled"><title>void __cdecl Lara_Col_Fallback(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="270" y="135" class="decompiled"><title>void __cdecl Lara_Col_HangLeft(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="285" y="135" class="decompiled"><title>void __cdecl Lara_Col_HangRight(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="300" y="135" class="decompiled"><title>void __cdecl Lara_Col_SlideBack(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="315" y="135" class="decompiled"><title>void __cdecl Lara_Col_Null(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="330" y="135" class="decompiled"><title>void __cdecl Lara_Col_Roll(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="345" y="135" class="decompiled"><title>void __cdecl Lara_Col_Roll2(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="360" y="135" class="decompiled"><title>void __cdecl Lara_Col_SwanDive(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="375" y="135" class="decompiled"><title>void __cdecl Lara_Col_FastDive(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="390" y="135" class="decompiled"><title>void __cdecl Lara_Col_Wade(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="405" y="135" class="decompiled"><title>void __cdecl Lara_Col_Default(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="420" y="135" class="decompiled"><title>void __cdecl Lara_Col_Jumper(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="435" y="135" class="decompiled"><title>void __cdecl Lara_GetCollisionInfo(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="450" y="135" class="decompiled"><title>void __cdecl Lara_SlideSlope(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="465" y="135" class="decompiled"><title>int32_t __cdecl Lara_HitCeiling(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="480" y="135" class="decompiled"><title>int32_t __cdecl Lara_DeflectEdge(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="495" y="135" class="decompiled"><title>void __cdecl Lara_DeflectEdgeJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="510" y="135" class="decompiled"><title>void __cdecl Lara_SlideEdgeJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="525" y="135" class="decompiled"><title>int32_t __cdecl Lara_TestWall(ITEM *item, int32_t front, int32_t right, int32_t down);</title></rect>
<rect width="12" height="12" x="540" y="135" class="decompiled"><title>int32_t __cdecl Lara_TestHangOnClimbWall(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="555" y="135" class="decompiled"><title>int32_t __cdecl Lara_TestClimbStance(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="570" y="135" class="decompiled"><title>void __cdecl Lara_HangTest(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="585" y="135" class="decompiled"><title>int32_t __cdecl Lara_TestEdgeCatch(ITEM *item, COLL_INFO *coll, int32_t *edge);</title></rect>
<rect width="12" height="12" x="600" y="135" class="decompiled"><title>int32_t __cdecl Lara_TestHangJumpUp(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="615" y="135" class="decompiled"><title>int32_t __cdecl Lara_TestHangJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="630" y="135" class="decompiled"><title>int32_t __cdecl Lara_TestHangSwingIn(ITEM *item, PHD_ANGLE angle);</title></rect>
<rect width="12" height="12" x="645" y="135" class="decompiled"><title>int32_t __cdecl Lara_TestVault(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="660" y="135" class="decompiled"><title>int32_t __cdecl Lara_TestSlide(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="675" y="135" class="decompiled"><title>int16_t __cdecl Lara_FloorFront(ITEM *item, PHD_ANGLE ang, int32_t dist);</title></rect>
<rect width="12" height="12" x="690" y="135" class="decompiled"><title>int32_t __cdecl Lara_LandedBad(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="705" y="135" class="decompiled"><title>void __cdecl Lara_GetJointAbsPosition(XYZ_32 *vec, int32_t joint);</title></rect>
<rect width="12" height="12" x="720" y="135" class="decompiled"><title>void __cdecl Lara_GetJointAbsPosition_I(ITEM *item, XYZ_32 *vec, int16_t *frame1, int16_t *frame2, int32_t frac, int32_t rate);</title></rect>
<rect width="12" height="12" x="735" y="135" class="decompiled"><title>void __cdecl Gun_Rifle_DrawMeshes(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="12" height="12" x="0" y="150" class="decompiled"><title>void __cdecl Gun_Rifle_UndrawMeshes(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="12" height="12" x="15" y="150" class="decompiled"><title>void __cdecl Gun_Rifle_Ready(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="12" height="12" x="30" y="150" class="decompiled"><title>void __cdecl Gun_Rifle_Control(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="12" height="12" x="45" y="150" class="decompiled"><title>void __cdecl Gun_Rifle_FireShotgun(void);</title></rect>
<rect width="12" height="12" x="60" y="150" class="decompiled"><title>void __cdecl Gun_Rifle_FireM16(bool running);</title></rect>
<rect width="12" height="12" x="75" y="150" class="decompiled"><title>void __cdecl Gun_Rifle_FireHarpoon(void);</title></rect>
<rect width="12" height="12" x="90" y="150" class="known"><title>void __cdecl HarpoonBolt_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="105" y="150" class="decompiled"><title>void __cdecl Gun_Rifle_FireGrenade(void);</title></rect>
<rect width="12" height="12" x="120" y="150" class="known"><title>void __cdecl Rocket_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="135" y="150" class="decompiled"><title>void __cdecl Gun_Rifle_Draw(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="12" height="12" x="150" y="150" class="decompiled"><title>void __cdecl Gun_Rifle_Undraw(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="12" height="12" x="165" y="150" class="decompiled"><title>void __cdecl Gun_Rifle_Animate(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="12" height="12" x="180" y="150" class="decompiled"><title>void __cdecl Gun_Pistols_SetArmInfo(LARA_ARM *arm, int32_t frame);</title></rect>
<rect width="12" height="12" x="195" y="150" class="decompiled"><title>void __cdecl Gun_Pistols_Draw(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="12" height="12" x="210" y="150" class="decompiled"><title>void __cdecl Gun_Pistols_Undraw(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="12" height="12" x="225" y="150" class="decompiled"><title>void __cdecl Gun_Pistols_Ready(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="12" height="12" x="240" y="150" class="decompiled"><title>void __cdecl Gun_Pistols_DrawMeshes(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="12" height="12" x="255" y="150" class="decompiled"><title>void __cdecl Gun_Pistols_UndrawMeshLeft(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="12" height="12" x="270" y="150" class="decompiled"><title>void __cdecl Gun_Pistols_UndrawMeshRight(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="12" height="12" x="285" y="150" class="decompiled"><title>void __cdecl Gun_Pistols_Control(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="12" height="12" x="300" y="150" class="decompiled"><title>void __cdecl Gun_Pistols_Animate(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="12" height="12" x="315" y="150" class="decompiled"><title>void __cdecl Lara_State_ClimbLeft(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="330" y="150" class="decompiled"><title>void __cdecl Lara_State_ClimbRight(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="345" y="150" class="decompiled"><title>void __cdecl Lara_State_ClimbStance(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="360" y="150" class="decompiled"><title>void __cdecl Lara_State_Climbing(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="375" y="150" class="decompiled"><title>void __cdecl Lara_State_ClimbEnd(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="390" y="150" class="decompiled"><title>void __cdecl Lara_State_ClimbDown(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="405" y="150" class="decompiled"><title>void __cdecl Lara_Col_ClimbLeft(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="420" y="150" class="decompiled"><title>void __cdecl Lara_Col_ClimbRight(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="435" y="150" class="decompiled"><title>void __cdecl Lara_Col_ClimbStance(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="450" y="150" class="decompiled"><title>void __cdecl Lara_Col_Climbing(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="465" y="150" class="decompiled"><title>void __cdecl Lara_Col_ClimbDown(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="480" y="150" class="decompiled"><title>int32_t __cdecl Lara_CheckForLetGo(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="495" y="150" class="decompiled"><title>int32_t __cdecl Lara_TestClimb(int32_t x, int32_t y, int32_t z, int32_t xfront, int32_t zfront, int32_t item_height, int16_t item_room, int32_t *shift);</title></rect>
<rect width="12" height="12" x="510" y="150" class="decompiled"><title>int32_t __cdecl Lara_TestClimbPos(ITEM *item, int32_t front, int32_t right, int32_t origin, int32_t height, int32_t *shift);</title></rect>
<rect width="12" height="12" x="525" y="150" class="decompiled"><title>void __cdecl Lara_DoClimbLeftRight(ITEM *item, COLL_INFO *coll, int32_t result, int32_t shift);</title></rect>
<rect width="12" height="12" x="540" y="150" class="decompiled"><title>int32_t __cdecl Lara_TestClimbUpPos(ITEM *item, int32_t front, int32_t right, int32_t *shift, int32_t *ledge);</title></rect>
<rect width="12" height="12" x="555" y="150" class="decompiled"><title>void __cdecl Gun_Control(void);</title></rect>
<rect width="12" height="12" x="570" y="150" class="decompiled"><title>int32_t __cdecl Gun_CheckForHoldingState(int32_t state);</title></rect>
<rect width="12" height="12" x="585" y="150" class="decompiled"><title>void __cdecl Gun_InitialiseNewWeapon(void);</title></rect>
<rect width="12" height="12" x="600" y="150" class="decompiled"><title>void __cdecl Gun_TargetInfo(const WEAPON_INFO *winfo);</title></rect>
<rect width="12" height="12" x="615" y="150" class="decompiled"><title>void __cdecl Gun_GetNewTarget(WEAPON_INFO *winfo);</title></rect>
<rect width="12" height="12" x="630" y="150" class="decompiled"><title>void __cdecl Gun_FindTargetPoint(const ITEM *item, GAME_VECTOR *target);</title></rect>
<rect width="12" height="12" x="645" y="150" class="decompiled"><title>void __cdecl Gun_AimWeapon(WEAPON_INFO *winfo, LARA_ARM *arm);</title></rect>
<rect width="12" height="12" x="660" y="150" class="decompiled"><title>int32_t __cdecl Gun_FireWeapon(LARA_GUN_TYPE weapon_type, ITEM *target, const ITEM *src, const PHD_ANGLE *angles);</title></rect>
<rect width="12" height="12" x="675" y="150" class="decompiled"><title>void __cdecl Gun_HitTarget(ITEM *item, GAME_VECTOR *hitpos, int32_t damage);</title></rect>
<rect width="12" height="12" x="690" y="150" class="decompiled"><title>void __cdecl Gun_SmashItem(int16_t item_num, LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="12" height="12" x="705" y="150" class="decompiled"><title>GAME_OBJECT_ID Gun_GetWeaponAnim(const LARA_GUN_TYPE gun_type);</title></rect>
<rect width="12" height="12" x="720" y="150" class="known"><title>int32_t __cdecl Flare_DoLight(XYZ_32 *pos, int32_t flare_age);</title></rect>
<rect width="12" height="12" x="735" y="150" class="known"><title>void __cdecl Flare_DoInHand(int32_t flare_age);</title></rect>
<rect width="12" height="12" x="0" y="165" class="known"><title>void __cdecl Flare_DrawInAir(ITEM *item);</title></rect>
<rect width="12" height="12" x="15" y="165" class="known"><title>void __cdecl Flare_Create(int32_t thrown);</title></rect>
<rect width="12" height="12" x="30" y="165" class="known"><title>void __cdecl Flare_SetArm(int32_t frame);</title></rect>
<rect width="12" height="12" x="45" y="165" class="known"><title>void __cdecl Flare_Draw(void);</title></rect>
<rect width="12" height="12" x="60" y="165" class="known"><title>void __cdecl Flare_Undraw(void);</title></rect>
<rect width="12" height="12" x="75" y="165" class="known"><title>void __cdecl Flare_DrawMeshes(void);</title></rect>
<rect width="12" height="12" x="90" y="165" class="known"><title>void __cdecl Flare_UndrawMeshes(void);</title></rect>
<rect width="12" height="12" x="105" y="165" class="known"><title>void __cdecl Flare_Ready(void);</title></rect>
<rect width="12" height="12" x="120" y="165" class="known"><title>void __cdecl Flare_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="135" y="165" class="decompiled"><title>void __cdecl Lara_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="150" y="165" class="decompiled"><title>void __cdecl Lara_Animate(ITEM *item);</title></rect>
<rect width="12" height="12" x="165" y="165" class="decompiled"><title>void __cdecl Lara_UseItem(GAME_OBJECT_ID object_id);</title></rect>
<rect width="12" height="12" x="180" y="165" class="decompiled"><title>void __cdecl Lara_CheatGetStuff(void);</title></rect>
<rect width="12" height="12" x="195" y="165" class="decompiled"><title>void __cdecl Lara_ControlExtra(int16_t item_num);</title></rect>
<rect width="12" height="12" x="210" y="165" class="decompiled"><title>void __cdecl Lara_InitialiseLoad(int16_t item_num);</title></rect>
<rect width="12" height="12" x="225" y="165" class="decompiled"><title>void __cdecl Lara_Initialise(int32_t type);</title></rect>
<rect width="12" height="12" x="240" y="165" class="decompiled"><title>void __cdecl Lara_InitialiseInventory(int32_t level_num);</title></rect>
<rect width="12" height="12" x="255" y="165" class="decompiled"><title>void __cdecl Lara_InitialiseMeshes(int32_t level_num);</title></rect>
<rect width="12" height="12" x="270" y="165" class="decompiled"><title>void __cdecl Lara_HandleSurface(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="285" y="165" class="decompiled"><title>void __cdecl Lara_State_SurfSwim(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="300" y="165" class="decompiled"><title>void __cdecl Lara_State_SurfBack(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="315" y="165" class="decompiled"><title>void __cdecl Lara_State_SurfLeft(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="330" y="165" class="decompiled"><title>void __cdecl Lara_State_SurfRight(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="345" y="165" class="decompiled"><title>void __cdecl Lara_State_SurfTread(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="360" y="165" class="decompiled"><title>void __cdecl Lara_Col_SurfSwim(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="375" y="165" class="decompiled"><title>void __cdecl Lara_Col_SurfBack(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="390" y="165" class="decompiled"><title>void __cdecl Lara_Col_SurfLeft(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="405" y="165" class="decompiled"><title>void __cdecl Lara_Col_SurfRight(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="420" y="165" class="decompiled"><title>void __cdecl Lara_Col_SurfTread(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="435" y="165" class="decompiled"><title>void __cdecl Lara_SurfaceCollision(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="450" y="165" class="decompiled"><title>int32_t __cdecl Lara_TestWaterStepOut(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="465" y="165" class="decompiled"><title>int32_t __cdecl Lara_TestWaterClimbOut(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="480" y="165" class="decompiled"><title>void __cdecl Lara_HandleUnderwater(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="495" y="165" class="decompiled"><title>void __cdecl Lara_SwimTurn(ITEM *item);</title></rect>
<rect width="12" height="12" x="510" y="165" class="decompiled"><title>void __cdecl Lara_State_Swim(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="525" y="165" class="decompiled"><title>void __cdecl Lara_State_Glide(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="540" y="165" class="decompiled"><title>void __cdecl Lara_State_Tread(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="555" y="165" class="decompiled"><title>void __cdecl Lara_State_Dive(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="570" y="165" class="decompiled"><title>void __cdecl Lara_State_UWDeath(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="585" y="165" class="decompiled"><title>void __cdecl Lara_State_UWTwist(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="600" y="165" class="decompiled"><title>void __cdecl Lara_Col_Swim(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="615" y="165" class="decompiled"><title>void __cdecl Lara_Col_UWDeath(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="630" y="165" class="decompiled"><title>int32_t __cdecl Lara_GetWaterDepth(int32_t x, int32_t y, int32_t z, int16_t room_num);</title></rect>
<rect width="12" height="12" x="645" y="165" class="decompiled"><title>void __cdecl Lara_TestWaterDepth(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="660" y="165" class="decompiled"><title>void __cdecl Lara_SwimCollision(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="675" y="165" class="decompiled"><title>void __cdecl Lara_WaterCurrent(COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="690" y="165" class="decompiled"><title>void __cdecl LOT_InitialiseArray(void);</title></rect>
<rect width="12" height="12" x="705" y="165" class="decompiled"><title>void __cdecl LOT_DisableBaddieAI(int16_t item_num);</title></rect>
<rect width="12" height="12" x="720" y="165" class="decompiled"><title>bool __cdecl LOT_EnableBaddieAI(int16_t item_num, bool always);</title></rect>
<rect width="12" height="12" x="735" y="165" class="decompiled"><title>void __cdecl LOT_InitialiseSlot(int16_t item_num, int32_t slot);</title></rect>
<rect width="12" height="12" x="0" y="180" class="decompiled"><title>void __cdecl LOT_CreateZone(ITEM *item);</title></rect>
<rect width="12" height="12" x="15" y="180" class="decompiled"><title>void __cdecl LOT_ClearLOT(LOT_INFO *lot);</title></rect>
<rect width="12" height="12" x="30" y="180" class="known"><title>void __cdecl ControlMissile(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="45" y="180" class="known"><title>void __cdecl ShootAtLara(FX *fx);</title></rect>
<rect width="12" height="12" x="60" y="180" class="decompiled"><title>int32_t __cdecl Effect_ExplodingDeath(int16_t item_num, int32_t mesh_bits, int16_t damage);</title></rect>
<rect width="12" height="12" x="75" y="180" class="known"><title>void __cdecl BodyPart_Control(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="90" y="180" class="known"><title>void __cdecl InitialiseMovingBlock(int16_t item_num);</title></rect>
<rect width="12" height="12" x="105" y="180" class="known"><title>void __cdecl MovableBlock(int16_t item_num);</title></rect>
<rect width="12" height="12" x="120" y="180" class="known"><title>void __cdecl MovableBlockCollision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="135" y="180" class="known"><title>int32_t __cdecl TestBlockMovable(ITEM *item, int32_t block_height);</title></rect>
<rect width="12" height="12" x="150" y="180" class="known"><title>int32_t __cdecl TestBlockPush(ITEM *item, int32_t block_height, uint16_t quadrant);</title></rect>
<rect width="12" height="12" x="165" y="180" class="known"><title>int32_t __cdecl TestBlockPull(ITEM *item, int32_t block_height, uint16_t quadrant);</title></rect>
<rect width="12" height="12" x="180" y="180" class="decompiled"><title>void __cdecl Room_AlterFloorHeight(ITEM *item, int32_t height);</title></rect>
<rect width="12" height="12" x="195" y="180" class="known"><title>void __cdecl DrawMovableBlock(ITEM *item);</title></rect>
<rect width="12" height="12" x="210" y="180" class="known"><title>void __cdecl DrawUnclippedItem(ITEM *item);</title></rect>
<rect width="12" height="12" x="225" y="180" class="known"><title>void __cdecl EarthQuake(int16_t item_num);</title></rect>
<rect width="12" height="12" x="240" y="180" class="known"><title>void __cdecl ControlCutShotgun(int16_t item_num);</title></rect>
<rect width="12" height="12" x="255" y="180" class="known"><title>void __cdecl InitialiseFinalLevel(void);</title></rect>
<rect width="12" height="12" x="270" y="180" class="decompiled"><title>void __cdecl FinalLevelCounter_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="285" y="180" class="known"><title>void __cdecl MiniCopterControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="300" y="180" class="known"><title>void __cdecl InitialiseDyingMonk(int16_t item_num);</title></rect>
<rect width="12" height="12" x="315" y="180" class="known"><title>void __cdecl DyingMonk(int16_t item_num);</title></rect>
<rect width="12" height="12" x="330" y="180" class="known"><title>void __cdecl ControlGongBonger(int16_t item_num);</title></rect>
<rect width="12" height="12" x="345" y="180" class="known"><title>void __cdecl DeathSlideCollision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="360" y="180" class="known"><title>void __cdecl ControlDeathSlide(int16_t item_num);</title></rect>
<rect width="12" height="12" x="375" y="180" class="known"><title>void __cdecl BigBowlControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="390" y="180" class="known"><title>void __cdecl BellControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="405" y="180" class="known"><title>void __cdecl InitialiseWindow(int16_t item_num);</title></rect>
<rect width="12" height="12" x="420" y="180" class="known"><title>void __cdecl SmashWindow(int16_t item_num);</title></rect>
<rect width="12" height="12" x="435" y="180" class="known"><title>void __cdecl WindowControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="450" y="180" class="known"><title>void __cdecl SmashIceControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="465" y="180" class="known"><title>void __cdecl ShutThatDoor(DOORPOS_DATA *d);</title></rect>
<rect width="12" height="12" x="480" y="180" class="known"><title>void __cdecl OpenThatDoor(DOORPOS_DATA *d);</title></rect>
<rect width="12" height="12" x="495" y="180" class="known"><title>void __cdecl InitialiseDoor(int16_t item_num);</title></rect>
<rect width="12" height="12" x="510" y="180" class="known"><title>void __cdecl DoorControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="525" y="180" class="known"><title>int32_t __cdecl OnDrawBridge(ITEM *item, int32_t x, int32_t y);</title></rect>
<rect width="12" height="12" x="540" y="180" class="known"><title>void __cdecl DrawBridgeFloor(ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="12" height="12" x="555" y="180" class="known"><title>void __cdecl DrawBridgeCeiling(ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="12" height="12" x="570" y="180" class="known"><title>void __cdecl DrawBridgeCollision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="585" y="180" class="known"><title>void __cdecl InitialiseLift(int16_t item_num);</title></rect>
<rect width="12" height="12" x="600" y="180" class="known"><title>void __cdecl LiftControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="615" y="180" class="known"><title>void __cdecl LiftFloorCeiling(ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *floor, int32_t *ceiling);</title></rect>
<rect width="12" height="12" x="630" y="180" class="known"><title>void __cdecl LiftFloor(ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="12" height="12" x="645" y="180" class="known"><title>void __cdecl LiftCeiling(ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="12" height="12" x="660" y="180" class="known"><title>void __cdecl BridgeFlatFloor(ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="12" height="12" x="675" y="180" class="known"><title>void __cdecl BridgeFlatCeiling(ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="12" height="12" x="690" y="180" class="known"><title>int32_t __cdecl GetOffset(ITEM *item, int32_t x, int32_t z);</title></rect>
<rect width="12" height="12" x="705" y="180" class="known"><title>void __cdecl BridgeTilt1Floor(ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="12" height="12" x="720" y="180" class="known"><title>void __cdecl BridgeTilt1Ceiling(ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="12" height="12" x="735" y="180" class="known"><title>void __cdecl BridgeTilt2Floor(ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="12" height="12" x="0" y="195" class="known"><title>void __cdecl BridgeTilt2Ceiling(ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="12" height="12" x="15" y="195" class="known"><title>void __cdecl CopterControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="30" y="195" class="known"><title>void __cdecl GeneralControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="45" y="195" class="known"><title>void __cdecl DetonatorControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="60" y="195" class="decompiled"><title>bool __cdecl Creature_CanTargetEnemy(const ITEM *item, const AI_INFO *info);</title></rect>
<rect width="12" height="12" x="75" y="195" class="known"><title>void __cdecl ControlGlow(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="90" y="195" class="known"><title>void __cdecl ControlGunShot(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="105" y="195" class="known"><title>int16_t __cdecl GunShot(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE yrot, int16_t room_num);</title></rect>
<rect width="12" height="12" x="120" y="195" class="known"><title>int16_t __cdecl GunHit(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE yrot, int16_t room_num);</title></rect>
<rect width="12" height="12" x="135" y="195" class="known"><title>int16_t __cdecl GunMiss(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE yrot, int16_t room_num);</title></rect>
<rect width="12" height="12" x="150" y="195" class="known"><title>int32_t __cdecl ShotLara(ITEM *item, AI_INFO *info, BITE *gun, int16_t extra_rotation, int32_t damage);</title></rect>
<rect width="12" height="12" x="165" y="195" class="known"><title>void __cdecl InitialiseCult1(int16_t item_num);</title></rect>
<rect width="12" height="12" x="180" y="195" class="known"><title>void __cdecl Cult1Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="195" y="195" class="known"><title>void __cdecl InitialiseCult3(int16_t item_num);</title></rect>
<rect width="12" height="12" x="210" y="195" class="known"><title>void __cdecl Cult3Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="225" y="195" class="known"><title>void __cdecl Worker1Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="240" y="195" class="known"><title>void __cdecl Worker2Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="255" y="195" class="known"><title>void __cdecl BanditControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="270" y="195" class="known"><title>void __cdecl Bandit2Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="285" y="195" class="known"><title>void __cdecl WinstonControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="300" y="195" class="known"><title>void __cdecl PickUpCollision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="315" y="195" class="known"><title>void __cdecl SwitchCollision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="330" y="195" class="known"><title>void __cdecl SwitchCollision2(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="345" y="195" class="known"><title>void __cdecl DetonatorCollision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="360" y="195" class="known"><title>void __cdecl KeyHoleCollision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="375" y="195" class="known"><title>void __cdecl PuzzleHoleCollision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="390" y="195" class="known"><title>void __cdecl SwitchControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="405" y="195" class="known"><title>int32_t __cdecl SwitchTrigger(int16_t item_num, int16_t timer);</title></rect>
<rect width="12" height="12" x="420" y="195" class="known"><title>int32_t __cdecl KeyTrigger(int16_t item_num);</title></rect>
<rect width="12" height="12" x="435" y="195" class="known"><title>int32_t __cdecl PickupTrigger(int16_t item_num);</title></rect>
<rect width="12" height="12" x="450" y="195" class="known"><title>void __cdecl SecretControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="465" y="195" class="known"><title>void __cdecl MouseControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="480" y="195" class="known"><title>void __cdecl InitialiseStartInfo(void);</title></rect>
<rect width="12" height="12" x="495" y="195" class="known"><title>void __cdecl ModifyStartInfo(int32_t level_num);</title></rect>
<rect width="12" height="12" x="510" y="195" class="known"><title>void __cdecl CreateStartInfo(int32_t level_num);</title></rect>
<rect width="12" height="12" x="525" y="195" class="known"><title>void __cdecl CreateSaveGameInfo(void);</title></rect>
<rect width="12" height="12" x="540" y="195" class="known"><title>void __cdecl ExtractSaveGameInfo(void);</title></rect>
<rect width="12" height="12" x="555" y="195" class="known"><title>void __cdecl ResetSG(void);</title></rect>
<rect width="12" height="12" x="570" y="195" class="known"><title>void __cdecl WriteSG(void *pointer, int32_t size);</title></rect>
<rect width="12" height="12" x="585" y="195" class="known"><title>void __cdecl ReadSG(void *pointer, int32_t size);</title></rect>
<rect width="12" height="12" x="600" y="195" class="decompiled"><title>int32_t __cdecl Level_Initialise(int32_t level_num, int32_t level_type);</title></rect>
<rect width="12" height="12" x="615" y="195" class="known"><title>void __cdecl InitialiseGameFlags(void);</title></rect>
<rect width="12" height="12" x="630" y="195" class="known"><title>void __cdecl InitialiseLevelFlags(void);</title></rect>
<rect width="12" height="12" x="645" y="195" class="known"><title>void __cdecl BaddyObjects(void);</title></rect>
<rect width="12" height="12" x="660" y="195" class="known"><title>void __cdecl TrapObjects(void);</title></rect>
<rect width="12" height="12" x="675" y="195" class="known"><title>void __cdecl ObjectObjects(void);</title></rect>
<rect width="12" height="12" x="690" y="195" class="known"><title>void __cdecl InitialiseObjects(void);</title></rect>
<rect width="12" height="12" x="705" y="195" class="known"><title>void __cdecl GetCarriedItems(void);</title></rect>
<rect width="12" height="12" x="720" y="195" class="known"><title>void __cdecl JellyControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="735" y="195" class="known"><title>void __cdecl BaracuddaControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="0" y="210" class="known"><title>void __cdecl SharkControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="15" y="210" class="known"><title>void __cdecl InitialiseSkidoo(int16_t item_num);</title></rect>
<rect width="12" height="12" x="30" y="210" class="known"><title>int32_t __cdecl SkidooCheckGeton(int16_t item_num, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="45" y="210" class="known"><title>void __cdecl SkidooCollision(int16_t item_num, ITEM *litem, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="60" y="210" class="known"><title>void __cdecl SkidooBaddieCollision(ITEM *skidoo);</title></rect>
<rect width="12" height="12" x="75" y="210" class="known"><title>int32_t __cdecl TestHeight(ITEM *item, int32_t z_off, int32_t x_off, XYZ_32 *pos);</title></rect>
<rect width="12" height="12" x="90" y="210" class="known"><title>int32_t __cdecl DoShift(ITEM *skidoo, XYZ_32 *pos, XYZ_32 *old);</title></rect>
<rect width="12" height="12" x="105" y="210" class="known"><title>int32_t __cdecl DoDynamics(int32_t height, int32_t fall_speed, int32_t *y);</title></rect>
<rect width="12" height="12" x="120" y="210" class="known"><title>int32_t __cdecl GetCollisionAnim(ITEM *skidoo, XYZ_32 *moved);</title></rect>
<rect width="12" height="12" x="135" y="210" class="known"><title>void __cdecl DoSnowEffect(ITEM *skidoo);</title></rect>
<rect width="12" height="12" x="150" y="210" class="known"><title>int32_t __cdecl SkidooDynamics(ITEM *skidoo);</title></rect>
<rect width="12" height="12" x="165" y="210" class="known"><title>int32_t __cdecl SkidooUserControl(ITEM *skidoo, int32_t height, int32_t *pitch);</title></rect>
<rect width="12" height="12" x="180" y="210" class="known"><title>int32_t __cdecl SkidooCheckGetOffOK(int32_t direction);</title></rect>
<rect width="12" height="12" x="195" y="210" class="known"><title>void __cdecl SkidooAnimation(ITEM *skidoo, int32_t collide, int32_t dead);</title></rect>
<rect width="12" height="12" x="210" y="210" class="known"><title>void __cdecl SkidooExplode(ITEM *skidoo);</title></rect>
<rect width="12" height="12" x="225" y="210" class="known"><title>int32_t __cdecl SkidooCheckGetOff(void);</title></rect>
<rect width="12" height="12" x="240" y="210" class="known"><title>void __cdecl SkidooGuns(void);</title></rect>
<rect width="12" height="12" x="255" y="210" class="known"><title>int32_t __cdecl SkidooControl(void);</title></rect>
<rect width="12" height="12" x="270" y="210" class="known"><title>void __cdecl DrawSkidoo(ITEM *item);</title></rect>
<rect width="12" height="12" x="285" y="210" class="known"><title>void __cdecl InitialiseSkidman(int16_t item_num);</title></rect>
<rect width="12" height="12" x="300" y="210" class="known"><title>void __cdecl SkidManControl(int16_t rider_num);</title></rect>
<rect width="12" height="12" x="315" y="210" class="known"><title>void __cdecl SkidmanPush(ITEM *item, ITEM *lara_item, int32_t radius);</title></rect>
<rect width="12" height="12" x="330" y="210" class="known"><title>void __cdecl SkidmanCollision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="345" y="210" class="known"><title>int32_t __cdecl Music_GetRealTrack(int32_t track);</title></rect>
<rect width="12" height="12" x="360" y="210" class="decompiled"><title>void __cdecl Sound_Effect(int32_t sample_id, const XYZ_32 *pos, uint32_t flags);</title></rect>
<rect width="12" height="12" x="375" y="210" class="decompiled"><title>void __cdecl Sound_StopEffect(int32_t sample_id);</title></rect>
<rect width="12" height="12" x="390" y="210" class="decompiled"><title>void __cdecl Sound_EndScene(void);</title></rect>
<rect width="12" height="12" x="405" y="210" class="decompiled"><title>void __cdecl Sound_Shutdown(void);</title></rect>
<rect width="12" height="12" x="420" y="210" class="decompiled"><title>void __cdecl Sound_Init(void);</title></rect>
<rect width="12" height="12" x="435" y="210" class="known"><title>int32_t __cdecl Collide_TestCollision(ITEM *item, const ITEM *lara_item);</title></rect>
<rect width="12" height="12" x="450" y="210" class="known"><title>int32_t __cdecl Collide_GetSpheres(const ITEM *item, SPHERE *spheres, bool world_space);</title></rect>
<rect width="12" height="12" x="465" y="210" class="known"><title>void __cdecl Collide_GetJointAbsPosition(const ITEM *item, const XYZ_32 *vec, int32_t joint);</title></rect>
<rect width="12" height="12" x="480" y="210" class="known"><title>void __cdecl BaddieBiteEffect(ITEM *item, BITE *bite);</title></rect>
<rect width="12" height="12" x="495" y="210" class="known"><title>void __cdecl SpiderLeap(int16_t item_num, int16_t angle);</title></rect>
<rect width="12" height="12" x="510" y="210" class="known"><title>void __cdecl SpiderControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="525" y="210" class="known"><title>void __cdecl BigSpiderControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="540" y="210" class="decompiled"><title>void __cdecl Text_Init(void);</title></rect>
<rect width="12" height="12" x="555" y="210" class="decompiled"><title>TEXTSTRING *__cdecl Text_Create(int32_t x, int32_t y, int32_t z, const char *text);</title></rect>
<rect width="12" height="12" x="570" y="210" class="decompiled"><title>void __cdecl Text_ChangeText(TEXTSTRING *string, const char *text);</title></rect>
<rect width="12" height="12" x="585" y="210" class="decompiled"><title>void __cdecl Text_SetScale(TEXTSTRING *string, int32_t scale_h, int32_t scale_v);</title></rect>
<rect width="12" height="12" x="600" y="210" class="decompiled"><title>void __cdecl Text_Flash(TEXTSTRING *string, int16_t enable, int16_t rate);</title></rect>
<rect width="12" height="12" x="615" y="210" class="decompiled"><title>void __cdecl Text_AddBackground(TEXTSTRING *string, int16_t x_size, int16_t y_size, int16_t x_off, int16_t y_off, int16_t z_off, int16_t color, uint16_t *gour_ptr, uint16_t flags);</title></rect>
<rect width="12" height="12" x="630" y="210" class="decompiled"><title>void __cdecl Text_RemoveBackground(TEXTSTRING *string);</title></rect>
<rect width="12" height="12" x="645" y="210" class="decompiled"><title>void __cdecl Text_AddOutline(TEXTSTRING *string, int16_t enable, int16_t color, uint16_t *gour_ptr, uint16_t flags);</title></rect>
<rect width="12" height="12" x="660" y="210" class="decompiled"><title>void __cdecl Text_RemoveOutline(TEXTSTRING *string);</title></rect>
<rect width="12" height="12" x="675" y="210" class="decompiled"><title>void __cdecl Text_CentreH(TEXTSTRING *string, int16_t enable);</title></rect>
<rect width="12" height="12" x="690" y="210" class="decompiled"><title>void __cdecl Text_CentreV(TEXTSTRING *string, int16_t enable);</title></rect>
<rect width="12" height="12" x="705" y="210" class="decompiled"><title>void __cdecl Text_AlignRight(TEXTSTRING *string, int16_t enable);</title></rect>
<rect width="12" height="12" x="720" y="210" class="decompiled"><title>void __cdecl Text_AlignBottom(TEXTSTRING *string, int16_t enable);</title></rect>
<rect width="12" height="12" x="735" y="210" class="decompiled"><title>int32_t __cdecl Text_GetWidth(TEXTSTRING *string);</title></rect>
<rect width="12" height="12" x="0" y="225" class="decompiled"><title>int32_t __cdecl Text_Remove(TEXTSTRING *string);</title></rect>
<rect width="12" height="12" x="15" y="225" class="decompiled"><title>int16_t __cdecl Text_GetTextLength(const char *text);</title></rect>
<rect width="12" height="12" x="30" y="225" class="decompiled"><title>void __cdecl Text_Draw(void);</title></rect>
<rect width="12" height="12" x="45" y="225" class="decompiled"><title>void __cdecl Text_DrawBorder(int32_t x, int32_t y, int32_t z, int32_t width, int32_t height);</title></rect>
<rect width="12" height="12" x="60" y="225" class="decompiled"><title>void __cdecl Text_DrawText(const TEXTSTRING *string);</title></rect>
<rect width="12" height="12" x="75" y="225" class="decompiled"><title>uint32_t __cdecl Text_GetScaleH(uint32_t value);</title></rect>
<rect width="12" height="12" x="90" y="225" class="decompiled"><title>uint32_t __cdecl Text_GetScaleV(uint32_t value);</title></rect>
<rect width="12" height="12" x="105" y="225" class="known"><title>void __cdecl MineControl(int16_t mine_num);</title></rect>
<rect width="12" height="12" x="120" y="225" class="known"><title>void __cdecl ControlSpikeWall(int16_t item_num);</title></rect>
<rect width="12" height="12" x="135" y="225" class="known"><title>void __cdecl ControlCeilingSpikes(int16_t item_num);</title></rect>
<rect width="12" height="12" x="150" y="225" class="known"><title>void __cdecl HookControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="165" y="225" class="known"><title>void __cdecl PropellerControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="180" y="225" class="known"><title>void __cdecl SpinningBlade(int16_t item_num);</title></rect>
<rect width="12" height="12" x="195" y="225" class="known"><title>void __cdecl IcicleControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="210" y="225" class="known"><title>void __cdecl InitialiseBlade(int16_t item_num);</title></rect>
<rect width="12" height="12" x="225" y="225" class="known"><title>void __cdecl BladeControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="240" y="225" class="known"><title>void __cdecl InitialiseKillerStatue(int16_t item_num);</title></rect>
<rect width="12" height="12" x="255" y="225" class="known"><title>void __cdecl KillerStatueControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="270" y="225" class="known"><title>void __cdecl SpringBoardControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="285" y="225" class="known"><title>void __cdecl InitialiseRollingBall(int16_t item_num);</title></rect>
<rect width="12" height="12" x="300" y="225" class="known"><title>void __cdecl RollingBallControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="315" y="225" class="known"><title>void __cdecl RollingBallCollision(int16_t item_num, ITEM *litem, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="330" y="225" class="known"><title>void __cdecl SpikeCollision(int16_t item_num, ITEM *litem, COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="345" y="225" class="known"><title>void __cdecl TrapDoorControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="360" y="225" class="known"><title>void __cdecl TrapDoorFloor(ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="12" height="12" x="375" y="225" class="known"><title>void __cdecl TrapDoorCeiling(ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="12" height="12" x="390" y="225" class="known"><title>int32_t __cdecl OnTrapDoor(ITEM *item, int32_t x, int32_t z);</title></rect>
<rect width="12" height="12" x="405" y="225" class="known"><title>void __cdecl Pendulum(int16_t item_num);</title></rect>
<rect width="12" height="12" x="420" y="225" class="known"><title>void __cdecl FallingBlock(int16_t item_num);</title></rect>
<rect width="12" height="12" x="435" y="225" class="known"><title>void __cdecl FallingBlockFloor(ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="12" height="12" x="450" y="225" class="known"><title>void __cdecl FallingBlockCeiling(ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="12" height="12" x="465" y="225" class="known"><title>void __cdecl TeethTrap(int16_t item_num);</title></rect>
<rect width="12" height="12" x="480" y="225" class="known"><title>void __cdecl FallingCeiling(int16_t item_num);</title></rect>
<rect width="12" height="12" x="495" y="225" class="known"><title>void __cdecl DartEmitterControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="510" y="225" class="known"><title>void __cdecl DartsControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="525" y="225" class="known"><title>void __cdecl DartEffectControl(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="540" y="225" class="decompiled"><title>void __cdecl FlameEmitter_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="555" y="225" class="decompiled"><title>void __cdecl Flame_Control(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="570" y="225" class="decompiled"><title>void __cdecl Lara_CatchFire(void);</title></rect>
<rect width="12" height="12" x="585" y="225" class="decompiled"><title>void __cdecl Lara_TouchLava(ITEM *item);</title></rect>
<rect width="12" height="12" x="600" y="225" class="decompiled"><title>void __cdecl EmberEmitter_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="615" y="225" class="decompiled"><title>void __cdecl Ember_Control(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="630" y="225" class="known"><title>void __cdecl GiantYetiControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="645" y="225" class="known"><title>void __cdecl YetiControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="660" y="225" class="decompiled"><title>void __cdecl BGND_Make640x480(uint8_t *bitmap, RGB_888 *palette);</title></rect>
<rect width="12" height="12" x="675" y="225" class="decompiled"><title>int32_t __cdecl BGND_AddTexture(int32_t tile_idx, BYTE *bitmap, int32_t pal_index, RGB_888 *bmp_pal);</title></rect>
<rect width="12" height="12" x="690" y="225" class="decompiled"><title>void __cdecl BGND_GetPageHandles(void);</title></rect>
<rect width="12" height="12" x="705" y="225" class="decompiled"><title>void __cdecl BGND_DrawInGameBlack(void);</title></rect>
<rect width="12" height="12" x="720" y="225" class="decompiled"><title>void __cdecl DrawQuad(float sx, float sy, float width, float height, D3DCOLOR color);</title></rect>
<rect width="12" height="12" x="735" y="225" class="decompiled"><title>void __cdecl BGND_DrawInGameBackground(void);</title></rect>
<rect width="12" height="12" x="0" y="240" class="decompiled"><title>void __cdecl DrawTextureTile(int32_t sx, int32_t sy, int32_t width, int32_t height, HWR_TEXTURE_HANDLE tex_source, int32_t tu, int32_t tv, int32_t t_width, int32_t t_height, D3DCOLOR color0, D3DCOLOR color1, D3DCOLOR color2, D3DCOLOR color3);</title></rect>
<rect width="12" height="12" x="15" y="240" class="decompiled"><title>D3DCOLOR __cdecl BGND_CenterLighting(int32_t x, int32_t y, int32_t width, int32_t height);</title></rect>
<rect width="12" height="12" x="30" y="240" class="decompiled"><title>void __cdecl BGND_Free(void);</title></rect>
<rect width="12" height="12" x="45" y="240" class="decompiled"><title>bool __cdecl BGND_Init(void);</title></rect>
<rect width="12" height="12" x="60" y="240" class="decompiled"><title>void __cdecl Enumerate3DDevices(DISPLAY_ADAPTER *adapter);</title></rect>
<rect width="12" height="12" x="75" y="240" class="decompiled"><title>bool __cdecl D3DCreate(void);</title></rect>
<rect width="12" height="12" x="90" y="240" class="decompiled"><title>HRESULT __stdcall Enum3DDevicesCallback(GUID *lpGuid, LPTSTR lpDeviceDescription, LPTSTR lpDeviceName, LPD3DDEVICEDESC lpD3DHWDeviceDesc, LPD3DDEVICEDESC lpD3DHELDeviceDesc, LPVOID lpContext);</title></rect>
<rect width="12" height="12" x="105" y="240" class="decompiled"><title>bool __cdecl D3DIsSupported(LPD3DDEVICEDESC desc);</title></rect>
<rect width="12" height="12" x="120" y="240" class="decompiled"><title>bool __cdecl D3DSetViewport(void);</title></rect>
<rect width="12" height="12" x="135" y="240" class="decompiled"><title>void __cdecl D3DDeviceCreate(LPDDS lpBackBuffer);</title></rect>
<rect width="12" height="12" x="150" y="240" class="decompiled"><title>void __cdecl Direct3DRelease(void);</title></rect>
<rect width="12" height="12" x="165" y="240" class="decompiled"><title>bool __cdecl Direct3DInit(void);</title></rect>
<rect width="12" height="12" x="180" y="240" class="unused"><title>sub_444990</title></rect>
<rect width="12" height="12" x="195" y="240" class="unused"><title>sub_4449A0</title></rect>
<rect width="12" height="12" x="210" y="240" class="unused"><title>sub_4449D0</title></rect>
<rect width="12" height="12" x="225" y="240" class="unused"><title>sub_444AA0</title></rect>
<rect width="12" height="12" x="240" y="240" class="unused"><title>sub_444AB0</title></rect>
<rect width="12" height="12" x="255" y="240" class="unused"><title>sub_444B20</title></rect>
<rect width="12" height="12" x="270" y="240" class="unused"><title>sub_444BB0</title></rect>
<rect width="12" height="12" x="285" y="240" class="unused"><title>sub_444BC0</title></rect>
<rect width="12" height="12" x="300" y="240" class="decompiled"><title>bool __cdecl DDrawCreate(LPGUID lpGUID);</title></rect>
<rect width="12" height="12" x="315" y="240" class="decompiled"><title>void __cdecl DDrawRelease(void);</title></rect>
<rect width="12" height="12" x="330" y="240" class="decompiled"><title>void __cdecl GameWindowCalculateSizeFromClient(int32_t *width, int32_t *height);</title></rect>
<rect width="12" height="12" x="345" y="240" class="decompiled"><title>void __cdecl GameWindowCalculateSizeFromClientByZero(int32_t *width, int32_t *height);</title></rect>
<rect width="12" height="12" x="360" y="240" class="decompiled"><title>void __cdecl WinVidSetMinWindowSize(int32_t width, int32_t height);</title></rect>
<rect width="12" height="12" x="375" y="240" class="decompiled"><title>void __cdecl WinVidClearMinWindowSize(void);</title></rect>
<rect width="12" height="12" x="390" y="240" class="decompiled"><title>void __cdecl WinVidSetMaxWindowSize(int32_t width, int32_t height);</title></rect>
<rect width="12" height="12" x="405" y="240" class="decompiled"><title>void __cdecl WinVidClearMaxWindowSize(void);</title></rect>
<rect width="12" height="12" x="420" y="240" class="decompiled"><title>int32_t __cdecl CalculateWindowWidth(int32_t width, int32_t height);</title></rect>
<rect width="12" height="12" x="435" y="240" class="decompiled"><title>int32_t __cdecl CalculateWindowHeight(int32_t width, int32_t height);</title></rect>
<rect width="12" height="12" x="450" y="240" class="decompiled"><title>bool __cdecl WinVidGetMinMaxInfo(LPMINMAXINFO info);</title></rect>
<rect width="12" height="12" x="465" y="240" class="decompiled"><title>HWND __cdecl WinVidFindGameWindow(void);</title></rect>
<rect width="12" height="12" x="480" y="240" class="decompiled"><title>bool __cdecl WinVidSpinMessageLoop(bool needWait);</title></rect>
<rect width="12" height="12" x="495" y="240" class="decompiled"><title>void __cdecl WinVidShowGameWindow(int32_t nCmdShow);</title></rect>
<rect width="12" height="12" x="510" y="240" class="decompiled"><title>void __cdecl WinVidHideGameWindow(void);</title></rect>
<rect width="12" height="12" x="525" y="240" class="decompiled"><title>void __cdecl WinVidSetGameWindowSize(int32_t width, int32_t height);</title></rect>
<rect width="12" height="12" x="540" y="240" class="decompiled"><title>bool __cdecl ShowDDrawGameWindow(bool active);</title></rect>
<rect width="12" height="12" x="555" y="240" class="decompiled"><title>bool __cdecl HideDDrawGameWindow(void);</title></rect>
<rect width="12" height="12" x="570" y="240" class="decompiled"><title>HRESULT __cdecl DDrawSurfaceCreate(LPDDSDESC dsp, LPDDS *surface);</title></rect>
<rect width="12" height="12" x="585" y="240" class="decompiled"><title>HRESULT __cdecl DDrawSurfaceRestoreLost(LPDDS surface1, LPDDS surface2, bool blank);</title></rect>
<rect width="12" height="12" x="600" y="240" class="decompiled"><title>bool __cdecl WinVidClearBuffer(LPDDS surface, LPRECT rect, DWORD fill_color);</title></rect>
<rect width="12" height="12" x="615" y="240" class="decompiled"><title>HRESULT __cdecl WinVidBufferLock(LPDDS surface, LPDDSDESC desc, DWORD flags);</title></rect>
<rect width="12" height="12" x="630" y="240" class="decompiled"><title>HRESULT __cdecl WinVidBufferUnlock(LPDDS surface, LPDDSDESC desc);</title></rect>
<rect width="12" height="12" x="645" y="240" class="decompiled"><title>bool __cdecl WinVidCopyBitmapToBuffer(LPDDS surface, const BYTE *bitmap);</title></rect>
<rect width="12" height="12" x="660" y="240" class="decompiled"><title>DWORD __cdecl GetRenderBitDepth(DWORD dwRGBBitCount);</title></rect>
<rect width="12" height="12" x="675" y="240" class="decompiled"><title>void __thiscall WinVidGetColorBitMasks(COLOR_BIT_MASKS *bm, LPDDPIXELFORMAT pixel_format);</title></rect>
<rect width="12" height="12" x="690" y="240" class="decompiled"><title>void __cdecl BitMaskGetNumberOfBits(uint32_t bit_mask, uint32_t *bit_depth, uint32_t *bit_offset);</title></rect>
<rect width="12" height="12" x="705" y="240" class="decompiled"><title>DWORD __cdecl CalculateCompatibleColor(COLOR_BIT_MASKS *mask, int32_t red, int32_t green, int32_t blue, int32_t alpha);</title></rect>
<rect width="12" height="12" x="720" y="240" class="decompiled"><title>bool __cdecl WinVidGetDisplayMode(DISPLAY_MODE *disp_mode);</title></rect>
<rect width="12" height="12" x="735" y="240" class="decompiled"><title>bool __cdecl WinVidGoFullScreen(DISPLAY_MODE *disp_mode);</title></rect>
<rect width="12" height="12" x="0" y="255" class="decompiled"><title>bool __cdecl WinVidGoWindowed(int32_t width, int32_t height, DISPLAY_MODE *dispMode);</title></rect>
<rect width="12" height="12" x="15" y="255" class="decompiled"><title>void __cdecl WinVidSetDisplayAdapter(DISPLAY_ADAPTER *disp_adapter);</title></rect>
<rect width="12" height="12" x="30" y="255" class="decompiled"><title>bool __thiscall CompareVideoModes(const DISPLAY_MODE *mode1, const DISPLAY_MODE *mode2);</title></rect>
<rect width="12" height="12" x="45" y="255" class="decompiled"><title>bool __cdecl WinVidGetDisplayModes(void);</title></rect>
<rect width="12" height="12" x="60" y="255" class="decompiled"><title>HRESULT __stdcall EnumDisplayModesCallback(LPDDSDESC lpDDSurfaceDesc, LPVOID lpContext);</title></rect>
<rect width="12" height="12" x="75" y="255" class="decompiled"><title>bool __cdecl WinVidInit(void);</title></rect>
<rect width="12" height="12" x="90" y="255" class="decompiled"><title>bool __cdecl WinVidGetDisplayAdapters(void);</title></rect>
<rect width="12" height="12" x="105" y="255" class="decompiled"><title>void __thiscall S_FlaggedString_Delete(STRING_FLAGGED *string);</title></rect>
<rect width="12" height="12" x="120" y="255" class="decompiled"><title>bool __cdecl EnumerateDisplayAdapters(DISPLAY_ADAPTER_LIST *displayAdapterList);</title></rect>
<rect width="12" height="12" x="135" y="255" class="decompiled"><title>BOOL __stdcall EnumDisplayAdaptersCallback(GUID *lpGUID, LPTSTR lpDriverDescription, LPTSTR lpDriverName, LPVOID lpContext);</title></rect>
<rect width="12" height="12" x="150" y="255" class="decompiled"><title>void __thiscall S_FlaggedString_InitAdapter(DISPLAY_ADAPTER *adapter);</title></rect>
<rect width="12" height="12" x="165" y="255" class="decompiled"><title>bool __cdecl WinVidRegisterGameWindowClass(void);</title></rect>
<rect width="12" height="12" x="180" y="255" class="decompiled"><title>LRESULT __stdcall WinVidGameWindowProc(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="12" height="12" x="195" y="255" class="decompiled"><title>void __cdecl WinVidResizeGameWindow(HWND hWnd, int32_t edge, LPRECT rect);</title></rect>
<rect width="12" height="12" x="210" y="255" class="decompiled"><title>bool __cdecl WinVidCheckGameWindowPalette(HWND hWnd);</title></rect>
<rect width="12" height="12" x="225" y="255" class="decompiled"><title>bool __cdecl WinVidCreateGameWindow(void);</title></rect>
<rect width="12" height="12" x="240" y="255" class="decompiled"><title>void __cdecl WinVidFreeWindow(void);</title></rect>
<rect width="12" height="12" x="255" y="255" class="decompiled"><title>void __cdecl WinVidExitMessage(void);</title></rect>
<rect width="12" height="12" x="270" y="255" class="decompiled"><title>DISPLAY_ADAPTER_NODE *__cdecl WinVidGetDisplayAdapter(GUID *lpGuid);</title></rect>
<rect width="12" height="12" x="285" y="255" class="decompiled"><title>void __cdecl WinVidStart(void);</title></rect>
<rect width="12" height="12" x="300" y="255" class="decompiled"><title>void __cdecl WinVidFinish(void);</title></rect>
<rect width="12" height="12" x="315" y="255" class="decompiled"><title>void __thiscall DisplayModeListInit(DISPLAY_MODE_LIST *pList);</title></rect>
<rect width="12" height="12" x="330" y="255" class="decompiled"><title>void __thiscall DisplayModeListDelete(DISPLAY_MODE_LIST *pList);</title></rect>
<rect width="12" height="12" x="345" y="255" class="decompiled"><title>DISPLAY_MODE *__thiscall InsertDisplayMode(DISPLAY_MODE_LIST *modeList, DISPLAY_MODE_NODE *before);</title></rect>
<rect width="12" height="12" x="360" y="255" class="decompiled"><title>DISPLAY_MODE *__thiscall InsertDisplayModeInListHead(DISPLAY_MODE_LIST *modeList);</title></rect>
<rect width="12" height="12" x="375" y="255" class="decompiled"><title>DISPLAY_MODE *__thiscall InsertDisplayModeInListTail(DISPLAY_MODE_LIST *modeList);</title></rect>
<rect width="12" height="12" x="390" y="255" class="unused"><title>sub_4470B0</title></rect>
<rect width="12" height="12" x="405" y="255" class="unused"><title>sub_4470C0</title></rect>
<rect width="12" height="12" x="420" y="255" class="unused"><title>sub_4470F0</title></rect>
<rect width="12" height="12" x="435" y="255" class="unused"><title>sub_447160</title></rect>
<rect width="12" height="12" x="450" y="255" class="unused"><title>sub_447170</title></rect>
<rect width="12" height="12" x="465" y="255" class="unused"><title>sub_4471C0</title></rect>
<rect width="12" height="12" x="480" y="255" class="decompiled"><title>bool __cdecl DInputCreate(void);</title></rect>
<rect width="12" height="12" x="495" y="255" class="decompiled"><title>void __cdecl DInputRelease(void);</title></rect>
<rect width="12" height="12" x="510" y="255" class="decompiled"><title>void __cdecl WinInReadKeyboard(LPVOID lpInputData);</title></rect>
<rect width="12" height="12" x="525" y="255" class="known"><title>DWORD __cdecl WinInReadJoystick(int32_t *x, int32_t *y);</title></rect>
<rect width="12" height="12" x="540" y="255" class="unused"><title>sub_4473A0</title></rect>
<rect width="12" height="12" x="555" y="255" class="known"><title>bool __cdecl WinInputInit(void);</title></rect>
<rect width="12" height="12" x="570" y="255" class="known"><title>bool __cdecl DInputEnumDevices(JOYSTICK_LIST *joystickList);</title></rect>
<rect width="12" height="12" x="585" y="255" class="known"><title>BOOL __stdcall DInputEnumDevicesCallback(LPCDIDEVICEINSTANCE lpddi, LPVOID pvRef);</title></rect>
<rect width="12" height="12" x="600" y="255" class="decompiled"><title>void __thiscall S_FlaggedString_Create(STRING_FLAGGED *string, int32_t size);</title></rect>
<rect width="12" height="12" x="615" y="255" class="known"><title>JOYSTICK_NODE *__cdecl GetJoystick(GUID *lpGuid);</title></rect>
<rect width="12" height="12" x="630" y="255" class="known"><title>void __cdecl DInputKeyboardCreate(void);</title></rect>
<rect width="12" height="12" x="645" y="255" class="known"><title>void __cdecl DInputKeyboardRelease(void);</title></rect>
<rect width="12" height="12" x="660" y="255" class="known"><title>bool __cdecl DInputJoystickCreate(void);</title></rect>
<rect width="12" height="12" x="675" y="255" class="known"><title>void __cdecl WinInStart(void);</title></rect>
<rect width="12" height="12" x="690" y="255" class="known"><title>void __cdecl WinInFinish(void);</title></rect>
<rect width="12" height="12" x="705" y="255" class="known"><title>void __cdecl WinInRunControlPanel(HWND hWnd);</title></rect>
<rect width="12" height="12" x="720" y="255" class="known"><title>void __cdecl IncreaseScreenSize(void);</title></rect>
<rect width="12" height="12" x="735" y="255" class="known"><title>void __cdecl DecreaseScreenSize(void);</title></rect>
<rect width="12" height="12" x="0" y="270" class="known"><title>void __cdecl setup_screen_size(void);</title></rect>
<rect width="12" height="12" x="15" y="270" class="known"><title>void __cdecl TempVideoAdjust(int32_t hires, double sizer);</title></rect>
<rect width="12" height="12" x="30" y="270" class="known"><title>void __cdecl TempVideoRemove(void);</title></rect>
<rect width="12" height="12" x="45" y="270" class="known"><title>void __cdecl S_FadeInInventory(BOOL isFade);</title></rect>
<rect width="12" height="12" x="60" y="270" class="known"><title>void __cdecl S_FadeOutInventory(BOOL isFade);</title></rect>
<rect width="12" height="12" x="75" y="270" class="unused"><title>sub_447A80</title></rect>
<rect width="12" height="12" x="90" y="270" class="unused"><title>sub_447A90</title></rect>
<rect width="12" height="12" x="105" y="270" class="unused"><title>sub_447AC0</title></rect>
<rect width="12" height="12" x="120" y="270" class="unused"><title>sub_447B30</title></rect>
<rect width="12" height="12" x="135" y="270" class="unused"><title>sub_447B40</title></rect>
<rect width="12" height="12" x="150" y="270" class="unused"><title>sub_447B90</title></rect>
<rect width="12" height="12" x="165" y="270" class="decompiled"><title>const SOUND_ADAPTER_NODE *__cdecl S_Audio_Sample_GetAdapter(GUID *guid);</title></rect>
<rect width="12" height="12" x="180" y="270" class="decompiled"><title>void __cdecl S_Audio_Sample_CloseAllTracks(void);</title></rect>
<rect width="12" height="12" x="195" y="270" class="decompiled"><title>bool __cdecl S_Audio_Sample_Load(int32_t sample_id, LPWAVEFORMATEX format, const void *data, int32_t data_size);</title></rect>
<rect width="12" height="12" x="210" y="270" class="decompiled"><title>bool __cdecl S_Audio_Sample_IsTrackPlaying(int32_t track_id);</title></rect>
<rect width="12" height="12" x="225" y="270" class="decompiled"><title>int32_t __cdecl S_Audio_Sample_Play(int32_t sample_id, int32_t volume, int32_t pitch, int32_t pan, int32_t flags);</title></rect>
<rect width="12" height="12" x="240" y="270" class="decompiled"><title>int32_t __cdecl S_Audio_Sample_GetFreeTrackIndex(void);</title></rect>
<rect width="12" height="12" x="255" y="270" class="decompiled"><title>void __cdecl S_Audio_Sample_AdjustTrackVolumeAndPan(int32_t track_id, int32_t volume, int32_t pan);</title></rect>
<rect width="12" height="12" x="270" y="270" class="decompiled"><title>void __cdecl S_Audio_Sample_AdjustTrackPitch(int32_t track_id, int32_t pitch);</title></rect>
<rect width="12" height="12" x="285" y="270" class="decompiled"><title>void __cdecl S_Audio_Sample_CloseTrack(int32_t track_id);</title></rect>
<rect width="12" height="12" x="300" y="270" class="unused"><title>sub_447FA0</title></rect>
<rect width="12" height="12" x="315" y="270" class="decompiled"><title>bool __cdecl S_Audio_Sample_Init(void);</title></rect>
<rect width="12" height="12" x="330" y="270" class="decompiled"><title>bool __cdecl S_Audio_Sample_DSoundEnumerate(SOUND_ADAPTER_LIST *adapter_list);</title></rect>
<rect width="12" height="12" x="345" y="270" class="decompiled"><title>BOOL __stdcall S_Audio_Sample_DSoundEnumCallback(LPGUID guid, LPCTSTR description, LPCTSTR module, LPVOID context);</title></rect>
<rect width="12" height="12" x="360" y="270" class="decompiled"><title>void __cdecl S_Audio_Sample_Init2(HWND hwnd);</title></rect>
<rect width="12" height="12" x="375" y="270" class="decompiled"><title>bool __cdecl S_Audio_Sample_DSoundCreate(GUID *guid);</title></rect>
<rect width="12" height="12" x="390" y="270" class="decompiled"><title>bool __cdecl S_Audio_Sample_DSoundBufferTest(void);</title></rect>
<rect width="12" height="12" x="405" y="270" class="decompiled"><title>void __cdecl S_Audio_Sample_Shutdown(void);</title></rect>
<rect width="12" height="12" x="420" y="270" class="decompiled"><title>bool __cdecl S_Audio_Sample_IsEnabled(void);</title></rect>
<rect width="12" height="12" x="435" y="270" class="unused"><title>sub_448410</title></rect>
<rect width="12" height="12" x="450" y="270" class="unused"><title>sub_448420</title></rect>
<rect width="12" height="12" x="465" y="270" class="decompiled"><title>void __cdecl CreateScreenBuffers(void);</title></rect>
<rect width="12" height="12" x="480" y="270" class="decompiled"><title>void __cdecl CreatePrimarySurface(void);</title></rect>
<rect width="12" height="12" x="495" y="270" class="decompiled"><title>void __cdecl CreateBackBuffer(void);</title></rect>
<rect width="12" height="12" x="510" y="270" class="decompiled"><title>void __cdecl CreateClipper(void);</title></rect>
<rect width="12" height="12" x="525" y="270" class="decompiled"><title>void __cdecl CreateWindowPalette(void);</title></rect>
<rect width="12" height="12" x="540" y="270" class="decompiled"><title>void __cdecl CreateZBuffer(void);</title></rect>
<rect width="12" height="12" x="555" y="270" class="decompiled"><title>DWORD __cdecl GetZBufferDepth(void);</title></rect>
<rect width="12" height="12" x="570" y="270" class="decompiled"><title>void __cdecl CreateRenderBuffer(void);</title></rect>
<rect width="12" height="12" x="585" y="270" class="decompiled"><title>void __cdecl CreatePictureBuffer(void);</title></rect>
<rect width="12" height="12" x="600" y="270" class="decompiled"><title>void __cdecl ClearBuffers(DWORD flags, DWORD fill_color);</title></rect>
<rect width="12" height="12" x="615" y="270" class="decompiled"><title>void __cdecl RestoreLostBuffers(void);</title></rect>
<rect width="12" height="12" x="630" y="270" class="decompiled"><title>void __cdecl UpdateFrame(bool need_run_message_loop, LPRECT rect);</title></rect>
<rect width="12" height="12" x="645" y="270" class="decompiled"><title>void __cdecl WaitPrimaryBufferFlip(void);</title></rect>
<rect width="12" height="12" x="660" y="270" class="decompiled"><title>bool __cdecl RenderInit(void);</title></rect>
<rect width="12" height="12" x="675" y="270" class="decompiled"><title>void __cdecl RenderStart(bool is_reset);</title></rect>
<rect width="12" height="12" x="690" y="270" class="decompiled"><title>void __cdecl RenderFinish(bool need_to_clear_textures);</title></rect>
<rect width="12" height="12" x="705" y="270" class="decompiled"><title>bool __cdecl ApplySettings(APP_SETTINGS *new_settings);</title></rect>
<rect width="12" height="12" x="720" y="270" class="decompiled"><title>void __cdecl FmvBackToGame(void);</title></rect>
<rect width="12" height="12" x="735" y="270" class="decompiled"><title>void __cdecl GameApplySettings(APP_SETTINGS *new_settings);</title></rect>
<rect width="12" height="12" x="0" y="285" class="decompiled"><title>void __cdecl UpdateGameResolution(void);</title></rect>
<rect width="12" height="12" x="15" y="285" class="decompiled"><title>LPCTSTR __cdecl DecodeErrorMessage(DWORD error_code);</title></rect>
<rect width="12" height="12" x="30" y="285" class="known"><title>BOOL __cdecl ReadFileSync(HANDLE handle, LPVOID lpBuffer, DWORD nBytesToRead, LPDWORD lpnBytesRead, LPOVERLAPPED lpOverlapped);</title></rect>
<rect width="12" height="12" x="45" y="285" class="decompiled"><title>BOOL __cdecl Level_LoadTexturePages(HANDLE handle);</title></rect>
<rect width="12" height="12" x="60" y="285" class="decompiled"><title>BOOL __cdecl Level_LoadRooms(HANDLE handle);</title></rect>
<rect width="12" height="12" x="75" y="285" class="known"><title>void __cdecl AdjustTextureUVs(bool reset_uv_add);</title></rect>
<rect width="12" height="12" x="90" y="285" class="decompiled"><title>BOOL __cdecl Level_LoadObjects(HANDLE handle);</title></rect>
<rect width="12" height="12" x="105" y="285" class="decompiled"><title>BOOL __cdecl Level_LoadSprites(HANDLE handle);</title></rect>
<rect width="12" height="12" x="120" y="285" class="decompiled"><title>BOOL __cdecl Level_LoadItems(HANDLE handle);</title></rect>
<rect width="12" height="12" x="135" y="285" class="decompiled"><title>BOOL __cdecl Level_LoadDepthQ(HANDLE handle);</title></rect>
<rect width="12" height="12" x="150" y="285" class="decompiled"><title>BOOL __cdecl Level_LoadPalettes(HANDLE handle);</title></rect>
<rect width="12" height="12" x="165" y="285" class="decompiled"><title>BOOL __cdecl Level_LoadCameras(HANDLE handle);</title></rect>
<rect width="12" height="12" x="180" y="285" class="decompiled"><title>BOOL __cdecl Level_LoadSoundEffects(HANDLE handle);</title></rect>
<rect width="12" height="12" x="195" y="285" class="decompiled"><title>BOOL __cdecl Level_LoadBoxes(HANDLE handle);</title></rect>
<rect width="12" height="12" x="210" y="285" class="decompiled"><title>BOOL __cdecl Level_LoadAnimatedTextures(HANDLE handle);</title></rect>
<rect width="12" height="12" x="225" y="285" class="decompiled"><title>BOOL __cdecl Level_LoadCinematic(HANDLE handle);</title></rect>
<rect width="12" height="12" x="240" y="285" class="decompiled"><title>BOOL __cdecl Level_LoadDemo(HANDLE handle);</title></rect>
<rect width="12" height="12" x="255" y="285" class="decompiled"><title>void __cdecl Level_LoadDemoExternal(LPCTSTR level_name);</title></rect>
<rect width="12" height="12" x="270" y="285" class="decompiled"><title>BOOL __cdecl Level_LoadSamples(HANDLE handle);</title></rect>
<rect width="12" height="12" x="285" y="285" class="known"><title>void __cdecl ChangeFileNameExtension(char *file_name, const char *file_ext);</title></rect>
<rect width="12" height="12" x="300" y="285" class="known"><title>LPCTSTR __cdecl GetFullPath(LPCTSTR file_name);</title></rect>
<rect width="12" height="12" x="315" y="285" class="known"><title>BOOL __cdecl SelectDrive(void);</title></rect>
<rect width="12" height="12" x="330" y="285" class="decompiled"><title>bool __cdecl Level_Load(const char *file_name, int32_t level_num);</title></rect>
<rect width="12" height="12" x="345" y="285" class="known"><title>BOOL __cdecl S_LoadLevelFile(LPCTSTR file_name, int32_t level_num, GAMEFLOW_LEVEL_TYPE level_type);</title></rect>
<rect width="12" height="12" x="360" y="285" class="known"><title>void __cdecl S_UnloadLevelFile(void);</title></rect>
<rect width="12" height="12" x="375" y="285" class="known"><title>void __cdecl S_AdjustTexelCoordinates(void);</title></rect>
<rect width="12" height="12" x="390" y="285" class="known"><title>BOOL __cdecl S_ReloadLevelGraphics(BOOL reload_palettes, BOOL reload_tex_pages);</title></rect>
<rect width="12" height="12" x="405" y="285" class="decompiled"><title>BOOL __cdecl GF_ReadStringTable(DWORD count, char **string_table, char **string_buf, LPDWORD buf_size, HANDLE handle);</title></rect>
<rect width="12" height="12" x="420" y="285" class="decompiled"><title>BOOL __cdecl GF_LoadFromFile(const char *file_name);</title></rect>
<rect width="12" height="12" x="435" y="285" class="known"><title>bool __cdecl PlayFMV(const char *file_name);</title></rect>
<rect width="12" height="12" x="450" y="285" class="known"><title>void __cdecl WinPlayFMV(const char *file_name, bool is_playback);</title></rect>
<rect width="12" height="12" x="465" y="285" class="known"><title>void __cdecl WinStopFMV(bool is_playback);</title></rect>
<rect width="12" height="12" x="480" y="285" class="known"><title>bool __cdecl IntroFMV(const char *file_name1, const char *file_name2);</title></rect>
<rect width="12" height="12" x="495" y="285" class="known"><title>uint16_t __cdecl S_COLOR(int32_t red, int32_t green, int32_t blue);</title></rect>
<rect width="12" height="12" x="510" y="285" class="known"><title>void __cdecl S_DrawScreenLine(int32_t x, int32_t y, int32_t z, int32_t x_len, int32_t y_len, BYTE color_idx, D3DCOLOR *gour, uint16_t flags);</title></rect>
<rect width="12" height="12" x="525" y="285" class="known"><title>void __cdecl S_DrawScreenBox(int32_t sx, int32_t sy, int32_t z, int32_t width, int32_t height, BYTE color_idx, const GOURAUD_OUTLINE *gour, uint16_t flags);</title></rect>
<rect width="12" height="12" x="540" y="285" class="known"><title>void __cdecl S_DrawScreenFBox(int32_t sx, int32_t sy, int32_t z, int32_t width, int32_t height, BYTE color_idx, const GOURAUD_FILL *gour, uint16_t flags);</title></rect>
<rect width="12" height="12" x="555" y="285" class="known"><title>void __cdecl S_FinishInventory(void);</title></rect>
<rect width="12" height="12" x="570" y="285" class="known"><title>void __cdecl S_FadeToBlack(void);</title></rect>
<rect width="12" height="12" x="585" y="285" class="known"><title>void __cdecl S_Wait(int32_t timeout, BOOL input_check);</title></rect>
<rect width="12" height="12" x="600" y="285" class="known"><title>bool __cdecl S_PlayFMV(const char *file_name);</title></rect>
<rect width="12" height="12" x="615" y="285" class="known"><title>bool __cdecl S_IntroFMV(const char *file_name1, const char *file_name2);</title></rect>
<rect width="12" height="12" x="630" y="285" class="decompiled"><title>int16_t __cdecl Game_Start(int32_t level_num, GAMEFLOW_LEVEL_TYPE level_type);</title></rect>
<rect width="12" height="12" x="645" y="285" class="decompiled"><title>int32_t __cdecl Game_Loop(bool demo_mode);</title></rect>
<rect width="12" height="12" x="660" y="285" class="decompiled"><title>int32_t __cdecl LevelCompleteSequence(void);</title></rect>
<rect width="12" height="12" x="675" y="285" class="decompiled"><title>int32_t __cdecl LevelStats(int32_t level_num);</title></rect>
<rect width="12" height="12" x="690" y="285" class="decompiled"><title>int32_t __cdecl GameStats(int32_t level_num);</title></rect>
<rect width="12" height="12" x="705" y="285" class="decompiled"><title>int32_t __cdecl Random_GetControl(void);</title></rect>
<rect width="12" height="12" x="720" y="285" class="decompiled"><title>void __cdecl Random_SeedControl(int32_t seed);</title></rect>
<rect width="12" height="12" x="735" y="285" class="decompiled"><title>int32_t __cdecl Random_GetDraw(void);</title></rect>
<rect width="12" height="12" x="0" y="300" class="decompiled"><title>void __cdecl Random_SeedDraw(int32_t seed);</title></rect>
<rect width="12" height="12" x="15" y="300" class="known"><title>void __cdecl GetValidLevelsList(REQUEST_INFO *req);</title></rect>
<rect width="12" height="12" x="30" y="300" class="known"><title>void __cdecl GetSavedGamesList(REQUEST_INFO *req);</title></rect>
<rect width="12" height="12" x="45" y="300" class="known"><title>void __cdecl DisplayCredits(void);</title></rect>
<rect width="12" height="12" x="60" y="300" class="known"><title>BOOL __cdecl S_FrontEndCheck(void);</title></rect>
<rect width="12" height="12" x="75" y="300" class="known"><title>int32_t __cdecl S_SaveGame(const void *save_data, uint32_t save_size, int32_t slot_num);</title></rect>
<rect width="12" height="12" x="90" y="300" class="known"><title>int32_t __cdecl S_LoadGame(void *save_data, uint32_t save_size, int32_t slot_num);</title></rect>
<rect width="12" height="12" x="105" y="300" class="decompiled"><title>void __cdecl HWR_InitState(void);</title></rect>
<rect width="12" height="12" x="120" y="300" class="decompiled"><title>void __cdecl HWR_ResetTexSource(void);</title></rect>
<rect width="12" height="12" x="135" y="300" class="decompiled"><title>void __cdecl HWR_ResetColorKey(void);</title></rect>
<rect width="12" height="12" x="150" y="300" class="decompiled"><title>void __cdecl HWR_ResetZBuffer(void);</title></rect>
<rect width="12" height="12" x="165" y="300" class="decompiled"><title>void __cdecl HWR_TexSource(HWR_TEXTURE_HANDLE tex_source);</title></rect>
<rect width="12" height="12" x="180" y="300" class="decompiled"><title>void __cdecl HWR_EnableColorKey(bool state);</title></rect>
<rect width="12" height="12" x="195" y="300" class="decompiled"><title>void __cdecl HWR_EnableZBuffer(bool z_write_enable, bool z_enable);</title></rect>
<rect width="12" height="12" x="210" y="300" class="decompiled"><title>void __cdecl HWR_BeginScene(void);</title></rect>
<rect width="12" height="12" x="225" y="300" class="decompiled"><title>void __cdecl HWR_DrawPolyList(void);</title></rect>
<rect width="12" height="12" x="240" y="300" class="decompiled"><title>void __cdecl HWR_LoadTexturePages(int32_t pages_count, void *pages_buf, RGB_888 *palette);</title></rect>
<rect width="12" height="12" x="255" y="300" class="decompiled"><title>void __cdecl HWR_FreeTexturePages(void);</title></rect>
<rect width="12" height="12" x="270" y="300" class="decompiled"><title>void __cdecl HWR_GetPageHandles(void);</title></rect>
<rect width="12" height="12" x="285" y="300" class="decompiled"><title>bool __cdecl HWR_VertexBufferFull(void);</title></rect>
<rect width="12" height="12" x="300" y="300" class="decompiled"><title>bool __cdecl HWR_Init(void);</title></rect>
<rect width="12" height="12" x="315" y="300" class="known"><title>BOOL __cdecl S_InitialiseSystem(void);</title></rect>
<rect width="12" height="12" x="330" y="300" class="known"><title>void __cdecl GameBuf_Shutdown(void);</title></rect>
<rect width="12" height="12" x="345" y="300" class="known"><title>void __cdecl init_game_malloc(void);</title></rect>
<rect width="12" height="12" x="360" y="300" class="known"><title>void *__cdecl game_malloc(size_t alloc_size, GAME_BUFFER buf_index);</title></rect>
<rect width="12" height="12" x="375" y="300" class="known"><title>void __cdecl game_free(size_t free_size);</title></rect>
<rect width="12" height="12" x="390" y="300" class="known"><title>void __cdecl CalculateWibbleTable(void);</title></rect>
<rect width="12" height="12" x="405" y="300" class="decompiled"><title>void __cdecl Random_Seed(void);</title></rect>
<rect width="12" height="12" x="420" y="300" class="decompiled"><title>BOOL __cdecl S_Input_Key(KEYMAP keymap);</title></rect>
<rect width="12" height="12" x="435" y="300" class="decompiled"><title>bool __cdecl Input_Update(void);</title></rect>
<rect width="12" height="12" x="450" y="300" class="decompiled"><title>int32_t __cdecl RenderErrorBox(int32_t error_code);</title></rect>
<rect width="12" height="12" x="465" y="300" class="decompiled"><title>int32_t __stdcall WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPTSTR lpCmdLine, int32_t nShowCmd);</title></rect>
<rect width="12" height="12" x="480" y="300" class="unused"><title>sub_44E6F0</title></rect>
<rect width="12" height="12" x="495" y="300" class="decompiled"><title>int32_t __cdecl GameInit(bool skip_cd_init);</title></rect>
<rect width="12" height="12" x="510" y="300" class="decompiled"><title>void __cdecl Shell_Cleanup(void);</title></rect>
<rect width="12" height="12" x="525" y="300" class="decompiled"><title>int32_t __cdecl WinGameStart(void);</title></rect>
<rect width="12" height="12" x="540" y="300" class="decompiled"><title>void __cdecl Shell_Shutdown(void);</title></rect>
<rect width="12" height="12" x="555" y="300" class="unused"><title>sub_44E860</title></rect>
<rect width="12" height="12" x="570" y="300" class="unused"><title>sub_44E880</title></rect>
<rect width="12" height="12" x="585" y="300" class="decompiled"><title>void __cdecl Shell_ExitSystem(const char *message);</title></rect>
<rect width="12" height="12" x="600" y="300" class="decompiled"><title>void __cdecl ScreenshotPCX(void);</title></rect>
<rect width="12" height="12" x="615" y="300" class="decompiled"><title>DWORD __cdecl CompPCX(BYTE *bitmap, DWORD width, DWORD height, RGB_888 *palette, BYTE **pcx_data);</title></rect>
<rect width="12" height="12" x="630" y="300" class="decompiled"><title>DWORD __cdecl EncodeLinePCX(BYTE *src, DWORD width, BYTE *dst);</title></rect>
<rect width="12" height="12" x="645" y="300" class="decompiled"><title>DWORD __cdecl EncodePutPCX(BYTE value, BYTE num, BYTE *buffer);</title></rect>
<rect width="12" height="12" x="660" y="300" class="decompiled"><title>void __cdecl Screenshot(LPDDS screen);</title></rect>
<rect width="12" height="12" x="675" y="300" class="decompiled"><title>void __cdecl Option_DoInventory(INVENTORY_ITEM *item);</title></rect>
<rect width="12" height="12" x="690" y="300" class="decompiled"><title>void __cdecl Option_Passport(INVENTORY_ITEM *item);</title></rect>
<rect width="12" height="12" x="705" y="300" class="decompiled"><title>void __cdecl Option_Detail(INVENTORY_ITEM *item);</title></rect>
<rect width="12" height="12" x="720" y="300" class="decompiled"><title>void __cdecl Option_Sound(INVENTORY_ITEM *item);</title></rect>
<rect width="12" height="12" x="735" y="300" class="decompiled"><title>void __cdecl Option_Compass(INVENTORY_ITEM *item);</title></rect>
<rect width="12" height="12" x="0" y="315" class="decompiled"><title>void __cdecl Option_Controls_FlashConflicts(void);</title></rect>
<rect width="12" height="12" x="15" y="315" class="decompiled"><title>void __cdecl Option_Controls_DefaultConflict(void);</title></rect>
<rect width="12" height="12" x="30" y="315" class="decompiled"><title>void __cdecl Option_Controls(INVENTORY_ITEM *item);</title></rect>
<rect width="12" height="12" x="45" y="315" class="decompiled"><title>void __cdecl Option_Controls_ShowControls(void);</title></rect>
<rect width="12" height="12" x="60" y="315" class="decompiled"><title>void __cdecl Option_Controls_UpdateText(void);</title></rect>
<rect width="12" height="12" x="75" y="315" class="decompiled"><title>void __cdecl S_RemoveCtrlText(void);</title></rect>
<rect width="12" height="12" x="90" y="315" class="known"><title>int32_t __cdecl GetRenderHeight(void);</title></rect>
<rect width="12" height="12" x="105" y="315" class="known"><title>int32_t __cdecl GetRenderWidth(void);</title></rect>
<rect width="12" height="12" x="120" y="315" class="known"><title>void __cdecl S_InitialisePolyList(BOOL clear_back_buffer);</title></rect>
<rect width="12" height="12" x="135" y="315" class="known"><title>DWORD __cdecl S_DumpScreen(void);</title></rect>
<rect width="12" height="12" x="150" y="315" class="known"><title>void __cdecl S_ClearScreen(void);</title></rect>
<rect width="12" height="12" x="165" y="315" class="known"><title>void __cdecl S_InitialiseScreen(GAMEFLOW_LEVEL_TYPE level_type);</title></rect>
<rect width="12" height="12" x="180" y="315" class="known"><title>void __cdecl S_OutputPolyList(void);</title></rect>
<rect width="12" height="12" x="195" y="315" class="known"><title>int32_t __cdecl S_GetObjectBounds(const BOUNDS_16 *bounds);</title></rect>
<rect width="12" height="12" x="210" y="315" class="known"><title>void __cdecl S_InsertBackPolygon(int32_t x0, int32_t y0, int32_t x1, int32_t y1);</title></rect>
<rect width="12" height="12" x="225" y="315" class="known"><title>void __cdecl S_PrintShadow(int16_t radius, const BOUNDS_16 *bounds, const ITEM *item);</title></rect>
<rect width="12" height="12" x="240" y="315" class="known"><title>void __cdecl S_CalculateLight(int32_t x, int32_t y, int32_t z, int16_t room_num);</title></rect>
<rect width="12" height="12" x="255" y="315" class="known"><title>void __cdecl S_CalculateStaticLight(int16_t adder);</title></rect>
<rect width="12" height="12" x="270" y="315" class="known"><title>void __cdecl S_CalculateStaticMeshLight(int32_t x, int32_t y, int32_t z, int32_t shade_1, int32_t shade_2, ROOM *room);</title></rect>
<rect width="12" height="12" x="285" y="315" class="known"><title>void __cdecl S_LightRoom(ROOM *room);</title></rect>
<rect width="12" height="12" x="300" y="315" class="known"><title>void __cdecl S_DrawHealthBar(int32_t percent);</title></rect>
<rect width="12" height="12" x="315" y="315" class="known"><title>void __cdecl S_DrawAirBar(int32_t percent);</title></rect>
<rect width="12" height="12" x="330" y="315" class="known"><title>void __cdecl AnimateTextures(int32_t ticks);</title></rect>
<rect width="12" height="12" x="345" y="315" class="known"><title>void __cdecl S_SetupBelowWater(BOOL underwater);</title></rect>
<rect width="12" height="12" x="360" y="315" class="known"><title>void __cdecl S_SetupAboveWater(BOOL underwater);</title></rect>
<rect width="12" height="12" x="375" y="315" class="known"><title>void __cdecl S_AnimateTextures(int32_t ticks);</title></rect>
<rect width="12" height="12" x="390" y="315" class="known"><title>void __cdecl S_DisplayPicture(const char *file_name, BOOL is_title);</title></rect>
<rect width="12" height="12" x="405" y="315" class="known"><title>void __cdecl S_SyncPictureBufferPalette(void);</title></rect>
<rect width="12" height="12" x="420" y="315" class="known"><title>void __cdecl S_DontDisplayPicture(void);</title></rect>
<rect width="12" height="12" x="435" y="315" class="known"><title>void __cdecl ScreenDump(void);</title></rect>
<rect width="12" height="12" x="450" y="315" class="known"><title>void __cdecl ScreenPartialDump(void);</title></rect>
<rect width="12" height="12" x="465" y="315" class="known"><title>void __cdecl FadeToPal(int32_t fade_value, RGB_888 *palette);</title></rect>
<rect width="12" height="12" x="480" y="315" class="known"><title>void __cdecl ScreenClear(bool is_phd_win_size);</title></rect>
<rect width="12" height="12" x="495" y="315" class="known"><title>void __cdecl S_CopyScreenToBuffer(void);</title></rect>
<rect width="12" height="12" x="510" y="315" class="known"><title>void __cdecl S_CopyBufferToScreen(void);</title></rect>
<rect width="12" height="12" x="525" y="315" class="known"><title>BOOL __cdecl DecompPCX(const uint8_t *pcx, size_t pcx_size, LPBYTE pic, RGB_888 *pal);</title></rect>
<rect width="12" height="12" x="540" y="315" class="unused"><title>sub_4523A0</title></rect>
<rect width="12" height="12" x="555" y="315" class="unused"><title>sub_4523B0</title></rect>
<rect width="12" height="12" x="570" y="315" class="known"><title>bool __cdecl OpenGameRegistryKey(LPCTSTR key);</title></rect>
<rect width="12" height="12" x="585" y="315" class="known"><title>LONG __cdecl CloseGameRegistryKey(void);</title></rect>
<rect width="12" height="12" x="600" y="315" class="known"><title>bool __cdecl SE_WriteAppSettings(APP_SETTINGS *settings);</title></rect>
<rect width="12" height="12" x="615" y="315" class="known"><title>int32_t __cdecl SE_ReadAppSettings(APP_SETTINGS *settings);</title></rect>
<rect width="12" height="12" x="630" y="315" class="known"><title>bool __cdecl SE_GraphicsTestStart(void);</title></rect>
<rect width="12" height="12" x="645" y="315" class="known"><title>void __cdecl SE_GraphicsTestFinish(void);</title></rect>
<rect width="12" height="12" x="660" y="315" class="known"><title>int32_t __cdecl SE_GraphicsTestExecute(void);</title></rect>
<rect width="12" height="12" x="675" y="315" class="known"><title>int32_t __cdecl SE_GraphicsTest(void);</title></rect>
<rect width="12" height="12" x="690" y="315" class="known"><title>bool __cdecl SE_SoundTestStart(void);</title></rect>
<rect width="12" height="12" x="705" y="315" class="known"><title>void __cdecl SE_SoundTestFinish(void);</title></rect>
<rect width="12" height="12" x="720" y="315" class="known"><title>int32_t __cdecl SE_SoundTestExecute(void);</title></rect>
<rect width="12" height="12" x="735" y="315" class="known"><title>int32_t __cdecl SE_SoundTest(void);</title></rect>
<rect width="12" height="12" x="0" y="330" class="known"><title>int32_t __stdcall SE_PropSheetCallback(HWND hwndDlg, UINT uMsg, LPARAM lParam);</title></rect>
<rect width="12" height="12" x="15" y="330" class="known"><title>LRESULT __stdcall SE_NewPropSheetWndProc(HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="12" height="12" x="30" y="330" class="known"><title>bool __cdecl SE_ShowSetupDialog(HWND hParent, bool isDefault);</title></rect>
<rect width="12" height="12" x="45" y="330" class="known"><title>INT_PTR __stdcall SE_GraphicsDlgProc(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="12" height="12" x="60" y="330" class="known"><title>void __cdecl SE_GraphicsDlgFullScreenModesUpdate(HWND hwndDlg);</title></rect>
<rect width="12" height="12" x="75" y="330" class="known"><title>void __cdecl SE_GraphicsAdapterSet(HWND hwndDlg, DISPLAY_ADAPTER_NODE *adapter);</title></rect>
<rect width="12" height="12" x="90" y="330" class="known"><title>void __cdecl SE_GraphicsDlgUpdate(HWND hwndDlg);</title></rect>
<rect width="12" height="12" x="105" y="330" class="known"><title>void __cdecl SE_GraphicsDlgInit(HWND hwndDlg);</title></rect>
<rect width="12" height="12" x="120" y="330" class="known"><title>INT_PTR __stdcall SE_SoundDlgProc(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="12" height="12" x="135" y="330" class="known"><title>void __cdecl SE_SoundAdapterSet(HWND hwndDlg, SOUND_ADAPTER_NODE *adapter);</title></rect>
<rect width="12" height="12" x="150" y="330" class="known"><title>void __cdecl SE_SoundDlgUpdate(HWND hwndDlg);</title></rect>
<rect width="12" height="12" x="165" y="330" class="known"><title>void __cdecl SE_SoundDlgInit(HWND hwndDlg);</title></rect>
<rect width="12" height="12" x="180" y="330" class="known"><title>INT_PTR __stdcall SE_ControlsDlgProc(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="12" height="12" x="195" y="330" class="known"><title>void __cdecl SE_ControlsJoystickSet(HWND hwndDlg, JOYSTICK_NODE *joystick);</title></rect>
<rect width="12" height="12" x="210" y="330" class="known"><title>void __cdecl SE_ControlsDlgUpdate(HWND hwndDlg);</title></rect>
<rect width="12" height="12" x="225" y="330" class="known"><title>void __cdecl SE_ControlsDlgInit(HWND hwndDlg);</title></rect>
<rect width="12" height="12" x="240" y="330" class="known"><title>INT_PTR __stdcall SE_OptionsDlgProc(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="12" height="12" x="255" y="330" class="known"><title>void __cdecl SE_OptionsDlgUpdate(HWND hwndDlg);</title></rect>
<rect width="12" height="12" x="270" y="330" class="known"><title>void __cdecl SE_OptionsStrCat(LPTSTR *dstString, bool isEnabled, bool *isNext, LPCTSTR srcString);</title></rect>
<rect width="12" height="12" x="285" y="330" class="known"><title>INT_PTR __stdcall SE_AdvancedDlgProc(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="12" height="12" x="300" y="330" class="known"><title>void __cdecl SE_AdvancedDlgUpdate(HWND hwndDlg);</title></rect>
<rect width="12" height="12" x="315" y="330" class="known"><title>void __cdecl SE_AdvancedDlgInit(HWND hwndDlg);</title></rect>
<rect width="12" height="12" x="330" y="330" class="known"><title>HWND __cdecl SE_FindSetupDialog(void);</title></rect>
<rect width="12" height="12" x="345" y="330" class="decompiled"><title>BOOL __cdecl Shell_Main(void);</title></rect>
<rect width="12" height="12" x="360" y="330" class="decompiled"><title>int16_t __cdecl TitleSequence(void);</title></rect>
<rect width="12" height="12" x="375" y="330" class="known"><title>void __cdecl CheckCheatMode(void);</title></rect>
<rect width="12" height="12" x="390" y="330" class="decompiled"><title>void __cdecl S_SaveSettings(void);</title></rect>
<rect width="12" height="12" x="405" y="330" class="decompiled"><title>void __cdecl S_LoadSettings(void);</title></rect>
<rect width="12" height="12" x="420" y="330" class="decompiled"><title>int32_t __cdecl S_Audio_Sample_OutPlay(int32_t sample_id, uint16_t volume, int32_t pitch, int32_t pan);</title></rect>
<rect width="12" height="12" x="435" y="330" class="decompiled"><title>int32_t __cdecl S_Audio_Sample_CalculateSampleVolume(int32_t volume);</title></rect>
<rect width="12" height="12" x="450" y="330" class="decompiled"><title>int32_t __cdecl S_Audio_Sample_CalculateSamplePan(int16_t pan);</title></rect>
<rect width="12" height="12" x="465" y="330" class="decompiled"><title>int32_t __cdecl S_Audio_Sample_OutPlayLooped(int32_t track_id, uint16_t volume, int32_t pitch, int32_t pan);</title></rect>
<rect width="12" height="12" x="480" y="330" class="decompiled"><title>void __cdecl S_Audio_Sample_OutSetPanAndVolume(int32_t track_id, int32_t pan, uint16_t volume);</title></rect>
<rect width="12" height="12" x="495" y="330" class="decompiled"><title>void __cdecl S_Audio_Sample_OutSetPitch(int32_t track_id, int32_t pitch);</title></rect>
<rect width="12" height="12" x="510" y="330" class="decompiled"><title>void __cdecl Sound_SetMasterVolume(int32_t volume);</title></rect>
<rect width="12" height="12" x="525" y="330" class="decompiled"><title>void __cdecl S_Audio_Sample_OutCloseTrack(int32_t track_id);</title></rect>
<rect width="12" height="12" x="540" y="330" class="decompiled"><title>void __cdecl S_Audio_Sample_OutCloseAllTracks(void);</title></rect>
<rect width="12" height="12" x="555" y="330" class="decompiled"><title>BOOL __cdecl S_Audio_Sample_OutIsTrackPlaying(int32_t track_id);</title></rect>
<rect width="12" height="12" x="570" y="330" class="decompiled"><title>bool __cdecl Music_Init(void);</title></rect>
<rect width="12" height="12" x="585" y="330" class="decompiled"><title>void __cdecl Music_Shutdown(void);</title></rect>
<rect width="12" height="12" x="600" y="330" class="decompiled"><title>void __cdecl Music_Play(int16_t track_id, bool is_looped);</title></rect>
<rect width="12" height="12" x="615" y="330" class="decompiled"><title>void __cdecl Music_Stop(void);</title></rect>
<rect width="12" height="12" x="630" y="330" class="decompiled"><title>bool __cdecl Music_PlaySynced(int32_t track_id);</title></rect>
<rect width="12" height="12" x="645" y="330" class="decompiled"><title>int32_t __cdecl Music_GetFrames(void);</title></rect>
<rect width="12" height="12" x="660" y="330" class="decompiled"><title>void __cdecl Music_SetVolume(int32_t volume);</title></rect>
<rect width="12" height="12" x="675" y="330" class="known"><title>void __cdecl CopyBitmapPalette(RGB_888 *src_pal, BYTE *src_bitmap, int32_t bitmap_size, RGB_888 *dest_pal);</title></rect>
<rect width="12" height="12" x="690" y="330" class="known"><title>BYTE __cdecl FindNearestPaletteEntry(RGB_888 *palette, int32_t red, int32_t green, int32_t blue, bool ignore_sys_palette);</title></rect>
<rect width="12" height="12" x="705" y="330" class="known"><title>void __cdecl SyncSurfacePalettes(void *src_data, int32_t width, int32_t height, int32_t src_pitch, RGB_888 *src_palette, void *dst_data, int32_t dst_pitch, RGB_888 *dst_palette, bool preserve_sys_palette);</title></rect>
<rect width="12" height="12" x="720" y="330" class="known"><title>int32_t __cdecl CreateTexturePalette(const RGB_888 *pal);</title></rect>
<rect width="12" height="12" x="735" y="330" class="known"><title>int32_t __cdecl GetFreePaletteIndex(void);</title></rect>
<rect width="12" height="12" x="0" y="345" class="known"><title>void __cdecl FreePalette(int32_t palette_idx);</title></rect>
<rect width="12" height="12" x="15" y="345" class="known"><title>void __cdecl SafeFreePalette(int32_t palette_idx);</title></rect>
<rect width="12" height="12" x="30" y="345" class="known"><title>int32_t __cdecl CreateTexturePage(int32_t width, int32_t height, bool alpha);</title></rect>
<rect width="12" height="12" x="45" y="345" class="known"><title>int32_t __cdecl GetFreeTexturePageIndex(void);</title></rect>
<rect width="12" height="12" x="60" y="345" class="known"><title>bool __cdecl CreateTexturePageSurface(TEXPAGE_DESC *desc);</title></rect>
<rect width="12" height="12" x="75" y="345" class="known"><title>bool __cdecl TexturePageInit(TEXPAGE_DESC *page);</title></rect>
<rect width="12" height="12" x="90" y="345" class="known"><title>LPDIRECT3DTEXTURE2 __cdecl Create3DTexture(LPDDS surface);</title></rect>
<rect width="12" height="12" x="105" y="345" class="known"><title>void __cdecl SafeFreeTexturePage(int32_t page_idx);</title></rect>
<rect width="12" height="12" x="120" y="345" class="known"><title>void __cdecl FreeTexturePage(int32_t page_idx);</title></rect>
<rect width="12" height="12" x="135" y="345" class="known"><title>void __cdecl TexturePageReleaseVidMemSurface(TEXPAGE_DESC *page);</title></rect>
<rect width="12" height="12" x="150" y="345" class="known"><title>void __cdecl FreeTexturePages(void);</title></rect>
<rect width="12" height="12" x="165" y="345" class="known"><title>bool __cdecl LoadTexturePage(int32_t page_idx, bool reset);</title></rect>
<rect width="12" height="12" x="180" y="345" class="known"><title>bool __cdecl ReloadTextures(bool reset);</title></rect>
<rect width="12" height="12" x="195" y="345" class="known"><title>HWR_TEXTURE_HANDLE __cdecl GetTexturePageHandle(int32_t page_idx);</title></rect>
<rect width="12" height="12" x="210" y="345" class="known"><title>int32_t __cdecl AddTexturePage8(int32_t width, int32_t height, const uint8_t *page_buf, int32_t pal_idx);</title></rect>
<rect width="12" height="12" x="225" y="345" class="known"><title>int32_t __cdecl AddTexturePage16(int32_t width, int32_t height, const uint8_t *page_buf);</title></rect>
<rect width="12" height="12" x="240" y="345" class="known"><title>HRESULT __stdcall EnumTextureFormatsCallback(LPDDSDESC lpDdsd, LPVOID lpContext);</title></rect>
<rect width="12" height="12" x="255" y="345" class="known"><title>HRESULT __cdecl EnumerateTextureFormats(void);</title></rect>
<rect width="12" height="12" x="270" y="345" class="known"><title>void __cdecl CleanupTextures(void);</title></rect>
<rect width="12" height="12" x="285" y="345" class="known"><title>bool __cdecl InitTextures(void);</title></rect>
<rect width="12" height="12" x="300" y="345" class="known"><title>void __cdecl UpdateTicks(void);</title></rect>
<rect width="12" height="12" x="315" y="345" class="known"><title>bool __cdecl TIME_Init(void);</title></rect>
<rect width="12" height="12" x="330" y="345" class="known"><title>DWORD __cdecl Sync(void);</title></rect>
<rect width="12" height="12" x="345" y="345" class="known"><title>LPVOID __cdecl UT_LoadResource(LPCTSTR lpName, LPCTSTR lpType);</title></rect>
<rect width="12" height="12" x="360" y="345" class="known"><title>void __cdecl UT_InitAccurateTimer(void);</title></rect>
<rect width="12" height="12" x="375" y="345" class="known"><title>double __cdecl UT_Microseconds(void);</title></rect>
<rect width="12" height="12" x="390" y="345" class="known"><title>BOOL __cdecl UT_CenterWindow(HWND hWnd);</title></rect>
<rect width="12" height="12" x="405" y="345" class="known"><title>LPTSTR __cdecl UT_FindArg(LPCTSTR str);</title></rect>
<rect width="12" height="12" x="420" y="345" class="known"><title>int32_t __cdecl UT_MessageBox(LPCTSTR lpText, HWND hWnd);</title></rect>
<rect width="12" height="12" x="435" y="345" class="known"><title>int32_t __cdecl UT_ErrorBox(UINT uID, HWND hWnd);</title></rect>
<rect width="12" height="12" x="450" y="345" class="known"><title>LPCTSTR __cdecl GuidBinaryToString(GUID *guid);</title></rect>
<rect width="12" height="12" x="465" y="345" class="known"><title>bool __cdecl GuidStringToBinary(LPCTSTR lpString, GUID *guid);</title></rect>
<rect width="12" height="12" x="480" y="345" class="known"><title>BOOL __cdecl OpenRegistryKey(LPCTSTR lpSubKey);</title></rect>
<rect width="12" height="12" x="495" y="345" class="known"><title>bool __cdecl IsNewRegistryKeyCreated(void);</title></rect>
<rect width="12" height="12" x="510" y="345" class="known"><title>LONG __cdecl CloseRegistryKey(void);</title></rect>
<rect width="12" height="12" x="525" y="345" class="known"><title>LONG __cdecl SetRegistryDwordValue(LPCTSTR lpValueName, DWORD value);</title></rect>
<rect width="12" height="12" x="540" y="345" class="known"><title>LONG __cdecl SetRegistryBoolValue(LPCTSTR lpValueName, bool value);</title></rect>
<rect width="12" height="12" x="555" y="345" class="known"><title>LONG __cdecl SetRegistryFloatValue(LPCTSTR lpValueName, double value);</title></rect>
<rect width="12" height="12" x="570" y="345" class="known"><title>LONG __cdecl SetRegistryBinaryValue(LPCTSTR lpValueName, LPBYTE value, DWORD valueSize);</title></rect>
<rect width="12" height="12" x="585" y="345" class="known"><title>LONG __cdecl SetRegistryStringValue(LPCTSTR lpValueName, LPCTSTR value, int32_t length);</title></rect>
<rect width="12" height="12" x="600" y="345" class="known"><title>LONG __cdecl DeleteRegistryValue(LPCTSTR lpValueName);</title></rect>
<rect width="12" height="12" x="615" y="345" class="known"><title>bool __cdecl GetRegistryDwordValue(LPCTSTR lpValueName, DWORD *pValue, DWORD defaultValue);</title></rect>
<rect width="12" height="12" x="630" y="345" class="known"><title>bool __cdecl GetRegistryBoolValue(LPCTSTR lpValueName, bool *pValue, bool defaultValue);</title></rect>
<rect width="12" height="12" x="645" y="345" class="known"><title>bool __cdecl GetRegistryFloatValue(LPCTSTR lpValueName, double *value, double defaultValue);</title></rect>
<rect width="12" height="12" x="660" y="345" class="known"><title>bool __cdecl GetRegistryBinaryValue(LPCTSTR lpValueName, LPBYTE value, DWORD valueSize, LPBYTE defaultValue);</title></rect>
<rect width="12" height="12" x="675" y="345" class="known"><title>bool __cdecl GetRegistryStringValue(LPCTSTR lpValueName, LPTSTR value, DWORD maxSize, LPCTSTR defaultValue);</title></rect>
<rect width="12" height="12" x="690" y="345" class="known"><title>bool __cdecl GetRegistryGuidValue(LPCTSTR lpValueName, GUID *value, GUID *defaultValue);</title></rect>
<rect width="12" height="12" x="705" y="345" class="known"><title>void __thiscall SE_ReleaseBitmapResource(BITMAP_RESOURCE *bmpRsrc);</title></rect>
<rect width="12" height="12" x="720" y="345" class="known"><title>void __thiscall SE_LoadBitmapResource(BITMAP_RESOURCE *bmpRsrc, LPCTSTR lpName);</title></rect>
<rect width="12" height="12" x="735" y="345" class="known"><title>void __thiscall SE_DrawBitmap(BITMAP_RESOURCE *bmpRsrc, HDC hdc, int32_t x, int32_t y);</title></rect>
<rect width="12" height="12" x="0" y="360" class="known"><title>void __thiscall SE_UpdateBitmapPalette(BITMAP_RESOURCE *bmpRsrc, HWND hWnd, HWND hSender);</title></rect>
<rect width="12" height="12" x="15" y="360" class="known"><title>void __thiscall SE_ChangeBitmapPalette(BITMAP_RESOURCE *bmpRsrc, HWND hWnd);</title></rect>
<rect width="12" height="12" x="30" y="360" class="known"><title>bool __cdecl SE_RegisterSetupWindowClass(void);</title></rect>
<rect width="12" height="12" x="45" y="360" class="known"><title>LRESULT __stdcall SE_SetupWindowProc(HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="12" height="12" x="60" y="360" class="known"><title>void __cdecl SE_PassMessageToImage(HWND hWnd, UINT uMsg, WPARAM wParam);</title></rect>
<rect width="12" height="12" x="75" y="360" class="known"><title>void __cdecl UT_MemBlt(BYTE *dstBuf, DWORD dstX, DWORD dstY, DWORD width, DWORD height, DWORD dstPitch, BYTE *srcBuf, DWORD srcX, DWORD srcY, DWORD srcPitch);</title></rect>
<rect width="12" height="12" x="90" y="360" class="decompiled"><title>void __cdecl Matrix_Push(void);</title></rect>
<rect width="12" height="12" x="105" y="360" class="decompiled"><title>void __cdecl Matrix_PushUnit(void);</title></rect>
<rect width="12" height="12" x="120" y="360" class="decompiled"><title>void __fastcall Output_FlatA(int32_t y0, int32_t y1, uint8_t color_idx); // actually, __watcall, which is esoteric and rarely supported</title></rect>
<rect width="12" height="12" x="135" y="360" class="decompiled"><title>void __fastcall Output_TransA(int32_t y0, int32_t y1, uint8_t depth_q); // actually, __watcall, which is esoteric and rarely supported</title></rect>
<rect width="12" height="12" x="150" y="360" class="decompiled"><title>void __fastcall Output_GourA(int32_t y0, int32_t y1, uint8_t color_idx); // actually, __watcall, which is esoteric and rarely supported</title></rect>
<rect width="12" height="12" x="165" y="360" class="decompiled"><title>void __fastcall Output_GTMapA(int32_t y0, int32_t y1, uint8_t *tex_page); // actually, __watcall, which is esoteric and rarely supported</title></rect>
<rect width="12" height="12" x="180" y="360" class="decompiled"><title>void __fastcall Output_WGTMapA(int32_t y0, int32_t y1, uint8_t *tex_page); // actually, __watcall, which is esoteric and rarely supported</title></rect>
<rect width="12" height="12" x="195" y="360" class="decompiled"><title>int32_t __fastcall Math_Atan(int32_t x, int32_t y);</title></rect>
<rect width="12" height="12" x="210" y="360" class="decompiled"><title>int32_t __fastcall Math_Cos(int16_t angle);</title></rect>
<rect width="12" height="12" x="225" y="360" class="decompiled"><title>int32_t __fastcall Math_Sin(int16_t angle);</title></rect>
<rect width="12" height="12" x="240" y="360" class="decompiled"><title>int32_t __fastcall Math_SinImpl(int16_t angle);</title></rect>
<rect width="12" height="12" x="255" y="360" class="decompiled"><title>uint32_t  __fastcall Math_Sqrt(uint32_t n);</title></rect>
</g>
</g>
<g transform="translate(0 546)">
<text x="0" y="7.50">Tomb2.exe progress according to the function sizes:</text>
<text class="todo" style="font-size: 12px; " x="747" y="9"><tspan text-anchor="end"><tspan class="decompiled">65.77%</tspan> · <tspan class="known">33.90%</tspan> · <tspan class="todo">0%</tspan> · <tspan class="unused">0.33%</tspan></tspan></text>
<g transform="translate(0 20)">
<rect width="491.32" height="6" x="0" y="0" class="decompiled"/>
<rect width="253.24" height="6" x="491.32" y="0" class="known"/>
<rect width="2.44" height="6" x="744.56" y="0" class="unused"/>
</g>
<g transform="translate(0 31)">
<rect width="58" height="69.33" x="0" y="0" class="decompiled"><title>void __cdecl Output_WGTMapPersp32FP(int32_t y1, int32_t y2, uint8_t *tex_page);</title></rect>
<rect width="58" height="58.37" x="0" y="72.33" class="decompiled"><title>int32_t __cdecl Inv_Display(int32_t inventory_mode);</title></rect>
<rect width="58" height="53.54" x="0" y="133.70" class="known"><title>void __cdecl BaddyObjects(void);</title></rect>
<rect width="58" height="51.94" x="0" y="190.24" class="decompiled"><title>void __cdecl Output_GTMapPersp32FP(int32_t y1, int32_t y2, uint8_t *tex_page);</title></rect>
<rect width="58" height="42.31" x="0" y="245.18" class="decompiled"><title>void __cdecl Lara_Draw(const ITEM *item);</title></rect>
<rect width="58" height="41.67" x="0" y="290.49" class="decompiled"><title>void __cdecl GF_ModifyInventory(int32_t level, int32_t type);</title></rect>
<rect width="58" height="39.83" x="0" y="335.17" class="known"><title>void __cdecl ObjectObjects(void);</title></rect>
<rect width="40.17" height="54.95" x="61" y="0" class="decompiled"><title>void __cdecl Lara_Draw_I(const ITEM *item, const FRAME_INFO *frame1, const FRAME_INFO *frame2, int32_t frac, int32_t rate);</title></rect>
<rect width="40.17" height="49.99" x="61" y="57.95" class="decompiled"><title>bool __cdecl Input_Update(void);</title></rect>
<rect width="40.17" height="47.99" x="61" y="110.94" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectGT4(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="40.17" height="45.70" x="61" y="161.94" class="known"><title>void __cdecl HairControl(int32_t in_cutscene);</title></rect>
<rect width="40.17" height="40.30" x="61" y="210.64" class="decompiled"><title>int32_t __cdecl Creature_Animate(int16_t item_num, int16_t angle, int16_t tilt);</title></rect>
<rect width="40.17" height="38.57" x="61" y="253.94" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectGT3(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="40.17" height="38.34" x="61" y="295.51" class="decompiled"><title>int32_t __cdecl Requester_Display(REQUEST_INFO *req, int32_t des, int32_t backgrounds);</title></rect>
<rect width="40.17" height="38.15" x="61" y="336.85" class="known"><title>void __cdecl ExtractSaveGameInfo(void);</title></rect>
<rect width="35.22" height="38.72" x="104.17" y="0" class="decompiled"><title>void __cdecl Camera_SmartShift(GAME_VECTOR *target, void (*__cdecl shift)(int32_t *x, int32_t *y, int32_t *h, int32_t target_x, int32_t target_y, int32_t target_h, int32_t left, int32_t top, int32_t right, int32_t bottom));</title></rect>
<rect width="35.22" height="37.07" x="104.17" y="41.72" class="known"><title>void __cdecl SE_GraphicsDlgUpdate(HWND hwndDlg);</title></rect>
<rect width="35.22" height="36.05" x="104.17" y="81.80" class="decompiled"><title>void __cdecl Output_InsertGT3_Sorted(const PHD_VBUF *vtx0, const PHD_VBUF *vtx1, const PHD_VBUF *vtx2, const PHD_TEXTURE *texture, const PHD_UV *uv0, const PHD_UV *uv1, const PHD_UV *uv2, SORT_TYPE sort_type);</title></rect>
<rect width="35.22" height="35.66" x="104.17" y="120.85" class="decompiled"><title>void __cdecl Option_Controls(INVENTORY_ITEM *item);</title></rect>
<rect width="35.22" height="34.90" x="104.17" y="159.51" class="decompiled"><title>BOOL __cdecl GF_LoadFromFile(const char *file_name);</title></rect>
<rect width="35.22" height="34.49" x="104.17" y="197.42" class="decompiled"><title>int32_t __cdecl Inv_AddItem(GAME_OBJECT_ID object_id);</title></rect>
<rect width="35.22" height="33.49" x="104.17" y="234.91" class="decompiled"><title>void __cdecl Room_TestTriggers(int16_t *data, int32_t heavy);</title></rect>
<rect width="35.22" height="33.06" x="104.17" y="271.40" class="decompiled"><title>void __cdecl Collide_GetCollisionInfo(COLL_INFO *coll, int32_t xpos, int32_t ypos, int32_t zpos, int16_t room_num, int32_t obj_height);</title></rect>
<rect width="35.22" height="32.62" x="104.17" y="307.45" class="decompiled"><title>void __cdecl Lara_Control(int16_t item_num);</title></rect>
<rect width="35.22" height="31.93" x="104.17" y="343.07" class="decompiled"><title>void __cdecl Option_Passport(INVENTORY_ITEM *item);</title></rect>
<rect width="31.68" height="35.34" x="142.39" y="0" class="decompiled"><title>void __cdecl Output_InsertGT3_ZBuffered(const PHD_VBUF *vtx0, const PHD_VBUF *vtx1, const PHD_VBUF *vtx2, const PHD_TEXTURE *texture, const PHD_UV *uv0, const PHD_UV *uv1, const PHD_UV *uv2);</title></rect>
<rect width="31.68" height="34.77" x="142.39" y="38.34" class="decompiled"><title>void __cdecl Boat_Control(int16_t item_num);</title></rect>
<rect width="31.68" height="33.69" x="142.39" y="76.11" class="known"><title>void __cdecl TrapObjects(void);</title></rect>
<rect width="31.68" height="33.31" x="142.39" y="112.80" class="known"><title>void __cdecl YetiControl(int16_t item_num);</title></rect>
<rect width="31.68" height="32.16" x="142.39" y="149.10" class="known"><title>void __cdecl Worker3Control(int16_t item_num);</title></rect>
<rect width="31.68" height="31.08" x="142.39" y="184.26" class="known"><title>void __cdecl XianLordControl(int16_t item_num);</title></rect>
<rect width="31.68" height="30.65" x="142.39" y="218.34" class="decompiled"><title>BOOL __cdecl Level_LoadObjects(HANDLE handle);</title></rect>
<rect width="31.68" height="29.07" x="142.39" y="251.99" class="known"><title>void __cdecl Cult3Control(int16_t item_num);</title></rect>
<rect width="31.68" height="28.66" x="142.39" y="284.06" class="known"><title>void __cdecl CreateSaveGameInfo(void);</title></rect>
<rect width="31.68" height="28.23" x="142.39" y="315.73" class="known"><title>void __cdecl DragonControl(int16_t back_num);</title></rect>
<rect width="31.68" height="28.04" x="142.39" y="346.96" class="decompiled"><title>int32_t __cdecl Output_XYGUVClipper(int32_t vtx_count, VERTEX_INFO *vtx);</title></rect>
<rect width="28.60" height="29.99" x="177.07" y="0" class="decompiled"><title>void __cdecl Gun_Control(void);</title></rect>
<rect width="28.60" height="29.70" x="177.07" y="32.99" class="decompiled"><title>int32_t __cdecl Boat_Dynamics(int16_t boat_num);</title></rect>
<rect width="28.60" height="29.54" x="177.07" y="65.69" class="decompiled"><title>void __cdecl Output_InsertGT4_Sorted(const PHD_VBUF *vtx0, const PHD_VBUF *vtx1, const PHD_VBUF *vtx2, const PHD_VBUF *vtx3, const PHD_TEXTURE *texture, SORT_TYPE sort_type);</title></rect>
<rect width="28.60" height="29.36" x="177.07" y="98.23" class="decompiled"><title>void __cdecl Option_Controls_ShowControls(void);</title></rect>
<rect width="28.60" height="28.33" x="177.07" y="130.59" class="decompiled"><title>void __cdecl Camera_Update(void);</title></rect>
<rect width="28.60" height="28.20" x="177.07" y="161.92" class="decompiled"><title>void __cdecl Output_InsertTrans8(const PHD_VBUF *vbuf, int16_t shade);</title></rect>
<rect width="28.60" height="28.12" x="177.07" y="193.12" class="known"><title>void __cdecl MonkControl(int16_t item_num);</title></rect>
<rect width="28.60" height="28.07" x="177.07" y="224.25" class="decompiled"><title>LRESULT __stdcall WinVidGameWindowProc(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="28.60" height="28.04" x="177.07" y="255.32" class="known"><title>int32_t __cdecl SkidooDynamics(ITEM *skidoo);</title></rect>
<rect width="28.60" height="28.02" x="177.07" y="286.36" class="decompiled"><title>void __cdecl Option_Sound(INVENTORY_ITEM *item);</title></rect>
<rect width="28.60" height="27.36" x="177.07" y="317.38" class="decompiled"><title>void __cdecl Sound_Effect(int32_t sample_id, const XYZ_32 *pos, uint32_t flags);</title></rect>
<rect width="28.60" height="27.26" x="177.07" y="347.74" class="known"><title>void __cdecl PickUpCollision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="27.61" height="28.13" x="208.67" y="0" class="decompiled"><title>int32_t __cdecl GF_InterpretSequence(int16_t *ptr, GAMEFLOW_LEVEL_TYPE type, int32_t seq_type);</title></rect>
<rect width="27.61" height="27.18" x="208.67" y="31.13" class="decompiled"><title>TARGET_TYPE __cdecl Box_CalculateTarget(XYZ_32 *target, ITEM *item, LOT_INFO *lot);</title></rect>
<rect width="27.61" height="26.61" x="208.67" y="61.31" class="decompiled"><title>void __cdecl Output_InsertGT4_ZBuffered(const PHD_VBUF *vtx0, const PHD_VBUF *vtx1, const PHD_VBUF *vtx2, const PHD_VBUF *vtx3, const PHD_TEXTURE *texture);</title></rect>
<rect width="27.61" height="26.50" x="208.67" y="90.91" class="known"><title>int32_t __cdecl SkidooControl(void);</title></rect>
<rect width="27.61" height="26.47" x="208.67" y="120.41" class="decompiled"><title>void __cdecl Creature_Mood(ITEM *item, AI_INFO *info, int32_t violent);</title></rect>
<rect width="27.61" height="26.36" x="208.67" y="149.89" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectG4_Sorted(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="27.61" height="25.90" x="208.67" y="179.25" class="known"><title>void __cdecl Worker2Control(int16_t item_num);</title></rect>
<rect width="27.61" height="25.77" x="208.67" y="208.16" class="decompiled"><title>void __cdecl ShowEndStatsText(void);</title></rect>
<rect width="27.61" height="25.69" x="208.67" y="236.92" class="decompiled"><title>int32_t __cdecl Output_XYGClipper(int32_t vtx_count, VERTEX_INFO *vtx);</title></rect>
<rect width="27.61" height="25.55" x="208.67" y="265.61" class="decompiled"><title>void __cdecl Inv_DrawInventoryItem(INVENTORY_ITEM *inv_item);</title></rect>
<rect width="27.61" height="25.06" x="208.67" y="294.16" class="known"><title>void __cdecl Cult2Control(int16_t item_num);</title></rect>
<rect width="27.61" height="24.98" x="208.67" y="322.23" class="known"><title>void __cdecl Bandit2Control(int16_t item_num);</title></rect>
<rect width="27.61" height="24.79" x="208.67" y="350.21" class="known"><title>void __cdecl Cult1Control(int16_t item_num);</title></rect>
<rect width="24.80" height="27.49" x="239.29" y="0" class="known"><title>void __cdecl Rocket_Control(int16_t item_num);</title></rect>
<rect width="24.80" height="27.31" x="239.29" y="30.49" class="known"><title>void __cdecl DrawXianLord(ITEM *item);</title></rect>
<rect width="24.80" height="26.68" x="239.29" y="60.80" class="known"><title>void __cdecl SkidManControl(int16_t rider_num);</title></rect>
<rect width="24.80" height="26.50" x="239.29" y="90.48" class="known"><title>void __cdecl InitialiseDoor(int16_t item_num);</title></rect>
<rect width="24.80" height="26.20" x="239.29" y="119.98" class="decompiled"><title>int32_t __cdecl Collide_CollideStaticObjects(COLL_INFO *coll, int32_t x, int32_t y, int32_t z, int16_t room_num, int32_t height);</title></rect>
<rect width="24.80" height="26.20" x="239.29" y="149.18" class="decompiled"><title>void __cdecl Room_Clip(ROOM *r);</title></rect>
<rect width="24.80" height="26.20" x="239.29" y="178.38" class="decompiled"><title>void __cdecl Text_DrawText(const TEXTSTRING *string);</title></rect>
<rect width="24.80" height="26.17" x="239.29" y="207.59" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectG4(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="24.80" height="25.96" x="239.29" y="236.76" class="known"><title>void __cdecl Worker1Control(int16_t item_num);</title></rect>
<rect width="24.80" height="25.49" x="239.29" y="265.73" class="known"><title>void __cdecl WarriorControl(int16_t item_num);</title></rect>
<rect width="24.80" height="25.22" x="239.29" y="294.21" class="decompiled"><title>HRESULT __stdcall EnumDisplayModesCallback(LPDDSDESC lpDDSurfaceDesc, LPVOID lpContext);</title></rect>
<rect width="24.80" height="24.86" x="239.29" y="322.43" class="decompiled"><title>void __cdecl RenderStart(bool is_reset);</title></rect>
<rect width="24.80" height="24.71" x="239.29" y="350.29" class="decompiled"><title>BOOL __cdecl Level_LoadRooms(HANDLE handle);</title></rect>
<rect width="24.49" height="24.90" x="267.09" y="0" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectG4_ZBuffered(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="24.49" height="24.75" x="267.09" y="27.90" class="decompiled"><title>void __cdecl ShowStatsText(char *time_str, int32_t type);</title></rect>
<rect width="24.49" height="24.50" x="267.09" y="55.64" class="decompiled"><title>void __cdecl Lara_GetJointAbsPosition(XYZ_32 *vec, int32_t joint);</title></rect>
<rect width="24.49" height="24.32" x="267.09" y="83.15" class="decompiled"><title>void __cdecl Diver_Control(int16_t item_num);</title></rect>
<rect width="24.49" height="24.26" x="267.09" y="110.47" class="known"><title>void __cdecl Dog_Control(int16_t item_num);</title></rect>
<rect width="24.49" height="24.23" x="267.09" y="137.73" class="decompiled"><title>int32_t __cdecl Effect_ExplodingDeath(int16_t item_num, int32_t mesh_bits, int16_t damage);</title></rect>
<rect width="24.49" height="24.02" x="267.09" y="164.97" class="decompiled"><title>void __cdecl Room_SetBounds(const int16_t *objptr, int32_t room_num, ROOM *parent);</title></rect>
<rect width="24.49" height="23.99" x="267.09" y="191.99" class="decompiled"><title>void __cdecl Gun_Rifle_Animate(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="24.49" height="23.81" x="267.09" y="218.98" class="known"><title>void __cdecl Object_DrawAnimatingItem(ITEM *item);</title></rect>
<rect width="24.49" height="23.69" x="267.09" y="245.79" class="decompiled"><title>void __cdecl WinVidStart(void);</title></rect>
<rect width="24.49" height="23.63" x="267.09" y="272.48" class="decompiled"><title>void __cdecl Camera_Move(const GAME_VECTOR *target, int32_t speed);</title></rect>
<rect width="24.49" height="23.45" x="267.09" y="299.11" class="decompiled"><title>void __cdecl Lara_InitialiseInventory(int32_t level_num);</title></rect>
<rect width="24.49" height="23.36" x="267.09" y="325.56" class="decompiled"><title>void __cdecl Inv_RingNotActive(INVENTORY_ITEM *inv_item);</title></rect>
<rect width="24.49" height="23.09" x="267.09" y="351.91" class="decompiled"><title>int32_t __cdecl Gun_FireWeapon(LARA_GUN_TYPE weapon_type, ITEM *target, const ITEM *src, const PHD_ANGLE *angles);</title></rect>
<rect width="22.47" height="24.84" x="294.58" y="0" class="decompiled"><title>int32_t __cdecl Game_Control(int32_t nframes, int32_t demo_mode);</title></rect>
<rect width="22.47" height="24.67" x="294.58" y="27.84" class="known"><title>INT_PTR __stdcall SE_GraphicsDlgProc(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="22.47" height="24.38" x="294.58" y="55.51" class="known"><title>int32_t __cdecl SE_ReadAppSettings(APP_SETTINGS *settings);</title></rect>
<rect width="22.47" height="24.35" x="294.58" y="82.89" class="decompiled"><title>void __cdecl Output_InsertSprite_Sorted(int32_t z, int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t sprite_idx, int16_t shade);</title></rect>
<rect width="22.47" height="24.35" x="294.58" y="110.24" class="known"><title>void __cdecl RollingBallControl(int16_t item_num);</title></rect>
<rect width="22.47" height="24.25" x="294.58" y="137.58" class="known"><title>void __cdecl HarpoonBolt_Control(int16_t item_num);</title></rect>
<rect width="22.47" height="24.22" x="294.58" y="164.83" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectG3_Sorted(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="22.47" height="24.15" x="294.58" y="192.05" class="decompiled"><title>void __fastcall Output_WGTMapA(int32_t y0, int32_t y1, uint8_t *tex_page); // actually, __watcall, which is esoteric and rarely supported</title></rect>
<rect width="22.47" height="24.05" x="294.58" y="219.20" class="decompiled"><title>void __cdecl Lara_HangTest(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="22.47" height="23.86" x="294.58" y="246.25" class="decompiled"><title>void __cdecl Item_Animate(ITEM *item);</title></rect>
<rect width="22.47" height="23.60" x="294.58" y="273.11" class="decompiled"><title>void __cdecl Gun_Pistols_Animate(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="22.47" height="23.50" x="294.58" y="299.71" class="known"><title>void __cdecl CheckCheatMode(void);</title></rect>
<rect width="22.47" height="22.91" x="294.58" y="326.21" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectG3(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="22.47" height="22.88" x="294.58" y="352.12" class="decompiled"><title>void __cdecl Lara_GetJointAbsPosition_I(ITEM *item, XYZ_32 *vec, int16_t *frame1, int16_t *frame2, int32_t frac, int32_t rate);</title></rect>
<rect width="21.61" height="23.28" x="320.05" y="0" class="known"><title>void __cdecl BanditControl(int16_t item_num);</title></rect>
<rect width="21.61" height="23.11" x="320.05" y="26.28" class="decompiled"><title>void __cdecl Lara_Push(ITEM *item, ITEM *lara_item, COLL_INFO *coll, int32_t spaz_on, int32_t big_push);</title></rect>
<rect width="21.61" height="22.84" x="320.05" y="52.39" class="decompiled"><title>int32_t __cdecl LOS_CheckSmashable(const GAME_VECTOR *start, GAME_VECTOR *target);</title></rect>
<rect width="21.61" height="22.81" x="320.05" y="78.23" class="decompiled"><title>void __fastcall Output_GTMapA(int32_t y0, int32_t y1, uint8_t *tex_page); // actually, __watcall, which is esoteric and rarely supported</title></rect>
<rect width="21.61" height="22.57" x="320.05" y="104.04" class="known"><title>void __cdecl S_CalculateLight(int32_t x, int32_t y, int32_t z, int16_t room_num);</title></rect>
<rect width="21.61" height="22.27" x="320.05" y="129.61" class="decompiled"><title>void __cdecl Dragon_Collision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="21.61" height="22.23" x="320.05" y="154.88" class="decompiled"><title>int32_t __cdecl LOS_CheckX(const GAME_VECTOR *start, GAME_VECTOR *target);</title></rect>
<rect width="21.61" height="22.20" x="320.05" y="180.11" class="decompiled"><title>int32_t __cdecl LOS_CheckZ(const GAME_VECTOR *start, GAME_VECTOR *target);</title></rect>
<rect width="21.61" height="22.07" x="320.05" y="205.31" class="decompiled"><title>int32_t __cdecl Lara_TestVault(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="21.61" height="21.83" x="320.05" y="230.38" class="known"><title>void __cdecl WinPlayFMV(const char *file_name, bool is_playback);</title></rect>
<rect width="21.61" height="21.76" x="320.05" y="255.20" class="known"><title>bool __cdecl SE_ShowSetupDialog(HWND hParent, bool isDefault);</title></rect>
<rect width="21.61" height="21.63" x="320.05" y="279.97" class="decompiled"><title>void __cdecl Option_Detail(INVENTORY_ITEM *item);</title></rect>
<rect width="21.61" height="21.56" x="320.05" y="304.59" class="known"><title>int32_t __cdecl Collide_GetSpheres(const ITEM *item, SPHERE *spheres, bool world_space);</title></rect>
<rect width="21.61" height="21.46" x="320.05" y="329.15" class="known"><title>void __cdecl DrawSkidoo(ITEM *item);</title></rect>
<rect width="21.61" height="21.39" x="320.05" y="353.61" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectG3_ZBuffered(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="20.95" height="21.96" x="344.65" y="0" class="decompiled"><title>int32_t __cdecl Output_XYClipper(int32_t vtx_count, VERTEX_INFO *vtx);</title></rect>
<rect width="20.95" height="21.96" x="344.65" y="24.96" class="known"><title>void __cdecl ControlMissile(int16_t fx_num);</title></rect>
<rect width="20.95" height="21.96" x="344.65" y="49.91" class="decompiled"><title>BOOL __cdecl Shell_Main(void);</title></rect>
<rect width="20.95" height="21.85" x="344.65" y="74.87" class="decompiled"><title>void __cdecl Lara_Animate(ITEM *item);</title></rect>
<rect width="20.95" height="21.75" x="344.65" y="99.73" class="known"><title>void __cdecl GiantYetiControl(int16_t item_num);</title></rect>
<rect width="20.95" height="21.65" x="344.65" y="124.47" class="decompiled"><title>void __cdecl Output_DrawSprite(uint32_t flags, int32_t x, int32_t y, int32_t z, int16_t sprite_idx, int16_t shade, int16_t scale);</title></rect>
<rect width="20.95" height="21.30" x="344.65" y="149.12" class="decompiled"><title>void __cdecl Lara_Initialise(int32_t type);</title></rect>
<rect width="20.95" height="21.16" x="344.65" y="173.42" class="known"><title>void __cdecl SkidooAnimation(ITEM *skidoo, int32_t collide, int32_t dead);</title></rect>
<rect width="20.95" height="20.85" x="344.65" y="197.58" class="decompiled"><title>void __cdecl Room_DrawAllRooms(int16_t current_room);</title></rect>
<rect width="20.95" height="19.88" x="344.65" y="221.43" class="known"><title>void __cdecl PuzzleHoleCollision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="20.95" height="19.70" x="344.65" y="244.30" class="known"><title>void __cdecl ControlDeathSlide(int16_t item_num);</title></rect>
<rect width="20.95" height="19.43" x="344.65" y="267.01" class="known"><title>void __cdecl DinoControl(int16_t item_num);</title></rect>
<rect width="20.95" height="19.32" x="344.65" y="289.44" class="decompiled"><title>int32_t __cdecl Output_XGenXGUVPerspFP(const int16_t *obj_ptr);</title></rect>
<rect width="20.95" height="19.11" x="344.65" y="311.76" class="known"><title>void __cdecl Tiger_Control(int16_t item_num);</title></rect>
<rect width="20.95" height="19.08" x="344.65" y="333.87" class="decompiled"><title>const int16_t *__cdecl Output_CalcRoomVertices(const int16_t *obj_ptr, int32_t far_clip);</title></rect>
<rect width="20.95" height="19.05" x="344.65" y="355.95" class="known"><title>void __cdecl SharkControl(int16_t item_num);</title></rect>
<rect width="19.35" height="20.62" x="368.60" y="0" class="known"><title>int32_t __cdecl DoShift(ITEM *skidoo, XYZ_32 *pos, XYZ_32 *old);</title></rect>
<rect width="19.35" height="20.18" x="368.60" y="23.62" class="known"><title>int32_t __cdecl S_GetObjectBounds(const BOUNDS_16 *bounds);</title></rect>
<rect width="19.35" height="20.10" x="368.60" y="46.80" class="known"><title>void __cdecl Flare_Control(int16_t item_num);</title></rect>
<rect width="19.35" height="19.81" x="368.60" y="69.90" class="decompiled"><title>void __cdecl Output_Init(int16_t x, int16_t y, int32_t width, int32_t height, int32_t near_z, int32_t far_z, int16_t view_angle, int32_t screen_width, int32_t screen_height);</title></rect>
<rect width="19.35" height="19.77" x="368.60" y="92.71" class="decompiled"><title>int32_t __cdecl Room_GetHeight(const SECTOR *sector, int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="19.35" height="19.77" x="368.60" y="115.48" class="decompiled"><title>BOOL __cdecl Level_LoadSamples(HANDLE handle);</title></rect>
<rect width="19.35" height="19.69" x="368.60" y="138.24" class="decompiled"><title>int32_t __cdecl Lara_TestClimb(int32_t x, int32_t y, int32_t z, int32_t xfront, int32_t zfront, int32_t item_height, int16_t item_room, int32_t *shift);</title></rect>
<rect width="19.35" height="19.66" x="368.60" y="160.94" class="known"><title>bool __cdecl SE_WriteAppSettings(APP_SETTINGS *settings);</title></rect>
<rect width="19.35" height="19.14" x="368.60" y="183.60" class="known"><title>void __cdecl S_CopyBufferToScreen(void);</title></rect>
<rect width="19.35" height="19.03" x="368.60" y="205.73" class="decompiled"><title>void __cdecl DrawTextureTile(int32_t sx, int32_t sy, int32_t width, int32_t height, HWR_TEXTURE_HANDLE tex_source, int32_t tu, int32_t tv, int32_t t_width, int32_t t_height, D3DCOLOR color0, D3DCOLOR color1, D3DCOLOR color2, D3DCOLOR color3);</title></rect>
<rect width="19.35" height="18.77" x="368.60" y="227.76" class="known"><title>void __cdecl RollingBallCollision(int16_t item_num, ITEM *litem, COLL_INFO *coll);</title></rect>
<rect width="19.35" height="18.77" x="368.60" y="249.52" class="decompiled"><title>bool __cdecl Level_Load(const char *file_name, int32_t level_num);</title></rect>
<rect width="19.35" height="18.58" x="368.60" y="271.29" class="decompiled"><title>void __cdecl Camera_LoadCutsceneFrame(void);</title></rect>
<rect width="19.35" height="18.47" x="368.60" y="292.87" class="decompiled"><title>void __cdecl Creature_AIInfo(ITEM *item, AI_INFO *info);</title></rect>
<rect width="19.35" height="18.28" x="368.60" y="314.34" class="decompiled"><title>int32_t __cdecl Room_GetCeiling(const SECTOR *sector, int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="19.35" height="18.21" x="368.60" y="335.62" class="known"><title>void __cdecl DetonatorCollision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="19.35" height="18.17" x="368.60" y="356.83" class="decompiled"><title>void __cdecl GameApplySettings(APP_SETTINGS *new_settings);</title></rect>
<rect width="18.80" height="18.70" x="390.95" y="0" class="known"><title>LRESULT __stdcall SE_SetupWindowProc(HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="18.77" height="18.70" x="412.75" y="0" class="known"><title>void __cdecl MovableBlockCollision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="18.61" height="18.70" x="434.52" y="0" class="decompiled"><title>int32_t __cdecl Lara_TestClimbUpPos(ITEM *item, int32_t front, int32_t right, int32_t *shift, int32_t *ledge);</title></rect>
<rect width="18.58" height="18.70" x="456.13" y="0" class="known"><title>void __cdecl SE_OptionsDlgUpdate(HWND hwndDlg);</title></rect>
<rect width="18.54" height="18.70" x="477.71" y="0" class="known"><title>int32_t __cdecl SkidooCheckGetOff(void);</title></rect>
<rect width="18.54" height="18.70" x="499.24" y="0" class="known"><title>void __cdecl DisplayCredits(void);</title></rect>
<rect width="18" height="18.70" x="520.78" y="0" class="decompiled"><title>void __cdecl Gun_Pistols_Undraw(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="18" height="18.70" x="541.78" y="0" class="known"><title>int32_t __cdecl TestBlockPull(ITEM *item, int32_t block_height, uint16_t quadrant);</title></rect>
<rect width="17.93" height="18.70" x="562.78" y="0" class="decompiled"><title>void __cdecl Output_DrawScaledSpriteC(const int16_t *obj_ptr);</title></rect>
<rect width="17.93" height="18.70" x="583.71" y="0" class="decompiled"><title>void __cdecl Lara_HandleUnderwater(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="17.93" height="18.70" x="604.63" y="0" class="known"><title>void __cdecl KeyHoleCollision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="17.85" height="18.70" x="625.56" y="0" class="known"><title>void __cdecl Flare_Undraw(void);</title></rect>
<rect width="17.85" height="18.70" x="646.41" y="0" class="decompiled"><title>BOOL __cdecl Level_LoadBoxes(HANDLE handle);</title></rect>
<rect width="17.81" height="18.70" x="667.26" y="0" class="decompiled"><title>void __cdecl BGND_DrawInGameBackground(void);</title></rect>
<rect width="17.66" height="18.70" x="688.07" y="0" class="decompiled"><title>void __cdecl Gun_GetNewTarget(WEAPON_INFO *winfo);</title></rect>
<rect width="17.66" height="18.70" x="708.72" y="0" class="decompiled"><title>int32_t __cdecl Lara_TestWaterClimbOut(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="17.62" height="18.70" x="729.38" y="0" class="known"><title>void __cdecl BaracuddaControl(int16_t item_num);</title></rect>
<rect width="17.36" height="18.89" x="390.95" y="21.70" class="decompiled"><title>int32_t __cdecl Output_XGenXGUV(const int16_t *obj_ptr);</title></rect>
<rect width="17.36" height="18.85" x="390.95" y="43.59" class="decompiled"><title>void __cdecl Room_DrawSingleRoomObjects(int16_t room_num);</title></rect>
<rect width="17.36" height="18.48" x="390.95" y="65.44" class="decompiled"><title>void __cdecl FinalLevelCounter_Control(int16_t item_num);</title></rect>
<rect width="17.36" height="18.40" x="390.95" y="86.93" class="decompiled"><title>void __cdecl Lara_Col_ClimbStance(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="17.36" height="18.28" x="390.95" y="108.33" class="known"><title>void __cdecl SwitchCollision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="17.36" height="18.12" x="390.95" y="129.61" class="known"><title>void __cdecl SpiderControl(int16_t item_num);</title></rect>
<rect width="17.36" height="18.12" x="390.95" y="150.73" class="known"><title>void __cdecl S_LightRoom(ROOM *room);</title></rect>
<rect width="17.36" height="18.04" x="390.95" y="171.84" class="decompiled"><title>bool __cdecl ApplySettings(APP_SETTINGS *new_settings);</title></rect>
<rect width="17.36" height="17.91" x="390.95" y="192.88" class="known"><title>void __cdecl CreateStartInfo(int32_t level_num);</title></rect>
<rect width="17.36" height="17.87" x="390.95" y="213.79" class="decompiled"><title>void __cdecl Bird_Control(int16_t item_num);</title></rect>
<rect width="17.36" height="17.87" x="390.95" y="234.66" class="known"><title>void __cdecl BodyPart_Control(int16_t fx_num);</title></rect>
<rect width="17.36" height="17.59" x="390.95" y="255.54" class="known"><title>void __cdecl SkidooBaddieCollision(ITEM *skidoo);</title></rect>
<rect width="17.36" height="17.46" x="390.95" y="276.12" class="known"><title>void __cdecl S_DrawAirBar(int32_t percent);</title></rect>
<rect width="17.36" height="17.42" x="390.95" y="296.59" class="decompiled"><title>void __cdecl Screenshot(LPDDS screen);</title></rect>
<rect width="17.36" height="17.38" x="390.95" y="317.01" class="known"><title>void __cdecl MineControl(int16_t mine_num);</title></rect>
<rect width="17.36" height="17.34" x="390.95" y="337.40" class="decompiled"><title>int32_t __cdecl Box_SearchLOT(LOT_INFO *lot, int32_t expansion);</title></rect>
<rect width="17.36" height="17.26" x="390.95" y="357.74" class="known"><title>void __cdecl S_PrintShadow(int16_t radius, const BOUNDS_16 *bounds, const ITEM *item);</title></rect>
<rect width="17.66" height="16.77" x="411.31" y="21.70" class="decompiled"><title>void __cdecl Lara_WaterCurrent(COLL_INFO *coll);</title></rect>
<rect width="17.54" height="16.77" x="431.97" y="21.70" class="decompiled"><title>int32_t __cdecl GF_LoadScriptFile(const char *fname);</title></rect>
<rect width="17.45" height="16.77" x="452.50" y="21.70" class="decompiled"><title>void __cdecl Matrix_RotYXZpack(uint32_t rpack);</title></rect>
<rect width="17.24" height="16.77" x="472.96" y="21.70" class="decompiled"><title>void __cdecl Camera_Look(const ITEM *item);</title></rect>
<rect width="17.20" height="16.77" x="493.20" y="21.70" class="known"><title>void __cdecl EelControl(int16_t item_num);</title></rect>
<rect width="16.99" height="16.77" x="513.40" y="21.70" class="decompiled"><title>void __cdecl Matrix_RotYXZ(int16_t ry, int16_t rx, int16_t rz);</title></rect>
<rect width="16.99" height="16.77" x="533.39" y="21.70" class="known"><title>void __cdecl MouseControl(int16_t item_num);</title></rect>
<rect width="16.99" height="16.77" x="553.38" y="21.70" class="known"><title>void __cdecl SE_GraphicsDlgFullScreenModesUpdate(HWND hwndDlg);</title></rect>
<rect width="16.95" height="16.77" x="573.37" y="21.70" class="decompiled"><title>void __cdecl Creature_GetBaddieTarget(int16_t item_num, int32_t goody);</title></rect>
<rect width="16.78" height="16.77" x="593.32" y="21.70" class="known"><title>void __cdecl Flare_Create(int32_t thrown);</title></rect>
<rect width="16.74" height="16.77" x="613.09" y="21.70" class="decompiled"><title>void __cdecl ShowGymStatsText(char *time_str, int32_t type);</title></rect>
<rect width="16.74" height="16.77" x="632.83" y="21.70" class="decompiled"><title>BOOL __cdecl Level_LoadItems(HANDLE handle);</title></rect>
<rect width="16.74" height="16.77" x="652.57" y="21.70" class="decompiled"><title>int32_t __stdcall WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPTSTR lpCmdLine, int32_t nShowCmd);</title></rect>
<rect width="16.70" height="16.77" x="672.31" y="21.70" class="decompiled"><title>const int16_t *__cdecl Output_CalcObjectVertices(const int16_t *obj_ptr);</title></rect>
<rect width="16.49" height="16.77" x="692" y="21.70" class="decompiled"><title>void __cdecl Matrix_GenerateW2V(PHD_3DPOS *viewpos);</title></rect>
<rect width="16.32" height="16.77" x="711.49" y="21.70" class="known"><title>void __cdecl S_DrawHealthBar(int32_t percent);</title></rect>
<rect width="16.19" height="16.77" x="730.81" y="21.70" class="decompiled"><title>void __cdecl Output_InsertFlatRect_ZBuffered(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t z, uint8_t color_idx);</title></rect>
<rect width="16.43" height="16.52" x="411.31" y="41.46" class="known"><title>void __cdecl FadeToPal(int32_t fade_value, RGB_888 *palette);</title></rect>
<rect width="16.43" height="16.39" x="411.31" y="60.99" class="decompiled"><title>void __cdecl Room_GetBounds(void);</title></rect>
<rect width="16.43" height="16.31" x="411.31" y="80.38" class="known"><title>int32_t __cdecl ShotLara(ITEM *item, AI_INFO *info, BITE *gun, int16_t extra_rotation, int32_t damage);</title></rect>
<rect width="16.43" height="16.22" x="411.31" y="99.69" class="decompiled"><title>int32_t __cdecl LevelStats(int32_t level_num);</title></rect>
<rect width="16.43" height="16.18" x="411.31" y="118.91" class="decompiled"><title>void __cdecl Boat_DoShift(int32_t boat_num);</title></rect>
<rect width="16.43" height="16.14" x="411.31" y="138.09" class="decompiled"><title>void __cdecl WinVidResizeGameWindow(HWND hWnd, int32_t edge, LPRECT rect);</title></rect>
<rect width="16.43" height="16.05" x="411.31" y="157.23" class="decompiled"><title>BOOL __stdcall EnumDisplayAdaptersCallback(GUID *lpGUID, LPTSTR lpDriverDescription, LPTSTR lpDriverName, LPVOID lpContext);</title></rect>
<rect width="16.43" height="15.80" x="411.31" y="176.28" class="decompiled"><title>void __cdecl BGND_Make640x480(uint8_t *bitmap, RGB_888 *palette);</title></rect>
<rect width="16.43" height="15.80" x="411.31" y="195.08" class="decompiled"><title>void __cdecl D3DDeviceCreate(LPDDS lpBackBuffer);</title></rect>
<rect width="16.43" height="15.71" x="411.31" y="213.88" class="known"><title>int32_t __cdecl SkidooUserControl(ITEM *skidoo, int32_t height, int32_t *pitch);</title></rect>
<rect width="16.43" height="15.58" x="411.31" y="232.59" class="decompiled"><title>void __cdecl Item_Initialise(int16_t item_num);</title></rect>
<rect width="16.43" height="15.45" x="411.31" y="251.17" class="decompiled"><title>int32_t __cdecl Demo_Start(int32_t level_num);</title></rect>
<rect width="16.43" height="15.45" x="411.31" y="269.62" class="decompiled"><title>bool __cdecl LOT_EnableBaddieAI(int16_t item_num, bool always);</title></rect>
<rect width="16.43" height="15.28" x="411.31" y="288.08" class="decompiled"><title>void __cdecl Output_InsertClippedPoly_Textured(int32_t vtx_count, float z, int16_t poly_type, int16_t tex_page);</title></rect>
<rect width="16.43" height="14.98" x="411.31" y="306.36" class="decompiled"><title>void __cdecl Matrix_Interpolate(void);</title></rect>
<rect width="16.43" height="14.98" x="411.31" y="324.35" class="known"><title>void __cdecl BigSpiderControl(int16_t item_num);</title></rect>
<rect width="16.43" height="14.94" x="411.31" y="342.33" class="decompiled"><title>void __cdecl ClearBuffers(DWORD flags, DWORD fill_color);</title></rect>
<rect width="16.43" height="14.73" x="411.31" y="360.27" class="decompiled"><title>void __cdecl Output_DrawPolyLine(const int16_t *obj_ptr);</title></rect>
<rect width="16.17" height="14.93" x="430.74" y="41.46" class="decompiled"><title>int32_t __cdecl Camera_ShiftClamp(GAME_VECTOR *pos, int32_t clamp);</title></rect>
<rect width="16.17" height="14.93" x="449.90" y="41.46" class="decompiled"><title>int32_t __cdecl Lara_TestHangJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="16.12" height="14.93" x="469.07" y="41.46" class="known"><title>void __cdecl BigEelControl(int16_t item_num);</title></rect>
<rect width="16.07" height="14.93" x="488.19" y="41.46" class="decompiled"><title>void __cdecl Lara_Col_ClimbDown(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="15.98" height="14.93" x="507.27" y="41.46" class="known"><title>void __cdecl Collide_GetJointAbsPosition(const ITEM *item, const XYZ_32 *vec, int32_t joint);</title></rect>
<rect width="15.89" height="14.93" x="526.25" y="41.46" class="decompiled"><title>SECTOR *__cdecl Room_GetSector(int32_t x, int32_t y, int32_t z, int16_t *room_num);</title></rect>
<rect width="15.80" height="14.93" x="545.14" y="41.46" class="known"><title>int32_t __cdecl AddTexturePage16(int32_t width, int32_t height, const uint8_t *page_buf);</title></rect>
<rect width="15.75" height="14.93" x="563.93" y="41.46" class="decompiled"><title>void __cdecl Output_InsertTrans8_Sorted(const PHD_VBUF *vbuf, int16_t shade);</title></rect>
<rect width="15.75" height="14.93" x="582.68" y="41.46" class="decompiled"><title>void __cdecl Lara_BaddieCollision(ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="15.75" height="14.93" x="601.43" y="41.46" class="decompiled"><title>void __cdecl Lara_HandleAboveWater(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="15.70" height="14.93" x="620.18" y="41.46" class="decompiled"><title>void __cdecl Gun_TargetInfo(const WEAPON_INFO *winfo);</title></rect>
<rect width="15.66" height="14.93" x="638.89" y="41.46" class="known"><title>void __cdecl BartoliControl(int16_t item_num);</title></rect>
<rect width="15.61" height="14.93" x="657.55" y="41.46" class="decompiled"><title>int32_t __cdecl Lara_GetWaterDepth(int32_t x, int32_t y, int32_t z, int16_t room_num);</title></rect>
<rect width="15.56" height="14.93" x="676.16" y="41.46" class="decompiled"><title>void __cdecl Lara_Col_Walk(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="15.52" height="14.93" x="694.72" y="41.46" class="known"><title>void __cdecl PropellerControl(int16_t item_num);</title></rect>
<rect width="15.43" height="14.93" x="713.24" y="41.46" class="decompiled"><title>void __cdecl Camera_Combat(const ITEM *item);</title></rect>
<rect width="15.33" height="14.93" x="731.67" y="41.46" class="decompiled"><title>void __cdecl Gun_Pistols_Control(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="14.87" height="15.25" x="430.74" y="59.39" class="decompiled"><title>void __cdecl Text_DrawBorder(int32_t x, int32_t y, int32_t z, int32_t width, int32_t height);</title></rect>
<rect width="14.87" height="15.20" x="430.74" y="77.64" class="decompiled"><title>BOOL __cdecl Level_LoadTexturePages(HANDLE handle);</title></rect>
<rect width="14.87" height="15.20" x="430.74" y="95.85" class="decompiled"><title>BOOL __cdecl Level_LoadDepthQ(HANDLE handle);</title></rect>
<rect width="14.87" height="15.16" x="430.74" y="114.05" class="decompiled"><title>int32_t __cdecl Boat_UserControl(ITEM *boat);</title></rect>
<rect width="14.87" height="15.16" x="430.74" y="132.21" class="decompiled"><title>int32_t __cdecl Lara_MovePosition(XYZ_32 *vec, ITEM *item, ITEM *lara_item);</title></rect>
<rect width="14.87" height="15.16" x="430.74" y="150.36" class="decompiled"><title>void __cdecl Gun_Rifle_FireHarpoon(void);</title></rect>
<rect width="14.87" height="14.79" x="430.74" y="168.52" class="decompiled"><title>void __cdecl Output_InsertFlatRect_Sorted(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t z, uint8_t color_idx);</title></rect>
<rect width="14.87" height="14.79" x="430.74" y="186.31" class="known"><title>void __cdecl ControlTwinkle(int16_t fx_num);</title></rect>
<rect width="14.87" height="14.65" x="430.74" y="204.09" class="decompiled"><title>void __cdecl S_Audio_Sample_Init2(HWND hwnd);</title></rect>
<rect width="14.87" height="14.65" x="430.74" y="221.74" class="known"><title>void __cdecl SE_GraphicsDlgInit(HWND hwndDlg);</title></rect>
<rect width="14.87" height="14.60" x="430.74" y="239.38" class="known"><title>void __cdecl SpinningBlade(int16_t item_num);</title></rect>
<rect width="14.87" height="14.51" x="430.74" y="256.98" class="known"><title>void __cdecl LiftFloorCeiling(ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *floor, int32_t *ceiling);</title></rect>
<rect width="14.87" height="14.37" x="430.74" y="274.49" class="decompiled"><title>void __cdecl Lara_Col_Run(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="14.87" height="14.32" x="430.74" y="291.86" class="decompiled"><title>void __cdecl Output_InsertPoly_Gouraud(int32_t vtx_count, float z, int32_t red, int32_t green, int32_t blue, int16_t poly_type);</title></rect>
<rect width="14.87" height="14.27" x="430.74" y="309.18" class="decompiled"><title>void __cdecl Boat_DoWakeEffect(ITEM *boat);</title></rect>
<rect width="14.87" height="14.27" x="430.74" y="326.45" class="known"><title>bool __cdecl TexturePageInit(TEXPAGE_DESC *page);</title></rect>
<rect width="14.87" height="14.18" x="430.74" y="343.73" class="known"><title>void __cdecl WinstonControl(int16_t item_num);</title></rect>
<rect width="14.87" height="14.09" x="430.74" y="360.91" class="decompiled"><title>int32_t __cdecl Boat_CheckGeton(int16_t item_num, COLL_INFO *coll);</title></rect>
<rect width="15.09" height="13.84" x="448.61" y="59.39" class="decompiled"><title>void __cdecl Creature_Kill(ITEM *item, int32_t kill_anim, int32_t kill_state, int32_t lara_kill_state);</title></rect>
<rect width="15.09" height="13.84" x="466.71" y="59.39" class="decompiled"><title>int32_t __cdecl Game_Cutscene_Control(int32_t nframes);</title></rect>
<rect width="15.04" height="13.84" x="484.80" y="59.39" class="decompiled"><title>int32_t __cdecl Misc_Move3DPosTo3DPos(PHD_3DPOS *src_pos, const PHD_3DPOS *dest_pos, int32_t velocity, PHD_ANGLE ang_add);</title></rect>
<rect width="15" height="13.84" x="502.85" y="59.39" class="decompiled"><title>const int16_t *__cdecl Output_CalcVerticeLight(const int16_t *obj_ptr);</title></rect>
<rect width="15" height="13.84" x="520.84" y="59.39" class="decompiled"><title>int32_t __cdecl Lara_TestHangJumpUp(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="14.95" height="13.84" x="538.84" y="59.39" class="decompiled"><title>void __cdecl HWR_DrawPolyList(void);</title></rect>
<rect width="14.80" height="13.84" x="556.78" y="59.39" class="decompiled"><title>void __cdecl Boat_Animation(ITEM *boat, int32_t collide);</title></rect>
<rect width="14.80" height="13.84" x="574.58" y="59.39" class="known"><title>void __cdecl Flare_Draw(void);</title></rect>
<rect width="14.75" height="13.84" x="592.38" y="59.39" class="decompiled"><title>int32_t __cdecl Room_GetWaterHeight(int32_t x, int32_t y, int32_t z, int16_t room_num);</title></rect>
<rect width="14.70" height="13.84" x="610.13" y="59.39" class="decompiled"><title>void __cdecl Inv_RingIsOpen(RING_INFO *ring);</title></rect>
<rect width="14.65" height="13.84" x="627.83" y="59.39" class="decompiled"><title>void __cdecl Gun_Rifle_Draw(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="14.60" height="13.84" x="645.48" y="59.39" class="known"><title>BOOL __cdecl S_FrontEndCheck(void);</title></rect>
<rect width="14.55" height="13.84" x="663.08" y="59.39" class="decompiled"><title>void __cdecl Flame_Control(int16_t fx_num);</title></rect>
<rect width="14.45" height="13.84" x="680.63" y="59.39" class="decompiled"><title>void __cdecl Lara_Col_Wade(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="14.35" height="13.84" x="698.08" y="59.39" class="decompiled"><title>void __fastcall Output_GourA(int32_t y0, int32_t y1, uint8_t color_idx); // actually, __watcall, which is esoteric and rarely supported</title></rect>
<rect width="14.31" height="13.84" x="715.44" y="59.39" class="decompiled"><title>int32_t __cdecl Level_Initialise(int32_t level_num, int32_t level_type);</title></rect>
<rect width="14.26" height="13.84" x="732.74" y="59.39" class="decompiled"><title>void __cdecl Boat_Collision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="14.52" height="13.49" x="448.61" y="76.23" class="decompiled"><title>void __cdecl Lara_SwimCollision(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="14.31" height="13.49" x="466.13" y="76.23" class="decompiled"><title>void __cdecl Lara_HandleSurface(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="14.21" height="13.49" x="483.44" y="76.23" class="decompiled"><title>void __cdecl Inv_Construct(void);</title></rect>
<rect width="14.16" height="13.49" x="500.66" y="76.23" class="known"><title>void __cdecl SpikeCollision(int16_t item_num, ITEM *litem, COLL_INFO *coll);</title></rect>
<rect width="14.16" height="13.49" x="517.82" y="76.23" class="known"><title>void __cdecl DartsControl(int16_t item_num);</title></rect>
<rect width="14.11" height="13.49" x="534.98" y="76.23" class="decompiled"><title>void __cdecl Camera_Shift(int32_t *x, int32_t *y, int32_t *h, int32_t target_x, int32_t target_y, int32_t target_h, int32_t left, int32_t top, int32_t right, int32_t bottom);</title></rect>
<rect width="14.01" height="13.49" x="552.10" y="76.23" class="decompiled"><title>const int16_t *__cdecl Output_InsertRoomSprite(const int16_t *obj_ptr, int32_t vtx_count);</title></rect>
<rect width="13.76" height="13.49" x="569.11" y="76.23" class="decompiled"><title>void __cdecl Lara_Col_Climbing(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="13.66" height="13.49" x="585.87" y="76.23" class="known"><title>void __cdecl Gun_DrawFlash(LARA_GUN_TYPE weapon_type, int32_t clip);</title></rect>
<rect width="13.56" height="13.49" x="602.53" y="76.23" class="known"><title>INT_PTR __stdcall SE_SoundDlgProc(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="13.51" height="13.49" x="619.09" y="76.23" class="decompiled"><title>void __cdecl Lara_State_Stop(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="13.51" height="13.49" x="635.60" y="76.23" class="known"><title>void __cdecl MovableBlock(int16_t item_num);</title></rect>
<rect width="13.46" height="13.49" x="652.10" y="76.23" class="decompiled"><title>void __cdecl Effect_Draw(int16_t fx_num);</title></rect>
<rect width="13.41" height="13.49" x="668.56" y="76.23" class="decompiled"><title>int32_t __cdecl Output_XGenXG(const int16_t *obj_ptr);</title></rect>
<rect width="13.36" height="13.49" x="684.97" y="76.23" class="decompiled"><title>void __cdecl Overlay_DrawAssaultTimer(void);</title></rect>
<rect width="13.31" height="13.49" x="701.33" y="76.23" class="decompiled"><title>int16_t __cdecl Game_Start(int32_t level_num, GAMEFLOW_LEVEL_TYPE level_type);</title></rect>
<rect width="13.26" height="13.49" x="717.64" y="76.23" class="decompiled"><title>void __cdecl Lara_State_Run(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="13.11" height="13.49" x="733.89" y="76.23" class="decompiled"><title>int32_t __cdecl Output_ZedClipper(int32_t vtx_count, POINT_INFO *pts, VERTEX_INFO *vtx);</title></rect>
<rect width="13.48" height="13.11" x="448.61" y="92.72" class="decompiled"><title>void __cdecl Output_DrawClippedPoly_Textured(int32_t vtx_count);</title></rect>
<rect width="13.48" height="13.11" x="448.61" y="108.84" class="known"><title>void __cdecl DoSnowEffect(ITEM *skidoo);</title></rect>
<rect width="13.48" height="13.06" x="448.61" y="124.95" class="decompiled"><title>void __cdecl Lara_UseItem(GAME_OBJECT_ID object_id);</title></rect>
<rect width="13.48" height="13.01" x="448.61" y="141.01" class="decompiled"><title>void __cdecl Inv_Ring_DoMotions(RING_INFO *ring);</title></rect>
<rect width="13.48" height="13.01" x="448.61" y="157.03" class="known"><title>void __cdecl DartEmitterControl(int16_t item_num);</title></rect>
<rect width="13.48" height="12.96" x="448.61" y="173.04" class="decompiled"><title>void __cdecl Output_InsertTransQuad_Sorted(int32_t x, int32_t y, int32_t width, int32_t height, int32_t z);</title></rect>
<rect width="13.48" height="12.96" x="448.61" y="189.01" class="known"><title>void __cdecl WaterFall(int16_t fx_num);</title></rect>
<rect width="13.48" height="12.91" x="448.61" y="204.97" class="decompiled"><title>void __cdecl RestoreLostBuffers(void);</title></rect>
<rect width="13.48" height="12.86" x="448.61" y="220.88" class="decompiled"><title>void __cdecl Item_AlignPosition(XYZ_32 *vec, ITEM *src_item, ITEM *dst_item);</title></rect>
<rect width="13.48" height="12.86" x="448.61" y="236.75" class="decompiled"><title>void __cdecl CreateScreenBuffers(void);</title></rect>
<rect width="13.48" height="12.81" x="448.61" y="252.61" class="decompiled"><title>void __fastcall Output_TransA(int32_t y0, int32_t y1, uint8_t depth_q); // actually, __watcall, which is esoteric and rarely supported</title></rect>
<rect width="13.48" height="12.71" x="448.61" y="268.42" class="decompiled"><title>void __cdecl Camera_UpdateCutscene(void);</title></rect>
<rect width="13.48" height="12.71" x="448.61" y="284.13" class="known"><title>void __cdecl ControlSpikeWall(int16_t item_num);</title></rect>
<rect width="13.48" height="12.66" x="448.61" y="299.84" class="decompiled"><title>int32_t __cdecl Item_TestPosition(int16_t *bounds, ITEM *src_item, ITEM *dst_item);</title></rect>
<rect width="13.48" height="12.66" x="448.61" y="315.51" class="known"><title>int32_t __cdecl TestBlockPush(ITEM *item, int32_t block_height, uint16_t quadrant);</title></rect>
<rect width="13.48" height="12.66" x="448.61" y="331.17" class="known"><title>void __cdecl CopyBitmapPalette(RGB_888 *src_pal, BYTE *src_bitmap, int32_t bitmap_size, RGB_888 *dest_pal);</title></rect>
<rect width="13.48" height="12.61" x="448.61" y="346.83" class="decompiled"><title>void __cdecl Lara_DeflectEdgeJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="13.48" height="12.56" x="448.61" y="362.44" class="decompiled"><title>BOOL __cdecl Level_LoadSprites(HANDLE handle);</title></rect>
<rect width="13.41" height="12.58" x="465.10" y="92.72" class="decompiled"><title>void __cdecl Output_InsertSkybox(const int16_t *obj_ptr);</title></rect>
<rect width="13.35" height="12.58" x="481.50" y="92.72" class="decompiled"><title>void __cdecl Output_InsertLine_ZBuffered(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t z, uint8_t color_idx);</title></rect>
<rect width="13.30" height="12.58" x="497.85" y="92.72" class="decompiled"><title>void __cdecl Overlay_DrawAmmoInfo(void);</title></rect>
<rect width="13.30" height="12.58" x="514.15" y="92.72" class="decompiled"><title>void __cdecl Inv_DoInventoryBackground(void);</title></rect>
<rect width="13.25" height="12.58" x="530.45" y="92.72" class="decompiled"><title>int32_t __cdecl Creature_Vault(int16_t item_num, int16_t angle, int32_t vault, int32_t shift);</title></rect>
<rect width="13.19" height="12.58" x="546.69" y="92.72" class="decompiled"><title>int32_t __cdecl Lara_TestSlide(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="13.03" height="12.58" x="562.89" y="92.72" class="known"><title>void __cdecl DrawSphereOfDoom(ITEM *item);</title></rect>
<rect width="12.93" height="12.58" x="578.92" y="92.72" class="decompiled"><title>void __cdecl Output_InsertLine_Sorted(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t z, uint8_t color_idx);</title></rect>
<rect width="12.82" height="12.58" x="594.84" y="92.72" class="decompiled"><title>void __cdecl Inv_InsertItem(INVENTORY_ITEM *inv_item);</title></rect>
<rect width="12.77" height="12.58" x="610.66" y="92.72" class="known"><title>void __cdecl SphereOfDoomCollision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="12.77" height="12.58" x="626.43" y="92.72" class="known"><title>int32_t __cdecl Collide_TestCollision(ITEM *item, const ITEM *lara_item);</title></rect>
<rect width="12.77" height="12.58" x="642.20" y="92.72" class="decompiled"><title>void __cdecl HWR_InitState(void);</title></rect>
<rect width="12.71" height="12.58" x="657.96" y="92.72" class="decompiled"><title>void __cdecl Lara_Col_Hang(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12.55" height="12.58" x="673.67" y="92.72" class="known"><title>void __cdecl S_CalculateStaticMeshLight(int32_t x, int32_t y, int32_t z, int32_t shade_1, int32_t shade_2, ROOM *room);</title></rect>
<rect width="12.34" height="12.58" x="689.23" y="92.72" class="decompiled"><title>BOOL __cdecl S_Input_Key(KEYMAP keymap);</title></rect>
<rect width="12.23" height="12.58" x="704.57" y="92.72" class="decompiled"><title>void __cdecl Item_Kill(int16_t item_num);</title></rect>
<rect width="12.13" height="12.58" x="719.80" y="92.72" class="decompiled"><title>void __cdecl Gun_InitialiseNewWeapon(void);</title></rect>
<rect width="12.07" height="12.58" x="734.93" y="92.72" class="decompiled"><title>void __cdecl Lara_Col_UpJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12.25" height="12.40" x="465.10" y="108.31" class="known"><title>void __cdecl SkidooGuns(void);</title></rect>
<rect width="12.25" height="12.40" x="465.10" y="123.71" class="known"><title>void __cdecl SE_SoundDlgUpdate(HWND hwndDlg);</title></rect>
<rect width="12.25" height="12.35" x="465.10" y="139.11" class="known"><title>HRESULT __stdcall EnumTextureFormatsCallback(LPDDSDESC lpDdsd, LPVOID lpContext);</title></rect>
<rect width="12.25" height="12.29" x="465.10" y="154.46" class="known"><title>void __cdecl SkidmanPush(ITEM *item, ITEM *lara_item, int32_t radius);</title></rect>
<rect width="12.25" height="12.13" x="465.10" y="169.76" class="known"><title>void __cdecl JellyControl(int16_t item_num);</title></rect>
<rect width="12.25" height="12.13" x="465.10" y="184.89" class="known"><title>void __cdecl S_DrawScreenBox(int32_t sx, int32_t sy, int32_t z, int32_t width, int32_t height, BYTE color_idx, const GOURAUD_OUTLINE *gour, uint16_t flags);</title></rect>
<rect width="12.25" height="12.08" x="465.10" y="200.02" class="known"><title>void __cdecl ControlCeilingSpikes(int16_t item_num);</title></rect>
<rect width="12.25" height="12.02" x="465.10" y="215.09" class="known"><title>void __cdecl InitialiseBartoli(int16_t item_num);</title></rect>
<rect width="12.25" height="12.02" x="465.10" y="230.12" class="known"><title>int32_t __cdecl S_SaveGame(const void *save_data, uint32_t save_size, int32_t slot_num);</title></rect>
<rect width="12.25" height="11.97" x="465.10" y="245.14" class="decompiled"><title>int32_t __cdecl GameStats(int32_t level_num);</title></rect>
<rect width="12.25" height="11.91" x="465.10" y="260.11" class="decompiled"><title>int32_t __cdecl Game_Cutscene_Start(int32_t level_num);</title></rect>
<rect width="12.25" height="11.80" x="465.10" y="275.02" class="decompiled"><title>int32_t __cdecl Inv_RemoveItem(GAME_OBJECT_ID object_id);</title></rect>
<rect width="12.25" height="11.80" x="465.10" y="289.83" class="decompiled"><title>int16_t __cdecl TitleSequence(void);</title></rect>
<rect width="12.25" height="11.75" x="465.10" y="304.63" class="decompiled"><title>void __cdecl Inv_Ring_Init(RING_INFO *ring, int16_t type, INVENTORY_ITEM **list, int16_t qty, int16_t current, IMOTION_INFO *imo);</title></rect>
<rect width="12.25" height="11.75" x="465.10" y="319.38" class="decompiled"><title>void __cdecl ScreenshotPCX(void);</title></rect>
<rect width="12.25" height="11.70" x="465.10" y="334.13" class="decompiled"><title>bool __cdecl S_Audio_Sample_Load(int32_t sample_id, LPWAVEFORMATEX format, const void *data, int32_t data_size);</title></rect>
<rect width="12.25" height="11.59" x="465.10" y="348.83" class="decompiled"><title>void __cdecl Lara_State_Compress(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="12.25" height="11.59" x="465.10" y="363.41" class="known"><title>void __cdecl CopterControl(int16_t item_num);</title></rect>
<rect width="12.28" height="11.51" x="480.35" y="108.31" class="decompiled"><title>void __cdecl Ember_Control(int16_t fx_num);</title></rect>
<rect width="12.28" height="11.51" x="495.62" y="108.31" class="decompiled"><title>bool __cdecl WinVidGoWindowed(int32_t width, int32_t height, DISPLAY_MODE *dispMode);</title></rect>
<rect width="12.22" height="11.51" x="510.90" y="108.31" class="decompiled"><title>void __cdecl Inv_InitColors(void);</title></rect>
<rect width="12.22" height="11.51" x="526.12" y="108.31" class="known"><title>void __cdecl Pendulum(int16_t item_num);</title></rect>
<rect width="12.16" height="11.51" x="541.34" y="108.31" class="known"><title>void __cdecl KillerStatueControl(int16_t item_num);</title></rect>
<rect width="12.05" height="11.51" x="556.50" y="108.31" class="decompiled"><title>int32_t __cdecl Text_GetWidth(TEXTSTRING *string);</title></rect>
<rect width="11.99" height="11.51" x="571.55" y="108.31" class="known"><title>int32_t __cdecl Diver_GetWaterSurface(int32_t x, int32_t y, int32_t z, int16_t room_num);</title></rect>
<rect width="11.99" height="11.51" x="586.54" y="108.31" class="decompiled"><title>void __cdecl LOT_InitialiseSlot(int16_t item_num, int32_t slot);</title></rect>
<rect width="11.99" height="11.51" x="601.53" y="108.31" class="known"><title>int32_t __cdecl SkidooCheckGetOffOK(int32_t direction);</title></rect>
<rect width="11.99" height="11.51" x="616.52" y="108.31" class="known"><title>INT_PTR __stdcall SE_ControlsDlgProc(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="11.93" height="11.51" x="631.51" y="108.31" class="decompiled"><title>TEXTSTRING *__cdecl Text_Create(int32_t x, int32_t y, int32_t z, const char *text);</title></rect>
<rect width="11.93" height="11.51" x="646.44" y="108.31" class="known"><title>void __cdecl FallingBlock(int16_t item_num);</title></rect>
<rect width="11.93" height="11.51" x="661.37" y="108.31" class="decompiled"><title>void __cdecl FmvBackToGame(void);</title></rect>
<rect width="11.93" height="11.51" x="676.31" y="108.31" class="known"><title>void __cdecl S_DisplayPicture(const char *file_name, BOOL is_title);</title></rect>
<rect width="11.88" height="11.51" x="691.24" y="108.31" class="decompiled"><title>void __cdecl Gun_Rifle_Undraw(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="11.88" height="11.51" x="706.12" y="108.31" class="decompiled"><title>bool __cdecl WinVidGetMinMaxInfo(LPMINMAXINFO info);</title></rect>
<rect width="11.53" height="11.51" x="720.99" y="108.31" class="known"><title>void __cdecl IcicleControl(int16_t item_num);</title></rect>
<rect width="11.48" height="11.51" x="735.52" y="108.31" class="decompiled"><title>void __cdecl Overlay_DrawPickups(bool pickup_state);</title></rect>
<rect width="11.45" height="11.47" x="480.35" y="122.81" class="decompiled"><title>void __cdecl Matrix_InterpolateArm(void);</title></rect>
<rect width="11.45" height="11.47" x="480.35" y="137.29" class="known"><title>void __cdecl SwitchCollision2(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="11.45" height="11.42" x="480.35" y="151.76" class="decompiled"><title>void __cdecl Lara_Col_Back(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="11.45" height="11.36" x="480.35" y="166.18" class="decompiled"><title>void __cdecl Lara_InitialiseMeshes(int32_t level_num);</title></rect>
<rect width="11.45" height="11.36" x="480.35" y="180.54" class="known"><title>BOOL __cdecl DecompPCX(const uint8_t *pcx, size_t pcx_size, LPBYTE pic, RGB_888 *pal);</title></rect>
<rect width="11.45" height="11.24" x="480.35" y="194.89" class="decompiled"><title>int32_t __cdecl Boat_TestWaterHeight(ITEM *item, int32_t z_off, int32_t x_off, XYZ_32 *pos);</title></rect>
<rect width="11.45" height="11.24" x="480.35" y="209.14" class="decompiled"><title>int32_t __cdecl Creature_CheckBaddieOverlap(int16_t item_num);</title></rect>
<rect width="11.45" height="11.24" x="480.35" y="223.38" class="known"><title>void __cdecl Flare_DrawInAir(ITEM *item);</title></rect>
<rect width="11.45" height="11.24" x="480.35" y="237.63" class="known"><title>void __cdecl SkidooCollision(int16_t item_num, ITEM *litem, COLL_INFO *coll);</title></rect>
<rect width="11.45" height="11.19" x="480.35" y="251.87" class="decompiled"><title>void __cdecl Output_DrawPoly_Gouraud(int32_t vtx_count, int32_t red, int32_t green, int32_t blue);</title></rect>
<rect width="11.45" height="11.07" x="480.35" y="266.06" class="decompiled"><title>int32_t __cdecl Lara_TestHangOnClimbWall(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="11.45" height="11.07" x="480.35" y="280.13" class="decompiled"><title>void __cdecl Gun_Rifle_Control(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="11.45" height="11.07" x="480.35" y="294.20" class="known"><title>int32_t __cdecl AddTexturePage8(int32_t width, int32_t height, const uint8_t *page_buf, int32_t pal_idx);</title></rect>
<rect width="11.45" height="10.96" x="480.35" y="308.27" class="decompiled"><title>void __cdecl Output_InsertPolygons(const int16_t *obj_ptr, int32_t clip);</title></rect>
<rect width="11.45" height="10.96" x="480.35" y="322.23" class="known"><title>void __cdecl ControlBubble1(int16_t fx_num);</title></rect>
<rect width="11.45" height="10.96" x="480.35" y="336.19" class="decompiled"><title>void __cdecl Lara_SurfaceCollision(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="11.45" height="10.96" x="480.35" y="350.14" class="known"><title>DWORD __cdecl WinInReadJoystick(int32_t *x, int32_t *y);</title></rect>
<rect width="11.45" height="10.90" x="480.35" y="364.10" class="decompiled"><title>int32_t __cdecl Box_StalkBox(const ITEM *item, const ITEM *enemy, int16_t box_num);</title></rect>
<rect width="10.66" height="11.71" x="494.80" y="122.81" class="decompiled"><title>void __cdecl Gun_Rifle_FireShotgun(void);</title></rect>
<rect width="10.66" height="11.59" x="494.80" y="137.52" class="known"><title>void __cdecl SphereOfDoom(int16_t item_num);</title></rect>
<rect width="10.66" height="11.59" x="494.80" y="152.11" class="decompiled"><title>void __cdecl Gun_Rifle_FireGrenade(void);</title></rect>
<rect width="10.66" height="11.52" x="494.80" y="166.69" class="decompiled"><title>void __cdecl Lara_DoClimbLeftRight(ITEM *item, COLL_INFO *coll, int32_t result, int32_t shift);</title></rect>
<rect width="10.66" height="11.40" x="494.80" y="181.22" class="decompiled"><title>void __cdecl Camera_Chase(const ITEM *item);</title></rect>
<rect width="10.66" height="11.28" x="494.80" y="195.62" class="decompiled"><title>void __cdecl Lara_State_SurfTread(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="10.66" height="11.22" x="494.80" y="209.90" class="decompiled"><title>void __cdecl Output_InsertRoom(const int16_t *obj_ptr, int32_t is_outside);</title></rect>
<rect width="10.66" height="11.10" x="494.80" y="224.12" class="known"><title>void __cdecl Output_CalculateObjectLighting(const ITEM *item, const FRAME_INFO *frame);</title></rect>
<rect width="10.66" height="11.10" x="494.80" y="238.22" class="known"><title>BOOL __stdcall DInputEnumDevicesCallback(LPCDIDEVICEINSTANCE lpddi, LPVOID pvRef);</title></rect>
<rect width="10.66" height="11.10" x="494.80" y="252.32" class="known"><title>void __cdecl CalculateWibbleTable(void);</title></rect>
<rect width="10.66" height="11.04" x="494.80" y="266.42" class="decompiled"><title>void __cdecl Camera_RefreshFromTrigger(int16_t type, const int16_t *data);</title></rect>
<rect width="10.66" height="11.04" x="494.80" y="280.46" class="decompiled"><title>int32_t __cdecl Lara_TestWaterStepOut(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="10.66" height="11.04" x="494.80" y="294.50" class="decompiled"><title>int32_t __cdecl S_Audio_Sample_Play(int32_t sample_id, int32_t volume, int32_t pitch, int32_t pan, int32_t flags);</title></rect>
<rect width="10.66" height="10.98" x="494.80" y="308.54" class="decompiled"><title>void __cdecl Lara_TouchLava(ITEM *item);</title></rect>
<rect width="10.66" height="10.98" x="494.80" y="322.51" class="decompiled"><title>void __cdecl RenderFinish(bool need_to_clear_textures);</title></rect>
<rect width="10.66" height="10.86" x="494.80" y="336.49" class="known"><title>bool __cdecl DInputJoystickCreate(void);</title></rect>
<rect width="10.66" height="10.86" x="494.80" y="350.35" class="known"><title>void __cdecl S_InitialisePolyList(BOOL clear_back_buffer);</title></rect>
<rect width="10.66" height="10.80" x="494.80" y="364.20" class="decompiled"><title>void __cdecl Effect_Kill(int16_t fx_num);</title></rect>
<rect width="10.71" height="10.74" x="508.46" y="122.81" class="known"><title>void __cdecl BigBowlControl(int16_t item_num);</title></rect>
<rect width="10.65" height="10.74" x="522.17" y="122.81" class="decompiled"><title>void __cdecl Lara_SlideSlope(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="10.65" height="10.74" x="535.82" y="122.81" class="decompiled"><title>bool __cdecl WinVidSpinMessageLoop(bool needWait);</title></rect>
<rect width="10.65" height="10.74" x="549.47" y="122.81" class="decompiled"><title>BOOL __stdcall S_Audio_Sample_DSoundEnumCallback(LPGUID guid, LPCTSTR description, LPCTSTR module, LPVOID context);</title></rect>
<rect width="10.59" height="10.74" x="563.12" y="122.81" class="decompiled"><title>int32_t __cdecl Lara_TestWall(ITEM *item, int32_t front, int32_t right, int32_t down);</title></rect>
<rect width="10.59" height="10.74" x="576.71" y="122.81" class="known"><title>int32_t __cdecl SkidooCheckGeton(int16_t item_num, COLL_INFO *coll);</title></rect>
<rect width="10.53" height="10.74" x="590.30" y="122.81" class="known"><title>void __cdecl FallingCeiling(int16_t item_num);</title></rect>
<rect width="10.53" height="10.74" x="603.83" y="122.81" class="known"><title>BOOL __cdecl SelectDrive(void);</title></rect>
<rect width="10.41" height="10.74" x="617.36" y="122.81" class="known"><title>void __cdecl ControlHotLiquid(int16_t fx_num);</title></rect>
<rect width="10.29" height="10.74" x="630.77" y="122.81" class="decompiled"><title>void __cdecl CutscenePlayer_Control(int16_t item_num);</title></rect>
<rect width="10.29" height="10.74" x="644.06" y="122.81" class="known"><title>void __cdecl SmashIceControl(int16_t item_num);</title></rect>
<rect width="10.29" height="10.74" x="657.34" y="122.81" class="decompiled"><title>void __cdecl DrawQuad(float sx, float sy, float width, float height, D3DCOLOR color);</title></rect>
<rect width="10.29" height="10.74" x="670.63" y="122.81" class="known"><title>INT_PTR __stdcall SE_AdvancedDlgProc(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="10.23" height="10.74" x="683.92" y="122.81" class="known"><title>void __cdecl EarthQuake(int16_t item_num);</title></rect>
<rect width="10.23" height="10.74" x="697.15" y="122.81" class="known"><title>void __cdecl ModifyStartInfo(int32_t level_num);</title></rect>
<rect width="10.23" height="10.74" x="710.38" y="122.81" class="known"><title>void __cdecl SpringBoardControl(int16_t item_num);</title></rect>
<rect width="10.23" height="10.74" x="723.60" y="122.81" class="decompiled"><title>void __cdecl S_LoadSettings(void);</title></rect>
<rect width="10.17" height="10.74" x="736.83" y="122.81" class="decompiled"><title>int32_t __cdecl LOS_ClipTarget(const GAME_VECTOR *start, GAME_VECTOR *target, const SECTOR *sector);</title></rect>
<rect width="10.18" height="10.73" x="508.46" y="136.56" class="decompiled"><title>void __cdecl Room_TriggerMusicTrackImpl(int16_t value, int16_t flags, int16_t type);</title></rect>
<rect width="10.18" height="10.67" x="508.46" y="150.29" class="known"><title>void __cdecl CreateBartoliLight(int16_t item_num);</title></rect>
<rect width="10.18" height="10.67" x="508.46" y="163.96" class="decompiled"><title>void __cdecl Dragon_Bones(int16_t item_num);</title></rect>
<rect width="10.18" height="10.67" x="508.46" y="177.63" class="known"><title>void __cdecl MiniCopterControl(int16_t item_num);</title></rect>
<rect width="10.18" height="10.54" x="508.46" y="191.29" class="decompiled"><title>void __cdecl Camera_Clip(int32_t *x, int32_t *y, int32_t *h, int32_t target_x, int32_t target_y, int32_t target_h, int32_t left, int32_t top, int32_t right, int32_t bottom);</title></rect>
<rect width="10.18" height="10.54" x="508.46" y="204.84" class="decompiled"><title>void __cdecl Lara_Col_ForwardJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="10.18" height="10.54" x="508.46" y="218.38" class="known"><title>bool __cdecl SE_GraphicsTestStart(void);</title></rect>
<rect width="10.18" height="10.42" x="508.46" y="231.92" class="decompiled"><title>int16_t __cdecl Creature_Turn(ITEM *item, int16_t maximum_turn);</title></rect>
<rect width="10.18" height="10.42" x="508.46" y="245.34" class="decompiled"><title>void __cdecl WinVidSetDisplayAdapter(DISPLAY_ADAPTER *disp_adapter);</title></rect>
<rect width="10.18" height="10.35" x="508.46" y="258.76" class="known"><title>void __cdecl LiftControl(int16_t item_num);</title></rect>
<rect width="10.18" height="10.29" x="508.46" y="272.11" class="decompiled"><title>void __cdecl Output_InsertTransQuad(int32_t x, int32_t y, int32_t width, int32_t height, int32_t z);</title></rect>
<rect width="10.18" height="10.29" x="508.46" y="285.40" class="decompiled"><title>void __cdecl Lara_State_ForwardJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="10.18" height="10.29" x="508.46" y="298.69" class="known"><title>void __cdecl Flare_DoInHand(int32_t flare_age);</title></rect>
<rect width="10.18" height="10.29" x="508.46" y="311.99" class="decompiled"><title>void __cdecl CreateWindowPalette(void);</title></rect>
<rect width="10.18" height="10.23" x="508.46" y="325.28" class="decompiled"><title>int32_t __cdecl Output_XGenX(const int16_t *obj_ptr);</title></rect>
<rect width="10.18" height="10.23" x="508.46" y="338.50" class="known"><title>void __cdecl GeneralControl(int16_t item_num);</title></rect>
<rect width="10.18" height="10.23" x="508.46" y="351.73" class="decompiled"><title>DWORD __cdecl EncodeLinePCX(BYTE *src, DWORD width, BYTE *dst);</title></rect>
<rect width="10.18" height="10.04" x="508.46" y="364.96" class="decompiled"><title>void __cdecl UpdateFrame(bool need_run_message_loop, LPRECT rect);</title></rect>
<rect width="10.04" height="10.11" x="521.63" y="136.56" class="decompiled"><title>void __cdecl Lara_TestWaterDepth(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="10.04" height="10.11" x="534.67" y="136.56" class="known"><title>void __cdecl GetCarriedItems(void);</title></rect>
<rect width="9.98" height="10.11" x="547.71" y="136.56" class="decompiled"><title>void __cdecl Demo_LoadLaraPos(void);</title></rect>
<rect width="9.85" height="10.11" x="560.69" y="136.56" class="decompiled"><title>void __cdecl Output_InsertFlatRect(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t z, uint8_t color_idx);</title></rect>
<rect width="9.85" height="10.11" x="573.54" y="136.56" class="decompiled"><title>int32_t __cdecl Item_TestBoundsCollide(const ITEM *src_item, const ITEM *dst_item, int32_t radius);</title></rect>
<rect width="9.79" height="10.11" x="586.38" y="136.56" class="decompiled"><title>void __cdecl Lara_State_Wade(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="9.72" height="10.11" x="599.17" y="136.56" class="known"><title>void __cdecl DInputKeyboardCreate(void);</title></rect>
<rect width="9.66" height="10.11" x="611.89" y="136.56" class="decompiled"><title>void __cdecl Room_GetNearbyRooms(int32_t x, int32_t y, int32_t z, int32_t r, int32_t h, int16_t room_num);</title></rect>
<rect width="9.66" height="10.11" x="624.55" y="136.56" class="known"><title>void __cdecl DoorControl(int16_t item_num);</title></rect>
<rect width="9.66" height="10.11" x="637.21" y="136.56" class="known"><title>BYTE __cdecl FindNearestPaletteEntry(RGB_888 *palette, int32_t red, int32_t green, int32_t blue, bool ignore_sys_palette);</title></rect>
<rect width="9.60" height="10.11" x="649.87" y="136.56" class="decompiled"><title>void __cdecl Output_RotateLight(int16_t pitch, int16_t yaw);</title></rect>
<rect width="9.60" height="10.11" x="662.46" y="136.56" class="known"><title>bool __cdecl SE_SoundTestStart(void);</title></rect>
<rect width="9.53" height="10.11" x="675.06" y="136.56" class="unused"><title>sub_4449D0</title></rect>
<rect width="9.53" height="10.11" x="687.59" y="136.56" class="decompiled"><title>bool __cdecl WinVidCreateGameWindow(void);</title></rect>
<rect width="9.53" height="10.11" x="700.12" y="136.56" class="decompiled"><title>BOOL __cdecl GF_ReadStringTable(DWORD count, char **string_table, char **string_buf, LPDWORD buf_size, HANDLE handle);</title></rect>
<rect width="9.47" height="10.11" x="712.66" y="136.56" class="decompiled"><title>void __cdecl Output_QuickSort(int32_t left, int32_t right);</title></rect>
<rect width="9.47" height="10.11" x="725.13" y="136.56" class="decompiled"><title>void __cdecl EmberEmitter_Control(int16_t item_num);</title></rect>
<rect width="9.41" height="10.11" x="737.59" y="136.56" class="known"><title>void __cdecl SmashWindow(int16_t item_num);</title></rect>
<rect width="9.54" height="9.97" x="521.63" y="149.67" class="decompiled"><title>bool __cdecl S_Audio_Sample_DSoundBufferTest(void);</title></rect>
<rect width="9.54" height="9.97" x="521.63" y="162.64" class="known"><title>BOOL __cdecl S_ReloadLevelGraphics(BOOL reload_palettes, BOOL reload_tex_pages);</title></rect>
<rect width="9.54" height="9.97" x="521.63" y="175.61" class="known"><title>void __thiscall SE_LoadBitmapResource(BITMAP_RESOURCE *bmpRsrc, LPCTSTR lpName);</title></rect>
<rect width="9.54" height="9.84" x="521.63" y="188.59" class="known"><title>void __cdecl Splash(ITEM *item);</title></rect>
<rect width="9.54" height="9.77" x="521.63" y="201.42" class="decompiled"><title>int32_t __cdecl Inv_GetItemOption(GAME_OBJECT_ID object_id);</title></rect>
<rect width="9.54" height="9.77" x="521.63" y="214.20" class="decompiled"><title>void __cdecl Gun_AimWeapon(WEAPON_INFO *winfo, LARA_ARM *arm);</title></rect>
<rect width="9.54" height="9.71" x="521.63" y="226.97" class="decompiled"><title>void __cdecl Requester_ChangeItem(REQUEST_INFO *req, int32_t item, const char *text1, uint32_t flags1, const char *text2, uint32_t flags2);</title></rect>
<rect width="9.54" height="9.71" x="521.63" y="239.68" class="decompiled"><title>void __cdecl Option_Compass(INVENTORY_ITEM *item);</title></rect>
<rect width="9.54" height="9.71" x="521.63" y="252.39" class="known"><title>void __cdecl AnimateTextures(int32_t ticks);</title></rect>
<rect width="9.54" height="9.64" x="521.63" y="265.09" class="known"><title>void __cdecl DeathSlideCollision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="9.54" height="9.57" x="521.63" y="277.73" class="decompiled"><title>void __cdecl Lara_Col_StepRight(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="9.54" height="9.57" x="521.63" y="290.31" class="decompiled"><title>int32_t __cdecl Lara_TestClimbStance(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="9.54" height="9.57" x="521.63" y="302.88" class="known"><title>void __cdecl SE_SoundDlgInit(HWND hwndDlg);</title></rect>
<rect width="9.54" height="9.51" x="521.63" y="315.46" class="known"><title>void __cdecl ControlGongBonger(int16_t item_num);</title></rect>
<rect width="9.54" height="9.51" x="521.63" y="327.97" class="known"><title>int32_t __cdecl SwitchTrigger(int16_t item_num, int16_t timer);</title></rect>
<rect width="9.54" height="9.51" x="521.63" y="340.47" class="known"><title>void __cdecl TeethTrap(int16_t item_num);</title></rect>
<rect width="9.54" height="9.51" x="521.63" y="352.98" class="decompiled"><title>HRESULT __stdcall Enum3DDevicesCallback(GUID *lpGuid, LPTSTR lpDeviceDescription, LPTSTR lpDeviceName, LPD3DDEVICEDESC lpD3DHWDeviceDesc, LPD3DDEVICEDESC lpD3DHELDeviceDesc, LPVOID lpContext);</title></rect>
<rect width="9.54" height="9.51" x="521.63" y="365.49" class="known"><title>void __cdecl SE_ControlsDlgInit(HWND hwndDlg);</title></rect>
<rect width="9.95" height="9.05" x="534.18" y="149.67" class="decompiled"><title>void __cdecl Lara_State_Extra_PullDagger(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="9.95" height="9.05" x="547.13" y="149.67" class="decompiled"><title>int32_t __cdecl Lara_TestClimbPos(ITEM *item, int32_t front, int32_t right, int32_t origin, int32_t height, int32_t *shift);</title></rect>
<rect width="9.95" height="9.05" x="560.08" y="149.67" class="decompiled"><title>bool __cdecl WinVidCheckGameWindowPalette(HWND hWnd);</title></rect>
<rect width="9.95" height="9.05" x="573.03" y="149.67" class="decompiled"><title>void __cdecl CreateZBuffer(void);</title></rect>
<rect width="9.88" height="9.05" x="585.98" y="149.67" class="decompiled"><title>int32_t __cdecl Lara_LandedBad(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="9.88" height="9.05" x="598.86" y="149.67" class="decompiled"><title>void __cdecl Room_AlterFloorHeight(ITEM *item, int32_t height);</title></rect>
<rect width="9.81" height="9.05" x="611.74" y="149.67" class="decompiled"><title>void __cdecl Lara_CheatGetStuff(void);</title></rect>
<rect width="9.74" height="9.05" x="624.56" y="149.67" class="known"><title>int16_t __cdecl GunHit(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE yrot, int16_t room_num);</title></rect>
<rect width="9.74" height="9.05" x="637.30" y="149.67" class="decompiled"><title>int32_t __cdecl BGND_AddTexture(int32_t tile_idx, BYTE *bitmap, int32_t pal_index, RGB_888 *bmp_pal);</title></rect>
<rect width="9.74" height="9.05" x="650.04" y="149.67" class="decompiled"><title>bool __cdecl D3DSetViewport(void);</title></rect>
<rect width="9.68" height="9.05" x="662.79" y="149.67" class="decompiled"><title>void __cdecl Creature_Die(int16_t item_num, int32_t explode);</title></rect>
<rect width="9.68" height="9.05" x="675.46" y="149.67" class="decompiled"><title>void __cdecl LOT_CreateZone(ITEM *item);</title></rect>
<rect width="9.47" height="9.05" x="688.14" y="149.67" class="decompiled"><title>void __cdecl Output_InsertLine(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t z, uint8_t color_idx);</title></rect>
<rect width="9.40" height="9.05" x="700.61" y="149.67" class="decompiled"><title>void __cdecl Room_DrawSingleRoomGeometry(int16_t room_num);</title></rect>
<rect width="9.33" height="9.05" x="713.01" y="149.67" class="decompiled"><title>void __cdecl Gondola_Control(int16_t item_num);</title></rect>
<rect width="9.33" height="9.05" x="725.34" y="149.67" class="decompiled"><title>void __cdecl Room_FlipMap(void);</title></rect>
<rect width="9.33" height="9.05" x="737.67" y="149.67" class="decompiled"><title>void __cdecl Lara_Col_FastBack(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="9.30" height="9.08" x="534.18" y="161.72" class="decompiled"><title>void __cdecl Lara_Col_Roll2(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="9.23" height="9.08" x="546.48" y="161.72" class="known"><title>void __cdecl AssaultFinished(ITEM *item);</title></rect>
<rect width="9.23" height="9.08" x="558.71" y="161.72" class="known"><title>int32_t __cdecl TestHeight(ITEM *item, int32_t z_off, int32_t x_off, XYZ_32 *pos);</title></rect>
<rect width="9.17" height="9.08" x="570.95" y="161.72" class="decompiled"><title>int32_t __cdecl Lara_TestHangSwingIn(ITEM *item, PHD_ANGLE angle);</title></rect>
<rect width="9.17" height="9.08" x="583.11" y="161.72" class="known"><title>int32_t __cdecl OnDrawBridge(ITEM *item, int32_t x, int32_t y);</title></rect>
<rect width="9.17" height="9.08" x="595.28" y="161.72" class="known"><title>void __cdecl S_AnimateTextures(int32_t ticks);</title></rect>
<rect width="9.10" height="9.08" x="607.45" y="161.72" class="decompiled"><title>void __cdecl Camera_Initialise(void);</title></rect>
<rect width="9.03" height="9.08" x="619.54" y="161.72" class="decompiled"><title>bool __cdecl WinVidGetDisplayAdapters(void);</title></rect>
<rect width="8.96" height="9.08" x="631.57" y="161.72" class="known"><title>void __cdecl ControlWaterSprite(int16_t fx_num);</title></rect>
<rect width="8.96" height="9.08" x="643.53" y="161.72" class="decompiled"><title>DWORD __cdecl CompPCX(BYTE *bitmap, DWORD width, DWORD height, RGB_888 *palette, BYTE **pcx_data);</title></rect>
<rect width="8.96" height="9.08" x="655.49" y="161.72" class="known"><title>void __cdecl SyncSurfacePalettes(void *src_data, int32_t width, int32_t height, int32_t src_pitch, RGB_888 *src_palette, void *dst_data, int32_t dst_pitch, RGB_888 *dst_palette, bool preserve_sys_palette);</title></rect>
<rect width="8.89" height="9.08" x="667.45" y="161.72" class="decompiled"><title>int32_t __cdecl Lara_TestEdgeCatch(ITEM *item, COLL_INFO *coll, int32_t *edge);</title></rect>
<rect width="8.82" height="9.08" x="679.34" y="161.72" class="decompiled"><title>void __cdecl Requester_AddItem(REQUEST_INFO *req, const char *text1, uint32_t flags1, const char *text2, uint32_t flags2);</title></rect>
<rect width="8.82" height="9.08" x="691.16" y="161.72" class="known"><title>void __cdecl SpiderLeap(int16_t item_num, int16_t angle);</title></rect>
<rect width="8.75" height="9.08" x="702.99" y="161.72" class="decompiled"><title>bool __cdecl Matrix_TranslateRel(int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="8.75" height="9.08" x="714.74" y="161.72" class="decompiled"><title>int32_t __cdecl Item_GetAnimChange(ITEM *item, const ANIM *anim);</title></rect>
<rect width="8.75" height="9.08" x="726.49" y="161.72" class="decompiled"><title>int16_t __cdecl Effect_MissileFlame(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE yrot, int16_t room_num);</title></rect>
<rect width="8.75" height="9.08" x="738.25" y="161.72" class="decompiled"><title>void __cdecl Overlay_DrawHealthBar(bool flash_state);</title></rect>
<rect width="8.66" height="9.17" x="534.18" y="173.80" class="decompiled"><title>void __cdecl Lara_SlideEdgeJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="8.66" height="9.17" x="534.18" y="185.97" class="known"><title>void __cdecl S_CopyScreenToBuffer(void);</title></rect>
<rect width="8.66" height="9.10" x="534.18" y="198.14" class="decompiled"><title>void __cdecl Matrix_RotX(int16_t rx);</title></rect>
<rect width="8.66" height="9.10" x="534.18" y="210.24" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectGT3_ZBuffered(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="8.66" height="9.10" x="534.18" y="222.34" class="decompiled"><title>void __cdecl Requester_SetHeading(REQUEST_INFO *req, char *text1, uint32_t flags1, char *text2, uint32_t flags2);</title></rect>
<rect width="8.66" height="9.10" x="534.18" y="234.44" class="decompiled"><title>int32_t __cdecl Lara_CheckForLetGo(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="8.66" height="9.10" x="534.18" y="246.54" class="decompiled"><title>void __cdecl Gun_FindTargetPoint(const ITEM *item, GAME_VECTOR *target);</title></rect>
<rect width="8.66" height="9.10" x="534.18" y="258.64" class="known"><title>bool __cdecl GuidStringToBinary(LPCTSTR lpString, GUID *guid);</title></rect>
<rect width="8.66" height="8.96" x="534.18" y="270.74" class="decompiled"><title>void __cdecl Matrix_RotY(int16_t ry);</title></rect>
<rect width="8.66" height="8.96" x="534.18" y="282.70" class="decompiled"><title>void __cdecl Matrix_RotZ(int16_t rz);</title></rect>
<rect width="8.66" height="8.96" x="534.18" y="294.65" class="decompiled"><title>void __cdecl Creature_Float(int16_t item_num);</title></rect>
<rect width="8.66" height="8.96" x="534.18" y="306.61" class="known"><title>void __cdecl XianDamage(ITEM *item, CREATURE *xian, int32_t damage);</title></rect>
<rect width="8.66" height="8.89" x="534.18" y="318.57" class="decompiled"><title>void __cdecl Output_InsertSprite(int32_t z, int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t sprite_idx, int16_t shade);</title></rect>
<rect width="8.66" height="8.89" x="534.18" y="330.45" class="decompiled"><title>int32_t __cdecl Box_ValidBox(const ITEM *item, int16_t zone_num, int16_t box_num);</title></rect>
<rect width="8.66" height="8.89" x="534.18" y="342.34" class="known"><title>void __cdecl ShootAtLara(FX *fx);</title></rect>
<rect width="8.66" height="8.89" x="534.18" y="354.23" class="known"><title>int16_t __cdecl GunMiss(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE yrot, int16_t room_num);</title></rect>
<rect width="8.66" height="8.89" x="534.18" y="366.11" class="decompiled"><title>bool __cdecl ShowDDrawGameWindow(bool active);</title></rect>
<rect width="8.66" height="8.75" x="545.84" y="173.80" class="decompiled"><title>void __cdecl Lara_State_Extra_StartHouse(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="8.59" height="8.75" x="557.50" y="173.80" class="decompiled"><title>int32_t __cdecl Box_EscapeBox(const ITEM *item, const ITEM *enemy, int16_t box_num);</title></rect>
<rect width="8.59" height="8.75" x="569.09" y="173.80" class="known"><title>void __cdecl DoLotsOfBlood(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE direction, int16_t room_num, int32_t num);</title></rect>
<rect width="8.52" height="8.75" x="580.68" y="173.80" class="decompiled"><title>void __cdecl Requester_Shutdown(REQUEST_INFO *req);</title></rect>
<rect width="8.52" height="8.75" x="592.20" y="173.80" class="decompiled"><title>void __cdecl Lara_State_Extra_FinalAnim(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="8.52" height="8.75" x="603.72" y="173.80" class="known"><title>int32_t __cdecl OnTrapDoor(ITEM *item, int32_t x, int32_t z);</title></rect>
<rect width="8.45" height="8.75" x="615.23" y="173.80" class="known"><title>bool __cdecl LoadTexturePage(int32_t page_idx, bool reset);</title></rect>
<rect width="8.38" height="8.75" x="626.68" y="173.80" class="decompiled"><title>void __cdecl Output_AlterFOV(int16_t fov);</title></rect>
<rect width="8.38" height="8.75" x="638.06" y="173.80" class="decompiled"><title>void __cdecl Matrix_RotYXZsuperpack(const int16_t **pprot, int32_t skip);</title></rect>
<rect width="8.38" height="8.75" x="649.44" y="173.80" class="decompiled"><title>void __cdecl CreateRenderBuffer(void);</title></rect>
<rect width="8.31" height="8.75" x="660.82" y="173.80" class="decompiled"><title>int32_t __cdecl LOS_Check(const GAME_VECTOR *start, GAME_VECTOR *target);</title></rect>
<rect width="8.24" height="8.75" x="672.12" y="173.80" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectGT3_Sorted(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="8.24" height="8.75" x="683.36" y="173.80" class="known"><title>void __cdecl setup_screen_size(void);</title></rect>
<rect width="8.09" height="8.75" x="694.60" y="173.80" class="decompiled"><title>void __cdecl Output_DrawScreenSprite(int32_t sx, int32_t sy, int32_t sz, int32_t scale_h, int32_t scale_v, int16_t sprite_idx, int16_t shade, uint16_t flags);</title></rect>
<rect width="8.09" height="8.75" x="705.69" y="173.80" class="known"><title>int32_t __cdecl Flare_DoLight(XYZ_32 *pos, int32_t flare_age);</title></rect>
<rect width="8.09" height="8.75" x="716.79" y="173.80" class="known"><title>void __cdecl InitialiseFinalLevel(void);</title></rect>
<rect width="8.09" height="8.75" x="727.88" y="173.80" class="decompiled"><title>void __cdecl CreateClipper(void);</title></rect>
<rect width="8.02" height="8.75" x="738.98" y="173.80" class="decompiled"><title>void __cdecl Item_NewRoom(int16_t item_num, int16_t room_num);</title></rect>
<rect width="8.17" height="8.59" x="545.84" y="185.54" class="decompiled"><title>bool __cdecl S_Audio_Sample_Init(void);</title></rect>
<rect width="8.17" height="8.52" x="545.84" y="197.13" class="decompiled"><title>void __cdecl Lara_CollideStop(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="8.17" height="8.44" x="545.84" y="208.65" class="known"><title>void __cdecl swap_meshes_with_meshswap3(ITEM *item);</title></rect>
<rect width="8.17" height="8.44" x="545.84" y="220.10" class="decompiled"><title>void __cdecl Level_LoadDemoExternal(LPCTSTR level_name);</title></rect>
<rect width="8.17" height="8.44" x="545.84" y="231.54" class="decompiled"><title>int32_t __cdecl Game_Loop(bool demo_mode);</title></rect>
<rect width="8.17" height="8.37" x="545.84" y="242.98" class="decompiled"><title>void __cdecl Camera_Fixed(void);</title></rect>
<rect width="8.17" height="8.37" x="545.84" y="254.35" class="decompiled"><title>int16_t __cdecl Room_GetTiltType(const SECTOR *sector, int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="8.17" height="8.37" x="545.84" y="265.72" class="decompiled"><title>void __cdecl Lara_Col_FastFall(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="8.17" height="8.29" x="545.84" y="277.09" class="known"><title>void __cdecl WarriorSparkleTrail(ITEM *item);</title></rect>
<rect width="8.17" height="8.29" x="545.84" y="288.38" class="decompiled"><title>void __cdecl CreateBackBuffer(void);</title></rect>
<rect width="8.17" height="8.29" x="545.84" y="299.68" class="known"><title>bool __cdecl CreateTexturePageSurface(TEXPAGE_DESC *desc);</title></rect>
<rect width="8.17" height="8.22" x="545.84" y="310.97" class="decompiled"><title>void __cdecl Overlay_DrawAirBar(bool flash_state);</title></rect>
<rect width="8.17" height="8.22" x="545.84" y="322.19" class="known"><title>void __cdecl AdjustTextureUVs(bool reset_uv_add);</title></rect>
<rect width="8.17" height="8.15" x="545.84" y="333.42" class="decompiled"><title>void __cdecl Output_DrawScreenSprite2D(int32_t sx, int32_t sy, int32_t sz, int32_t scale_h, int32_t scale_v, int16_t sprite_idx, int16_t shade, uint16_t flags);</title></rect>
<rect width="8.17" height="8.15" x="545.84" y="344.56" class="decompiled"><title>void __cdecl Lara_Control_Cutscene(int16_t item_num);</title></rect>
<rect width="8.17" height="8.15" x="545.84" y="355.71" class="decompiled"><title>void __cdecl Room_RemoveFlipItems(ROOM *r);</title></rect>
<rect width="8.17" height="8.15" x="545.84" y="366.85" class="known"><title>void __cdecl floor_shake_effect(ITEM *item);</title></rect>
<rect width="7.88" height="8.45" x="557.01" y="185.54" class="decompiled"><title>void __cdecl Lara_State_DeathSlide(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="7.88" height="8.45" x="557.01" y="196.99" class="decompiled"><title>void __cdecl Lara_Col_Compress( ITEM *item, COLL_INFO *coll );</title></rect>
<rect width="7.88" height="8.45" x="557.01" y="208.44" class="decompiled"><title>void __cdecl Gun_HitTarget(ITEM *item, GAME_VECTOR *hitpos, int32_t damage);</title></rect>
<rect width="7.88" height="8.45" x="557.01" y="219.88" class="known"><title>void __cdecl WindowControl(int16_t item_num);</title></rect>
<rect width="7.88" height="8.45" x="557.01" y="231.33" class="known"><title>int32_t __cdecl S_LoadGame(void *save_data, uint32_t save_size, int32_t slot_num);</title></rect>
<rect width="7.88" height="8.45" x="557.01" y="242.78" class="decompiled"><title>void __cdecl Option_Controls_UpdateText(void);</title></rect>
<rect width="7.88" height="8.37" x="557.01" y="254.22" class="decompiled"><title>void __cdecl Output_SetNearZ(int32_t near_z);</title></rect>
<rect width="7.88" height="8.37" x="557.01" y="265.59" class="decompiled"><title>void __cdecl Box_TargetBox(LOT_INFO *lot, int16_t box_num);</title></rect>
<rect width="7.88" height="8.37" x="557.01" y="276.96" class="decompiled"><title>void __cdecl Lara_Col_TurnRight(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="7.88" height="8.37" x="557.01" y="288.33" class="known"><title>bool __cdecl GetRegistryStringValue(LPCTSTR lpValueName, LPTSTR value, DWORD maxSize, LPCTSTR defaultValue);</title></rect>
<rect width="7.88" height="8.29" x="557.01" y="299.70" class="decompiled"><title>void __cdecl CreatePrimarySurface(void);</title></rect>
<rect width="7.88" height="8.22" x="557.01" y="311" class="decompiled"><title>void __cdecl Misc_InitCinematicRooms(void);</title></rect>
<rect width="7.88" height="8.22" x="557.01" y="322.22" class="decompiled"><title>void __cdecl Effect_NewRoom(int16_t fx_num, int16_t room_num);</title></rect>
<rect width="7.88" height="8.22" x="557.01" y="333.43" class="known"><title>void __cdecl SE_AdvancedDlgUpdate(HWND hwndDlg);</title></rect>
<rect width="7.88" height="8.14" x="557.01" y="344.65" class="decompiled"><title>int32_t __cdecl Item_GetFrames(const ITEM *item, FRAME_INFO *frmptr[], int32_t *rate);</title></rect>
<rect width="7.88" height="8.14" x="557.01" y="355.79" class="decompiled"><title>void __cdecl Music_SetVolume(int32_t volume);</title></rect>
<rect width="7.88" height="8.07" x="557.01" y="366.93" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectGT4_ZBuffered(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="7.91" height="8.03" x="567.89" y="185.54" class="decompiled"><title>void __cdecl Lara_State_Extra_SharkKill(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="7.91" height="8.03" x="578.80" y="185.54" class="known"><title>void __cdecl BladeControl(int16_t item_num);</title></rect>
<rect width="7.91" height="8.03" x="589.71" y="185.54" class="known"><title>bool __cdecl GetRegistryGuidValue(LPCTSTR lpValueName, GUID *value, GUID *defaultValue);</title></rect>
<rect width="7.84" height="8.03" x="600.62" y="185.54" class="decompiled"><title>void __cdecl Lara_Col_Reach(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="7.84" height="8.03" x="611.46" y="185.54" class="known"><title>int32_t __cdecl GetCollisionAnim(ITEM *skidoo, XYZ_32 *moved);</title></rect>
<rect width="7.84" height="8.03" x="622.29" y="185.54" class="decompiled"><title>void __cdecl FlameEmitter_Control(int16_t item_num);</title></rect>
<rect width="7.84" height="8.03" x="633.13" y="185.54" class="decompiled"><title>bool __cdecl WinVidCopyBitmapToBuffer(LPDDS surface, const BYTE *bitmap);</title></rect>
<rect width="7.76" height="8.03" x="643.97" y="185.54" class="decompiled"><title>void __cdecl CutscenePlayer1_Initialise(int16_t item_num);</title></rect>
<rect width="7.76" height="8.03" x="654.73" y="185.54" class="known"><title>void __cdecl FloodFX(ITEM *item);</title></rect>
<rect width="7.69" height="8.03" x="665.49" y="185.54" class="decompiled"><title>void __cdecl HWR_LoadTexturePages(int32_t pages_count, void *pages_buf, RGB_888 *palette);</title></rect>
<rect width="7.61" height="8.03" x="676.18" y="185.54" class="known"><title>void __cdecl DetonatorControl(int16_t item_num);</title></rect>
<rect width="7.54" height="8.03" x="686.79" y="185.54" class="decompiled"><title>const int16_t *__cdecl Output_InsertObjectGT4_Sorted(const int16_t *obj_ptr, int32_t num, SORT_TYPE sort_type);</title></rect>
<rect width="7.54" height="8.03" x="697.32" y="185.54" class="decompiled"><title>int32_t __cdecl Lara_IsNearItem(PHD_3DPOS *pos, int32_t distance);</title></rect>
<rect width="7.54" height="8.03" x="707.86" y="185.54" class="known"><title>void __cdecl ControlSnowSprite(int16_t fx_num);</title></rect>
<rect width="7.54" height="8.03" x="718.39" y="185.54" class="decompiled"><title>void __cdecl Text_AddBackground(TEXTSTRING *string, int16_t x_size, int16_t y_size, int16_t x_off, int16_t y_off, int16_t z_off, int16_t color, uint16_t *gour_ptr, uint16_t flags);</title></rect>
<rect width="7.54" height="8.03" x="728.93" y="185.54" class="unused"><title>sub_444B20</title></rect>
<rect width="7.54" height="8.03" x="739.46" y="185.54" class="decompiled"><title>bool __cdecl WinVidGetDisplayMode(DISPLAY_MODE *disp_mode);</title></rect>
<rect width="7.66" height="7.82" x="567.89" y="196.57" class="decompiled"><title>int32_t __cdecl Box_BadFloor(int32_t x, int32_t y, int32_t z, int32_t box_height, int32_t next_height, int16_t room_num, LOT_INFO *lot);</title></rect>
<rect width="7.66" height="7.82" x="567.89" y="207.39" class="decompiled"><title>void __cdecl Lara_State_Walk(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="7.66" height="7.82" x="567.89" y="218.21" class="decompiled"><title>D3DCOLOR __cdecl BGND_CenterLighting(int32_t x, int32_t y, int32_t width, int32_t height);</title></rect>
<rect width="7.66" height="7.74" x="567.89" y="229.03" class="decompiled"><title>void __cdecl Item_RemoveActive(int16_t item_num);</title></rect>
<rect width="7.66" height="7.74" x="567.89" y="239.77" class="decompiled"><title>void __cdecl Lara_State_TurnRight(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="7.66" height="7.74" x="567.89" y="250.51" class="decompiled"><title>BOOL __cdecl Level_LoadDemo(HANDLE handle);</title></rect>
<rect width="7.66" height="7.74" x="567.89" y="261.25" class="known"><title>INT_PTR __stdcall SE_OptionsDlgProc(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="7.66" height="7.66" x="567.89" y="271.99" class="decompiled"><title>void __cdecl Bird_Initialise(int16_t item_num);</title></rect>
<rect width="7.66" height="7.66" x="567.89" y="282.65" class="decompiled"><title>void __cdecl Inv_SelectMeshes(INVENTORY_ITEM *inv_item);</title></rect>
<rect width="7.66" height="7.66" x="567.89" y="293.32" class="decompiled"><title>void __cdecl Lara_ResetLook(void);</title></rect>
<rect width="7.66" height="7.66" x="567.89" y="303.98" class="decompiled"><title>void __cdecl Lara_State_TurnLeft(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="7.66" height="7.66" x="567.89" y="314.64" class="known"><title>void __cdecl S_OutputPolyList(void);</title></rect>
<rect width="7.66" height="7.59" x="567.89" y="325.31" class="decompiled"><title>bool __cdecl WinVidGoFullScreen(DISPLAY_MODE *disp_mode);</title></rect>
<rect width="7.66" height="7.59" x="567.89" y="335.89" class="known"><title>bool __cdecl IntroFMV(const char *file_name1, const char *file_name2);</title></rect>
<rect width="7.66" height="7.51" x="567.89" y="346.48" class="known"><title>void __cdecl DyingMonk(int16_t item_num);</title></rect>
<rect width="7.66" height="7.51" x="567.89" y="356.99" class="decompiled"><title>bool __cdecl HideDDrawGameWindow(void);</title></rect>
<rect width="7.66" height="7.51" x="567.89" y="367.49" class="known"><title>int32_t __cdecl CreateTexturePalette(const RGB_888 *pal);</title></rect>
<rect width="7.92" height="7.19" x="578.55" y="196.57" class="decompiled"><title>void __cdecl Lara_SwimTurn(ITEM *item);</title></rect>
<rect width="7.92" height="7.19" x="589.47" y="196.57" class="decompiled"><title>void __cdecl Sound_EndScene(void);</title></rect>
<rect width="7.92" height="7.19" x="600.39" y="196.57" class="known"><title>void __cdecl HookControl(int16_t item_num);</title></rect>
<rect width="7.84" height="7.19" x="611.31" y="196.57" class="decompiled"><title>void __cdecl Output_DrawPickup(int32_t sx, int32_t sy, int32_t scale, int16_t sprite_idx, int16_t shade);</title></rect>
<rect width="7.84" height="7.19" x="622.15" y="196.57" class="decompiled"><title>void __cdecl Lara_State_Tread(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="7.84" height="7.19" x="632.98" y="196.57" class="decompiled"><title>bool __cdecl Creature_CanTargetEnemy(const ITEM *item, const AI_INFO *info);</title></rect>
<rect width="7.76" height="7.19" x="643.82" y="196.57" class="decompiled"><title>void __cdecl Lara_State_Back(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="7.76" height="7.19" x="654.58" y="196.57" class="decompiled"><title>bool __cdecl Music_PlaySynced(int32_t track_id);</title></rect>
<rect width="7.67" height="7.19" x="665.33" y="196.57" class="known"><title>void __cdecl Object_DrawSpriteItem(ITEM *item);</title></rect>
<rect width="7.67" height="7.19" x="676.01" y="196.57" class="decompiled"><title>void __cdecl Lara_Col_Fallback(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="7.59" height="7.19" x="686.68" y="196.57" class="known"><title>void __cdecl ControlBlood1(int16_t fx_num);</title></rect>
<rect width="7.59" height="7.19" x="697.28" y="196.57" class="decompiled"><title>void __cdecl Requester_Init(REQUEST_INFO *req);</title></rect>
<rect width="7.59" height="7.19" x="707.87" y="196.57" class="decompiled"><title>void __cdecl HWR_EnableZBuffer(bool z_write_enable, bool z_enable);</title></rect>
<rect width="7.51" height="7.19" x="718.46" y="196.57" class="decompiled"><title>int32_t __cdecl Inv_AnimateInventoryItem(INVENTORY_ITEM *inv_item);</title></rect>
<rect width="7.51" height="7.19" x="728.98" y="196.57" class="decompiled"><title>void __cdecl Inv_RingIsNotOpen(RING_INFO *ring);</title></rect>
<rect width="7.51" height="7.19" x="739.49" y="196.57" class="decompiled"><title>int32_t __cdecl AddAssaultTime(uint32_t time);</title></rect>
<rect width="7.43" height="7.27" x="578.55" y="206.76" class="decompiled"><title>void __cdecl Lara_Col_Stop(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="7.43" height="7.27" x="578.55" y="217.03" class="decompiled"><title>void __cdecl Lara_Col_Roll(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="7.43" height="7.27" x="578.55" y="227.30" class="known"><title>void __cdecl SkidmanCollision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="7.43" height="7.11" x="578.55" y="237.57" class="decompiled"><title>int32_t __cdecl Room_FindByPos(int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="7.43" height="7.11" x="578.55" y="247.68" class="known"><title>void __cdecl ControlExplosion1(int16_t fx_num);</title></rect>
<rect width="7.43" height="7.11" x="578.55" y="257.79" class="decompiled"><title>int32_t __cdecl Lara_DeflectEdge(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="7.43" height="7.11" x="578.55" y="267.90" class="known"><title>void __cdecl InitialiseSkidman(int16_t item_num);</title></rect>
<rect width="7.43" height="7.11" x="578.55" y="278.01" class="known"><title>bool __cdecl WinInputInit(void);</title></rect>
<rect width="7.43" height="7.11" x="578.55" y="288.12" class="decompiled"><title>void __cdecl Random_Seed(void);</title></rect>
<rect width="7.43" height="7.11" x="578.55" y="298.23" class="decompiled"><title>void __cdecl Option_DoInventory(INVENTORY_ITEM *item);</title></rect>
<rect width="7.43" height="7.03" x="578.55" y="308.34" class="known"><title>void __cdecl BellControl(int16_t item_num);</title></rect>
<rect width="7.43" height="7.03" x="578.55" y="318.37" class="decompiled"><title>void __cdecl Option_Controls_FlashConflicts(void);</title></rect>
<rect width="7.43" height="7.03" x="578.55" y="328.40" class="known"><title>void __cdecl S_SyncPictureBufferPalette(void);</title></rect>
<rect width="7.43" height="6.95" x="578.55" y="338.43" class="decompiled"><title>void __cdecl S_SaveSettings(void);</title></rect>
<rect width="7.43" height="6.87" x="578.55" y="348.38" class="decompiled"><title>BOUNDS_16 *__cdecl Item_GetBoundsAccurate(const ITEM *item);</title></rect>
<rect width="7.43" height="6.87" x="578.55" y="358.26" class="decompiled"><title>int32_t __cdecl Item_GlobalReplace(GAME_OBJECT_ID src_object_id, GAME_OBJECT_ID dst_object_id);</title></rect>
<rect width="7.43" height="6.87" x="578.55" y="368.13" class="decompiled"><title>void __cdecl Lara_State_StepRight(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="7.23" height="7.06" x="588.98" y="206.76" class="decompiled"><title>void __cdecl Lara_State_StepLeft(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="7.23" height="7.06" x="599.21" y="206.76" class="decompiled"><title>void __cdecl Gun_Pistols_Draw(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="7.23" height="7.06" x="609.45" y="206.76" class="known"><title>void __cdecl InitialiseDyingMonk(int16_t item_num);</title></rect>
<rect width="7.23" height="7.06" x="619.68" y="206.76" class="known"><title>void __cdecl SkidooExplode(ITEM *skidoo);</title></rect>
<rect width="7.23" height="7.06" x="629.91" y="206.76" class="decompiled"><title>int32_t __cdecl WinGameStart(void);</title></rect>
<rect width="7.15" height="7.06" x="640.15" y="206.76" class="decompiled"><title>void __cdecl Gun_Rifle_FireM16(bool running);</title></rect>
<rect width="7.07" height="7.06" x="650.30" y="206.76" class="decompiled"><title>void __cdecl Matrix_TranslateAbs(int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="7.07" height="7.06" x="660.37" y="206.76" class="known"><title>int16_t __cdecl Diver_Harpoon(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE y_rot, int16_t room_num);</title></rect>
<rect width="7.07" height="7.06" x="670.44" y="206.76" class="decompiled"><title>void __cdecl Overlay_DisplayModeInfo(char* string);</title></rect>
<rect width="6.99" height="7.06" x="680.51" y="206.76" class="decompiled"><title>void __cdecl Lara_TakeHit(ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="6.99" height="7.06" x="690.49" y="206.76" class="decompiled"><title>void __cdecl Lara_Col_FastDive(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="6.99" height="7.06" x="700.48" y="206.76" class="decompiled"><title>BOOL __cdecl Level_LoadCinematic(HANDLE handle);</title></rect>
<rect width="6.90" height="7.06" x="710.47" y="206.76" class="decompiled"><title>void __cdecl Math_GetVectorAngles(int32_t x, int32_t y, int32_t z, int16_t *dest);</title></rect>
<rect width="6.90" height="7.06" x="720.37" y="206.76" class="decompiled"><title>void __cdecl Creature_Collision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="6.90" height="7.06" x="730.27" y="206.76" class="known"><title>void __cdecl LaraBubbles(ITEM *item);</title></rect>
<rect width="6.82" height="7.06" x="740.18" y="206.76" class="decompiled"><title>void __cdecl Door_Collision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="7.29" height="6.60" x="588.98" y="216.82" class="decompiled"><title>int32_t __cdecl Inv_RequestItem(GAME_OBJECT_ID object_id);</title></rect>
<rect width="7.29" height="6.60" x="599.26" y="216.82" class="decompiled"><title>bool __cdecl Music_Init(void);</title></rect>
<rect width="7.20" height="6.60" x="609.55" y="216.82" class="known"><title>int16_t __cdecl Knife(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE yrot, int16_t room_num);</title></rect>
<rect width="7.20" height="6.60" x="619.75" y="216.82" class="known"><title>void __cdecl DrawHair(void);</title></rect>
<rect width="7.20" height="6.60" x="629.95" y="216.82" class="decompiled"><title>void __cdecl Lara_State_Glide(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="7.20" height="6.60" x="640.14" y="216.82" class="known"><title>bool __cdecl GetRegistryBoolValue(LPCTSTR lpValueName, bool *pValue, bool defaultValue);</title></rect>
<rect width="7.11" height="6.60" x="650.34" y="216.82" class="decompiled"><title>int16_t __cdecl Lara_FloorFront(ITEM *item, PHD_ANGLE ang, int32_t dist);</title></rect>
<rect width="7.11" height="6.60" x="660.46" y="216.82" class="decompiled"><title>void __cdecl Lara_State_ClimbStance(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="7.11" height="6.60" x="670.57" y="216.82" class="known"><title>void __cdecl InitialiseWindow(int16_t item_num);</title></rect>
<rect width="7.03" height="6.60" x="680.68" y="216.82" class="known"><title>void __cdecl InitialiseHair(void);</title></rect>
<rect width="7.03" height="6.60" x="690.71" y="216.82" class="decompiled"><title>void __cdecl Lara_Col_Jumper(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="6.94" height="6.60" x="700.73" y="216.82" class="decompiled"><title>void __cdecl GameWindowCalculateSizeFromClient(int32_t *width, int32_t *height);</title></rect>
<rect width="6.85" height="6.60" x="710.67" y="216.82" class="decompiled"><title>void __cdecl Matrix_LookAt(int32_t xsrc, int32_t ysrc, int32_t zsrc, int32_t xtar, int32_t ytar, int32_t ztar, int16_t roll);</title></rect>
<rect width="6.85" height="6.60" x="720.53" y="216.82" class="known"><title>void __cdecl Richochet(GAME_VECTOR *pos);</title></rect>
<rect width="6.85" height="6.60" x="730.38" y="216.82" class="decompiled"><title>void __cdecl Lara_LookLeftRight(void);</title></rect>
<rect width="6.77" height="6.60" x="740.23" y="216.82" class="known"><title>void __cdecl ControlSplash1(int16_t fx_num);</title></rect>
<rect width="6.68" height="6.69" x="588.98" y="226.42" class="decompiled"><title>void __thiscall WinVidGetColorBitMasks(COLOR_BIT_MASKS *bm, LPDDPIXELFORMAT pixel_format);</title></rect>
<rect width="6.68" height="6.69" x="588.98" y="236.11" class="decompiled"><title>BOOL __cdecl Level_LoadPalettes(HANDLE handle);</title></rect>
<rect width="6.68" height="6.69" x="588.98" y="245.80" class="known"><title>bool __cdecl GetRegistryBinaryValue(LPCTSTR lpValueName, LPBYTE value, DWORD valueSize, LPBYTE defaultValue);</title></rect>
<rect width="6.68" height="6.60" x="588.98" y="255.48" class="decompiled"><title>void __cdecl Gun_Rifle_Ready(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="6.68" height="6.60" x="588.98" y="265.09" class="decompiled"><title>void __cdecl Lara_State_SurfSwim(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="6.68" height="6.60" x="588.98" y="274.69" class="decompiled"><title>void __cdecl CreatePictureBuffer(void);</title></rect>
<rect width="6.68" height="6.52" x="588.98" y="284.29" class="decompiled"><title>int32_t __cdecl Box_UpdateLOT(LOT_INFO *lot, int32_t expansion);</title></rect>
<rect width="6.68" height="6.52" x="588.98" y="293.81" class="decompiled"><title>void __cdecl Item_RemoveDrawn(int16_t item_num);</title></rect>
<rect width="6.68" height="6.52" x="588.98" y="303.32" class="decompiled"><title>void __cdecl Music_Play(int16_t track_id, bool is_looped);</title></rect>
<rect width="6.68" height="6.52" x="588.98" y="312.84" class="known"><title>BOOL __cdecl UT_CenterWindow(HWND hWnd);</title></rect>
<rect width="6.68" height="6.43" x="588.98" y="322.36" class="known"><title>void __cdecl UT_MemBlt(BYTE *dstBuf, DWORD dstX, DWORD dstY, DWORD width, DWORD height, DWORD dstPitch, BYTE *srcBuf, DWORD srcX, DWORD srcY, DWORD srcPitch);</title></rect>
<rect width="6.68" height="6.26" x="588.98" y="331.79" class="decompiled"><title>int32_t __cdecl Output_VisibleZClip(const PHD_VBUF *vtx0, const PHD_VBUF *vtx1, const PHD_VBUF *vtx2);</title></rect>
<rect width="6.68" height="6.26" x="588.98" y="341.05" class="decompiled"><title>void __cdecl Overlay_AddDisplayPickup(GAME_OBJECT_ID object_id);</title></rect>
<rect width="6.68" height="6.26" x="588.98" y="350.31" class="decompiled"><title>int16_t __cdecl Effect_Create(int16_t room_num);</title></rect>
<rect width="6.68" height="6.26" x="588.98" y="359.57" class="known"><title>void *__cdecl game_malloc(size_t alloc_size, GAME_BUFFER buf_index);</title></rect>
<rect width="6.68" height="6.17" x="588.98" y="368.83" class="decompiled"><title>void __cdecl Output_SetFarZ(int32_t far_z);</title></rect>
<rect width="6.63" height="6.22" x="598.66" y="226.42" class="decompiled"><title>void __cdecl Lara_State_Swim(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="6.63" height="6.22" x="608.29" y="226.42" class="known"><title>void __cdecl DrawUnclippedItem(ITEM *item);</title></rect>
<rect width="6.63" height="6.22" x="617.93" y="226.42" class="known"><title>bool __cdecl PlayFMV(const char *file_name);</title></rect>
<rect width="6.54" height="6.22" x="627.56" y="226.42" class="decompiled"><title>void __cdecl Direct3DRelease(void);</title></rect>
<rect width="6.54" height="6.22" x="637.10" y="226.42" class="decompiled"><title>void __cdecl GameWindowCalculateSizeFromClientByZero(int32_t *width, int32_t *height);</title></rect>
<rect width="6.54" height="6.22" x="646.65" y="226.42" class="decompiled"><title>bool __cdecl WinVidRegisterGameWindowClass(void);</title></rect>
<rect width="6.54" height="6.22" x="656.19" y="226.42" class="known"><title>int32_t __cdecl CreateTexturePage(int32_t width, int32_t height, bool alpha);</title></rect>
<rect width="6.45" height="6.22" x="665.73" y="226.42" class="decompiled"><title>void __cdecl Lara_Col_SwanDive(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="6.36" height="6.22" x="675.18" y="226.42" class="decompiled"><title>void __cdecl Sound_UpdateEffects(void);</title></rect>
<rect width="6.36" height="6.22" x="684.55" y="226.42" class="known"><title>void __cdecl ControlClockChimes(int16_t item_num);</title></rect>
<rect width="6.36" height="6.22" x="693.91" y="226.42" class="decompiled"><title>void __cdecl Lara_Col_Death(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="6.36" height="6.22" x="703.27" y="226.42" class="known"><title>void __cdecl InitialiseObjects(void);</title></rect>
<rect width="6.36" height="6.22" x="712.64" y="226.42" class="unused"><title>sub_4470F0</title></rect>
<rect width="6.36" height="6.22" x="722" y="226.42" class="unused"><title>sub_447AC0</title></rect>
<rect width="6.36" height="6.22" x="731.36" y="226.42" class="known"><title>void __cdecl SE_ControlsDlgUpdate(HWND hwndDlg);</title></rect>
<rect width="6.27" height="6.22" x="740.73" y="226.42" class="decompiled"><title>void __cdecl Object_Collision_Trap(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="6.36" height="6.14" x="598.66" y="235.64" class="known"><title>void __cdecl ControlAlarmSound(int16_t item_num);</title></rect>
<rect width="6.36" height="6.14" x="598.66" y="244.77" class="decompiled"><title>int32_t __cdecl Lara_HitCeiling(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="6.36" height="6.14" x="598.66" y="253.91" class="decompiled"><title>void __cdecl UpdateGameResolution(void);</title></rect>
<rect width="6.36" height="6.05" x="598.66" y="263.05" class="decompiled"><title>int32_t __cdecl GF_DoLevelSequence(int32_t level, GAMEFLOW_LEVEL_TYPE type);</title></rect>
<rect width="6.36" height="6.05" x="598.66" y="272.09" class="decompiled"><title>void __cdecl Lara_LookUpDown(void);</title></rect>
<rect width="6.36" height="6.05" x="598.66" y="281.14" class="known"><title>int16_t __cdecl GunShot(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE yrot, int16_t room_num);</title></rect>
<rect width="6.36" height="5.87" x="598.66" y="290.19" class="known"><title>void __cdecl CreateBubble(PHD_3DPOS *pos, int16_t room_num);</title></rect>
<rect width="6.36" height="5.87" x="598.66" y="299.06" class="decompiled"><title>int32_t __cdecl GameInit(bool skip_cd_init);</title></rect>
<rect width="6.36" height="5.87" x="598.66" y="307.93" class="known"><title>void __thiscall SE_DrawBitmap(BITMAP_RESOURCE *bmpRsrc, HDC hdc, int32_t x, int32_t y);</title></rect>
<rect width="6.36" height="5.78" x="598.66" y="316.80" class="known"><title>void __cdecl swap_meshes_with_meshswap1(ITEM *item);</title></rect>
<rect width="6.36" height="5.78" x="598.66" y="325.58" class="known"><title>void __cdecl swap_meshes_with_meshswap2(ITEM *item);</title></rect>
<rect width="6.36" height="5.78" x="598.66" y="334.36" class="decompiled"><title>void __cdecl Inv_Ring_MotionInit(RING_INFO *ring, int16_t frames, int16_t status, int16_t status_target);</title></rect>
<rect width="6.36" height="5.78" x="598.66" y="343.14" class="decompiled"><title>void __cdecl Inv_Ring_MotionItemDeselect(RING_INFO *ring, INVENTORY_ITEM *inv_item);</title></rect>
<rect width="6.36" height="5.69" x="598.66" y="351.92" class="known"><title>void __cdecl InitialiseStartInfo(void);</title></rect>
<rect width="6.36" height="5.69" x="598.66" y="360.62" class="known"><title>void __cdecl IncreaseScreenSize(void);</title></rect>
<rect width="6.36" height="5.69" x="598.66" y="369.31" class="known"><title>void __cdecl DecreaseScreenSize(void);</title></rect>
<rect width="5.98" height="5.97" x="608.02" y="235.64" class="known"><title>void __cdecl InitialiseGameFlags(void);</title></rect>
<rect width="5.98" height="5.97" x="617" y="235.64" class="decompiled"><title>DWORD __cdecl CalculateCompatibleColor(COLOR_BIT_MASKS *mask, int32_t red, int32_t green, int32_t blue, int32_t alpha);</title></rect>
<rect width="5.98" height="5.97" x="625.97" y="235.64" class="decompiled"><title>int32_t __cdecl Music_GetFrames(void);</title></rect>
<rect width="5.98" height="5.97" x="634.95" y="235.64" class="known"><title>bool __cdecl SE_RegisterSetupWindowClass(void);</title></rect>
<rect width="5.98" height="5.97" x="643.93" y="235.64" class="decompiled"><title>void __fastcall Output_FlatA(int32_t y0, int32_t y1, uint8_t color_idx); // actually, __watcall, which is esoteric and rarely supported</title></rect>
<rect width="5.89" height="5.97" x="652.91" y="235.64" class="decompiled"><title>void __cdecl Inv_Ring_GetView(RING_INFO *ring, PHD_3DPOS *viewer);</title></rect>
<rect width="5.89" height="5.97" x="661.79" y="235.64" class="decompiled"><title>void __cdecl Lara_State_SurfLeft(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="5.89" height="5.97" x="670.68" y="235.64" class="decompiled"><title>void __cdecl Lara_State_SurfRight(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="5.89" height="5.97" x="679.56" y="235.64" class="decompiled"><title>BOOL __cdecl Level_LoadCameras(HANDLE handle);</title></rect>
<rect width="5.89" height="5.97" x="688.45" y="235.64" class="decompiled"><title>BOOL __cdecl Level_LoadSoundEffects(HANDLE handle);</title></rect>
<rect width="5.89" height="5.97" x="697.33" y="235.64" class="known"><title>void __cdecl UT_InitAccurateTimer(void);</title></rect>
<rect width="5.79" height="5.97" x="706.22" y="235.64" class="decompiled"><title>void __cdecl Item_Translate(ITEM *item, int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="5.79" height="5.97" x="715.01" y="235.64" class="decompiled"><title>void __cdecl BGND_DrawInGameBlack(void);</title></rect>
<rect width="5.79" height="5.97" x="723.81" y="235.64" class="unused"><title>sub_444AB0</title></rect>
<rect width="5.70" height="5.97" x="732.60" y="235.64" class="decompiled"><title>void __cdecl Lara_State_SurfBack(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="5.70" height="5.97" x="741.30" y="235.64" class="decompiled"><title>void __cdecl Sound_StopEffect(int32_t sample_id);</title></rect>
<rect width="5.61" height="6.07" x="608.02" y="244.61" class="known"><title>bool __cdecl GetRegistryDwordValue(LPCTSTR lpValueName, DWORD *pValue, DWORD defaultValue);</title></rect>
<rect width="5.61" height="5.97" x="608.02" y="253.67" class="decompiled"><title>void __cdecl Item_UpdateRoom(ITEM *item, int32_t height);</title></rect>
<rect width="5.61" height="5.97" x="608.02" y="262.64" class="known"><title>void __cdecl ControlBirdTweeter(int16_t item_num);</title></rect>
<rect width="5.61" height="5.97" x="608.02" y="271.61" class="decompiled"><title>void __cdecl Inv_Ring_MotionItemSelect(RING_INFO *ring, INVENTORY_ITEM *inv_item);</title></rect>
<rect width="5.61" height="5.97" x="608.02" y="280.58" class="decompiled"><title>void __cdecl Lara_Col_ClimbLeft(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="5.61" height="5.97" x="608.02" y="289.55" class="known"><title>void __cdecl BaddieBiteEffect(ITEM *item, BITE *bite);</title></rect>
<rect width="5.61" height="5.97" x="608.02" y="298.52" class="known"><title>LRESULT __stdcall SE_NewPropSheetWndProc(HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="5.61" height="5.87" x="608.02" y="307.49" class="decompiled"><title>int16_t __cdecl Creature_Effect(ITEM *item, BITE *bite, int16_t (*__cdecl spawn)(int32_t x, int32_t y, int32_t z, int16_t speed, int16_t y_rot, int16_t room_num));</title></rect>
<rect width="5.61" height="5.87" x="608.02" y="316.37" class="decompiled"><title>void __cdecl Room_AddFlipItems(ROOM *r);</title></rect>
<rect width="5.61" height="5.87" x="608.02" y="325.24" class="decompiled"><title>void __cdecl Gun_Pistols_Ready(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="5.61" height="5.87" x="608.02" y="334.11" class="known"><title>BOOL __cdecl S_InitialiseSystem(void);</title></rect>
<rect width="5.61" height="5.87" x="608.02" y="342.99" class="known"><title>bool __cdecl GetRegistryFloatValue(LPCTSTR lpValueName, double *value, double defaultValue);</title></rect>
<rect width="5.61" height="5.78" x="608.02" y="351.86" class="decompiled"><title>void __cdecl Lara_Col_UWDeath(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="5.61" height="5.68" x="608.02" y="360.64" class="decompiled"><title>void __cdecl Item_AddActive(int16_t item_num);</title></rect>
<rect width="5.61" height="5.68" x="608.02" y="369.32" class="decompiled"><title>void __cdecl WinInReadKeyboard(LPVOID lpInputData);</title></rect>
<rect width="5.42" height="5.77" x="616.62" y="244.61" class="decompiled"><title>int32_t __cdecl Demo_Control(int32_t level_num);</title></rect>
<rect width="5.42" height="5.77" x="625.05" y="244.61" class="known"><title>int16_t __cdecl DoBloodSplat(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE direction, int16_t room_num);</title></rect>
<rect width="5.42" height="5.77" x="633.47" y="244.61" class="known"><title>void __cdecl DoChimeSound(ITEM *item);</title></rect>
<rect width="5.42" height="5.77" x="641.90" y="244.61" class="decompiled"><title>void __cdecl Lara_Col_Splat(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="5.42" height="5.77" x="650.32" y="244.61" class="decompiled"><title>void __cdecl Lara_Col_ClimbRight(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="5.42" height="5.77" x="658.75" y="244.61" class="decompiled"><title>void __cdecl HWR_ResetZBuffer(void);</title></rect>
<rect width="5.33" height="5.77" x="667.17" y="244.61" class="known"><title>void __cdecl InitialiseXianLord(int16_t item_num);</title></rect>
<rect width="5.33" height="5.77" x="675.50" y="244.61" class="decompiled"><title>void __cdecl Item_ClearKilled(void);</title></rect>
<rect width="5.33" height="5.77" x="683.83" y="244.61" class="decompiled"><title>void __cdecl Lara_State_Hang(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="5.33" height="5.77" x="692.16" y="244.61" class="decompiled"><title>void __cdecl Lara_State_PickupFlare(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="5.33" height="5.77" x="700.49" y="244.61" class="known"><title>DWORD __cdecl Sync(void);</title></rect>
<rect width="5.24" height="5.77" x="708.82" y="244.61" class="decompiled"><title>void __cdecl Lara_State_FastBack(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="5.24" height="5.77" x="717.06" y="244.61" class="known"><title>void __cdecl S_Wait(int32_t timeout, BOOL input_check);</title></rect>
<rect width="5.24" height="5.77" x="725.29" y="244.61" class="known"><title>int32_t __cdecl SE_GraphicsTest(void);</title></rect>
<rect width="5.24" height="5.77" x="733.53" y="244.61" class="known"><title>int32_t __cdecl SE_SoundTest(void);</title></rect>
<rect width="5.24" height="5.77" x="741.76" y="244.61" class="known"><title>void __thiscall SE_ChangeBitmapPalette(BITMAP_RESOURCE *bmpRsrc, HWND hWnd);</title></rect>
<rect width="5.39" height="5.51" x="616.62" y="253.38" class="decompiled"><title>void __cdecl Requester_Item_RightAlign(REQUEST_INFO *req, TEXTSTRING *txt);</title></rect>
<rect width="5.39" height="5.41" x="616.62" y="261.89" class="decompiled"><title>void __cdecl Room_GetNewRoom(int32_t x, int32_t y, int32_t z, int16_t room_num);</title></rect>
<rect width="5.39" height="5.41" x="616.62" y="270.30" class="decompiled"><title>void __cdecl Object_Collision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="5.39" height="5.41" x="616.62" y="278.72" class="decompiled"><title>int32_t __cdecl Item_IsTriggerActive(ITEM *item);</title></rect>
<rect width="5.39" height="5.41" x="616.62" y="287.13" class="decompiled"><title>BOOL __cdecl Level_LoadAnimatedTextures(HANDLE handle);</title></rect>
<rect width="5.39" height="5.41" x="616.62" y="295.54" class="decompiled"><title>void __cdecl Shell_Cleanup(void);</title></rect>
<rect width="5.39" height="5.31" x="616.62" y="303.96" class="decompiled"><title>void __cdecl Requester_Item_LeftAlign(REQUEST_INFO *req, TEXTSTRING *txt);</title></rect>
<rect width="5.39" height="5.31" x="616.62" y="312.27" class="decompiled"><title>void __cdecl Lara_State_FastDive(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="5.39" height="5.31" x="616.62" y="320.59" class="known"><title>int32_t __cdecl DoDynamics(int32_t height, int32_t fall_speed, int32_t *y);</title></rect>
<rect width="5.39" height="5.31" x="616.62" y="328.90" class="decompiled"><title>bool __cdecl DDrawCreate(LPGUID lpGUID);</title></rect>
<rect width="5.39" height="5.22" x="616.62" y="337.22" class="decompiled"><title>void __cdecl Lara_State_UWDeath(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="5.39" height="5.22" x="616.62" y="345.43" class="decompiled"><title>void __cdecl LOT_InitialiseArray(void);</title></rect>
<rect width="5.39" height="5.22" x="616.62" y="353.65" class="decompiled"><title>bool __cdecl WinVidGetDisplayModes(void);</title></rect>
<rect width="5.39" height="5.12" x="616.62" y="361.87" class="decompiled"><title>void __cdecl Item_InitialiseArray(int32_t num_items);</title></rect>
<rect width="5.39" height="5.02" x="616.62" y="369.98" class="decompiled"><title>void __cdecl Lara_State_Extra_DinoKill(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="4.97" height="5.43" x="625.01" y="253.38" class="decompiled"><title>int32_t __cdecl Lara_Fallen(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="4.97" height="5.43" x="625.01" y="261.81" class="decompiled"><title>void __cdecl Gun_SmashItem(int16_t item_num, LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="4.97" height="5.43" x="625.01" y="270.24" class="known"><title>void __cdecl S_SetupBelowWater(BOOL underwater);</title></rect>
<rect width="4.97" height="5.43" x="625.01" y="278.68" class="decompiled"><title>void __cdecl Music_Shutdown(void);</title></rect>
<rect width="4.97" height="5.43" x="625.01" y="287.11" class="known"><title>bool __cdecl TIME_Init(void);</title></rect>
<rect width="4.97" height="5.43" x="625.01" y="295.54" class="known"><title>LPCTSTR __cdecl GuidBinaryToString(GUID *guid);</title></rect>
<rect width="4.97" height="5.33" x="625.01" y="303.98" class="decompiled"><title>void __cdecl Creature_Underwater(ITEM *item, int32_t depth);</title></rect>
<rect width="4.97" height="5.33" x="625.01" y="312.30" class="decompiled"><title>const SECTOR *__cdecl Camera_GoodPosition(int32_t x, int32_t y, int32_t z, int16_t room_num);</title></rect>
<rect width="4.97" height="5.33" x="625.01" y="320.63" class="known"><title>void __cdecl InitialiseCult3(int16_t item_num);</title></rect>
<rect width="4.97" height="5.22" x="625.01" y="328.96" class="decompiled"><title>void __cdecl Gun_Pistols_SetArmInfo(LARA_ARM *arm, int32_t frame);</title></rect>
<rect width="4.97" height="5.22" x="625.01" y="337.19" class="decompiled"><title>void __cdecl LOT_DisableBaddieAI(int16_t item_num);</title></rect>
<rect width="4.97" height="5.22" x="625.01" y="345.41" class="known"><title>void __cdecl TrapDoorControl(int16_t item_num);</title></rect>
<rect width="4.97" height="5.12" x="625.01" y="353.64" class="decompiled"><title>void __cdecl Creature_Neck(ITEM *item, int16_t required);</title></rect>
<rect width="4.97" height="5.12" x="625.01" y="361.76" class="decompiled"><title>int16_t __cdecl Room_GetDoor(const SECTOR *sector);</title></rect>
<rect width="4.97" height="5.12" x="625.01" y="369.88" class="decompiled"><title>void __cdecl Gun_Pistols_DrawMeshes(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="4.93" height="5.16" x="632.98" y="253.38" class="known"><title>int32_t __cdecl TestBlockMovable(ITEM *item, int32_t block_height);</title></rect>
<rect width="4.93" height="5.16" x="640.91" y="253.38" class="known"><title>void __cdecl ControlGunShot(int16_t fx_num);</title></rect>
<rect width="4.93" height="5.16" x="648.84" y="253.38" class="known"><title>JOYSTICK_NODE *__cdecl GetJoystick(GUID *lpGuid);</title></rect>
<rect width="4.93" height="5.16" x="656.77" y="253.38" class="known"><title>bool __cdecl OpenGameRegistryKey(LPCTSTR key);</title></rect>
<rect width="4.93" height="5.16" x="664.70" y="253.38" class="known"><title>double __cdecl UT_Microseconds(void);</title></rect>
<rect width="4.83" height="5.16" x="672.63" y="253.38" class="decompiled"><title>void __cdecl Lara_State_Extra_StartAnim(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="4.83" height="5.16" x="680.46" y="253.38" class="decompiled"><title>void __cdecl BGND_Free(void);</title></rect>
<rect width="4.83" height="5.16" x="688.29" y="253.38" class="decompiled"><title>bool __cdecl WinVidClearBuffer(LPDDS surface, LPRECT rect, DWORD fill_color);</title></rect>
<rect width="4.83" height="5.16" x="696.12" y="253.38" class="decompiled"><title>void __cdecl WinVidExitMessage(void);</title></rect>
<rect width="4.73" height="5.16" x="703.94" y="253.38" class="decompiled"><title>void __cdecl Lara_State_Extra_Breath(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="4.73" height="5.16" x="711.67" y="253.38" class="known"><title>void __cdecl WriteSG(void *pointer, int32_t size);</title></rect>
<rect width="4.73" height="5.16" x="719.40" y="253.38" class="known"><title>void __cdecl GetSavedGamesList(REQUEST_INFO *req);</title></rect>
<rect width="4.63" height="5.16" x="727.12" y="253.38" class="decompiled"><title>int32_t __cdecl Boat_DoDynamics(int32_t height, int32_t fall_speed, int32_t *y);</title></rect>
<rect width="4.63" height="5.16" x="734.75" y="253.38" class="decompiled"><title>void __cdecl Lara_State_FastTurn(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="4.63" height="5.16" x="742.37" y="253.38" class="known"><title>void __cdecl Flare_SetArm(int32_t frame);</title></rect>
<rect width="4.84" height="4.94" x="632.98" y="261.54" class="known"><title>void __cdecl DartEffectControl(int16_t fx_num);</title></rect>
<rect width="4.84" height="4.94" x="632.98" y="269.48" class="known"><title>void __cdecl SE_OptionsStrCat(LPTSTR *dstString, bool isEnabled, bool *isNext, LPCTSTR srcString);</title></rect>
<rect width="4.84" height="4.83" x="632.98" y="277.42" class="decompiled"><title>void __cdecl Lara_State_BackJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="4.84" height="4.83" x="632.98" y="285.26" class="decompiled"><title>DISPLAY_MODE *__thiscall InsertDisplayModeInListTail(DISPLAY_MODE_LIST *modeList);</title></rect>
<rect width="4.84" height="4.83" x="632.98" y="293.09" class="decompiled"><title>void __cdecl HWR_EnableColorKey(bool state);</title></rect>
<rect width="4.84" height="4.83" x="632.98" y="300.92" class="decompiled"><title>void __cdecl HWR_FreeTexturePages(void);</title></rect>
<rect width="4.84" height="4.83" x="632.98" y="308.76" class="known"><title>LONG __cdecl SetRegistryStringValue(LPCTSTR lpValueName, LPCTSTR value, int32_t length);</title></rect>
<rect width="4.84" height="4.73" x="632.98" y="316.59" class="decompiled"><title>void __cdecl Creature_Head(ITEM *item, int16_t required);</title></rect>
<rect width="4.84" height="4.73" x="632.98" y="324.32" class="decompiled"><title>void __cdecl LOT_ClearLOT(LOT_INFO *lot);</title></rect>
<rect width="4.84" height="4.73" x="632.98" y="332.05" class="decompiled"><title>void __cdecl Lara_CatchFire(void);</title></rect>
<rect width="4.84" height="4.73" x="632.98" y="339.78" class="known"><title>BOOL __cdecl ReadFileSync(HANDLE handle, LPVOID lpBuffer, DWORD nBytesToRead, LPDWORD lpnBytesRead, LPOVERLAPPED lpOverlapped);</title></rect>
<rect width="4.84" height="4.62" x="632.98" y="347.51" class="known"><title>void __cdecl AddDynamicLight(int32_t x, int32_t y, int32_t z, int32_t intensity, int32_t falloff);</title></rect>
<rect width="4.84" height="4.62" x="632.98" y="355.13" class="decompiled"><title>int32_t __cdecl CalculateWindowWidth(int32_t width, int32_t height);</title></rect>
<rect width="4.84" height="4.62" x="632.98" y="362.75" class="decompiled"><title>DISPLAY_ADAPTER_NODE *__cdecl WinVidGetDisplayAdapter(GUID *lpGuid);</title></rect>
<rect width="4.84" height="4.62" x="632.98" y="370.38" class="decompiled"><title>DISPLAY_MODE *__thiscall InsertDisplayModeInListHead(DISPLAY_MODE_LIST *modeList);</title></rect>
<rect width="4.96" height="4.50" x="640.82" y="261.54" class="decompiled"><title>const SOUND_ADAPTER_NODE *__cdecl S_Audio_Sample_GetAdapter(GUID *guid);</title></rect>
<rect width="4.96" height="4.50" x="648.79" y="261.54" class="known"><title>void __cdecl WinStopFMV(bool is_playback);</title></rect>
<rect width="4.96" height="4.50" x="656.75" y="261.54" class="decompiled"><title>int32_t __fastcall Math_Atan(int32_t x, int32_t y);</title></rect>
<rect width="4.85" height="4.50" x="664.71" y="261.54" class="decompiled"><title>int32_t __cdecl Creature_Activate(int16_t item_num);</title></rect>
<rect width="4.85" height="4.50" x="672.57" y="261.54" class="decompiled"><title>void __cdecl Matrix_TranslateRel_ID(int32_t x, int32_t y, int32_t z, int32_t x2, int32_t y2, int32_t z2);</title></rect>
<rect width="4.85" height="4.50" x="680.42" y="261.54" class="decompiled"><title>void __cdecl Lara_State_Extra_YetiKill(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="4.74" height="4.50" x="688.28" y="261.54" class="known"><title>void __cdecl InitialiseKillerStatue(int16_t item_num);</title></rect>
<rect width="4.74" height="4.50" x="696.02" y="261.54" class="decompiled"><title>HRESULT __cdecl DDrawSurfaceRestoreLost(LPDDS surface1, LPDDS surface2, bool blank);</title></rect>
<rect width="4.74" height="4.50" x="703.76" y="261.54" class="decompiled"><title>DWORD __cdecl GetRenderBitDepth(DWORD dwRGBBitCount);</title></rect>
<rect width="4.74" height="4.50" x="711.51" y="261.54" class="known"><title>void __cdecl S_InsertBackPolygon(int32_t x0, int32_t y0, int32_t x1, int32_t y1);</title></rect>
<rect width="4.74" height="4.50" x="719.25" y="261.54" class="decompiled"><title>int32_t __cdecl S_Audio_Sample_OutPlay(int32_t sample_id, uint16_t volume, int32_t pitch, int32_t pan);</title></rect>
<rect width="4.74" height="4.50" x="726.99" y="261.54" class="decompiled"><title>int32_t __cdecl S_Audio_Sample_OutPlayLooped(int32_t track_id, uint16_t volume, int32_t pitch, int32_t pan);</title></rect>
<rect width="4.63" height="4.50" x="734.73" y="261.54" class="decompiled"><title>void __cdecl Overlay_DrawGameInfo(bool pickup_state);</title></rect>
<rect width="4.63" height="4.50" x="742.37" y="261.54" class="decompiled"><title>bool __thiscall CompareVideoModes(const DISPLAY_MODE *mode1, const DISPLAY_MODE *mode2);</title></rect>
<rect width="4.64" height="4.50" x="640.82" y="269.04" class="decompiled"><title>bool __cdecl S_Audio_Sample_IsTrackPlaying(int32_t track_id);</title></rect>
<rect width="4.64" height="4.39" x="640.82" y="276.54" class="known"><title>void __cdecl FallingBlockCeiling(ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="4.64" height="4.39" x="640.82" y="283.93" class="decompiled"><title>HRESULT __cdecl DDrawSurfaceCreate(LPDDSDESC dsp, LPDDS *surface);</title></rect>
<rect width="4.64" height="4.39" x="640.82" y="291.31" class="decompiled"><title>void __cdecl BitMaskGetNumberOfBits(uint32_t bit_mask, uint32_t *bit_depth, uint32_t *bit_offset);</title></rect>
<rect width="4.64" height="4.39" x="640.82" y="298.70" class="known"><title>void __cdecl GetValidLevelsList(REQUEST_INFO *req);</title></rect>
<rect width="4.64" height="4.28" x="640.82" y="306.09" class="known"><title>void __cdecl draw_right_gun(ITEM *item);</title></rect>
<rect width="4.64" height="4.28" x="640.82" y="313.37" class="known"><title>void __cdecl draw_left_gun(ITEM *item);</title></rect>
<rect width="4.64" height="4.28" x="640.82" y="320.64" class="known"><title>void __cdecl InitialiseCult1(int16_t item_num);</title></rect>
<rect width="4.64" height="4.28" x="640.82" y="327.92" class="decompiled"><title>void __cdecl WinVidShowGameWindow(int32_t nCmdShow);</title></rect>
<rect width="4.64" height="4.28" x="640.82" y="335.20" class="known"><title>void __cdecl S_FadeToBlack(void);</title></rect>
<rect width="4.64" height="4.17" x="640.82" y="342.48" class="known"><title>void __cdecl ShutThatDoor(DOORPOS_DATA *d);</title></rect>
<rect width="4.64" height="4.17" x="640.82" y="349.65" class="known"><title>int32_t __cdecl UT_ErrorBox(UINT uID, HWND hWnd);</title></rect>
<rect width="4.64" height="4.06" x="640.82" y="356.82" class="decompiled"><title>void __cdecl Matrix_TranslateRel_I(int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="4.64" height="4.06" x="640.82" y="363.88" class="decompiled"><title>void __cdecl Matrix_RotYXZ_I(int16_t y, int16_t x, int16_t z);</title></rect>
<rect width="4.64" height="4.06" x="640.82" y="370.94" class="decompiled"><title>void __cdecl WinVidSetMinWindowSize(int32_t width, int32_t height);</title></rect>
<rect width="4.44" height="4.25" x="648.46" y="269.04" class="decompiled"><title>void __cdecl WinVidSetMaxWindowSize(int32_t width, int32_t height);</title></rect>
<rect width="4.33" height="4.25" x="655.90" y="269.04" class="known"><title>void __cdecl lara_normal_effect(ITEM *item);</title></rect>
<rect width="4.33" height="4.25" x="663.23" y="269.04" class="decompiled"><title>void __cdecl Inv_Ring_Light(RING_INFO *ring);</title></rect>
<rect width="4.33" height="4.25" x="670.56" y="269.04" class="decompiled"><title>void __cdecl Lara_State_FastFall(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="4.33" height="4.25" x="677.88" y="269.04" class="known"><title>void __cdecl InitialiseSkidoo(int16_t item_num);</title></rect>
<rect width="4.33" height="4.25" x="685.21" y="269.04" class="decompiled"><title>bool __cdecl WinVidInit(void);</title></rect>
<rect width="4.33" height="4.25" x="692.53" y="269.04" class="decompiled"><title>void __cdecl Option_Controls_DefaultConflict(void);</title></rect>
<rect width="4.33" height="4.25" x="699.86" y="269.04" class="known"><title>void __cdecl UpdateTicks(void);</title></rect>
<rect width="4.21" height="4.25" x="707.19" y="269.04" class="known"><title>void __cdecl ControlDingDong(int16_t item_num);</title></rect>
<rect width="4.21" height="4.25" x="714.40" y="269.04" class="known"><title>void __cdecl TrapDoorCeiling(ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="4.10" height="4.25" x="721.61" y="269.04" class="known"><title>void __cdecl Flare_Ready(void);</title></rect>
<rect width="4.10" height="4.25" x="728.71" y="269.04" class="known"><title>void __cdecl FallingBlockFloor(ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="4.10" height="4.25" x="735.81" y="269.04" class="decompiled"><title>void __cdecl Enumerate3DDevices(DISPLAY_ADAPTER *adapter);</title></rect>
<rect width="4.10" height="4.25" x="742.90" y="269.04" class="decompiled"><title>DWORD __cdecl EncodePutPCX(BYTE value, BYTE num, BYTE *buffer);</title></rect>
<rect width="4.42" height="3.93" x="648.46" y="276.30" class="known"><title>int32_t __stdcall SE_PropSheetCallback(HWND hwndDlg, UINT uMsg, LPARAM lParam);</title></rect>
<rect width="4.42" height="3.93" x="655.89" y="276.30" class="known"><title>HWR_TEXTURE_HANDLE __cdecl GetTexturePageHandle(int32_t page_idx);</title></rect>
<rect width="4.30" height="3.93" x="663.31" y="276.30" class="decompiled"><title>void __cdecl Matrix_RotYXZsuperpack_I(const int16_t **pprot1, const int16_t **pprot2, int32_t skip);</title></rect>
<rect width="4.30" height="3.93" x="670.61" y="276.30" class="known"><title>int32_t __cdecl KeyTrigger(int16_t item_num);</title></rect>
<rect width="4.30" height="3.93" x="677.92" y="276.30" class="decompiled"><title>HRESULT __cdecl WinVidBufferLock(LPDDS surface, LPDDSDESC desc, DWORD flags);</title></rect>
<rect width="4.30" height="3.93" x="685.22" y="276.30" class="known"><title>int32_t __cdecl SE_SoundTestExecute(void);</title></rect>
<rect width="4.18" height="3.93" x="692.53" y="276.30" class="decompiled"><title>void __cdecl Output_DrawPolyGTMap(const int16_t *obj_ptr);</title></rect>
<rect width="4.18" height="3.93" x="699.71" y="276.30" class="decompiled"><title>void __cdecl Output_DrawPolyWGTMap(const int16_t *obj_ptr);</title></rect>
<rect width="4.18" height="3.93" x="706.89" y="276.30" class="decompiled"><title>void __cdecl Boat_Initialise(int16_t item_num);</title></rect>
<rect width="4.18" height="3.93" x="714.08" y="276.30" class="known"><title>void __cdecl ControlCutShotgun(int16_t item_num);</title></rect>
<rect width="4.18" height="3.93" x="721.26" y="276.30" class="known"><title>void __cdecl InitialiseBlade(int16_t item_num);</title></rect>
<rect width="4.18" height="3.93" x="728.45" y="276.30" class="known"><title>void __cdecl InitialiseRollingBall(int16_t item_num);</title></rect>
<rect width="4.18" height="3.93" x="735.63" y="276.30" class="decompiled"><title>int32_t __cdecl RenderErrorBox(int32_t error_code);</title></rect>
<rect width="4.18" height="3.93" x="742.82" y="276.30" class="decompiled"><title>void __cdecl Shell_ExitSystem(const char *message);</title></rect>
<rect width="4.19" height="3.93" x="648.46" y="283.23" class="decompiled"><title>void __cdecl S_Audio_Sample_OutCloseAllTracks(void);</title></rect>
<rect width="4.19" height="3.81" x="648.46" y="290.15" class="decompiled"><title>int32_t __cdecl Gun_CheckForHoldingState(int32_t state);</title></rect>
<rect width="4.19" height="3.81" x="648.46" y="296.96" class="decompiled"><title>GAME_OBJECT_ID Gun_GetWeaponAnim(const LARA_GUN_TYPE gun_type);</title></rect>
<rect width="4.19" height="3.81" x="648.46" y="303.78" class="known"><title>void __cdecl DrawBridgeCeiling(ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="4.19" height="3.81" x="648.46" y="310.59" class="known"><title>int32_t __cdecl GetOffset(ITEM *item, int32_t x, int32_t z);</title></rect>
<rect width="4.19" height="3.81" x="648.46" y="317.40" class="known"><title>void __cdecl ControlGlow(int16_t fx_num);</title></rect>
<rect width="4.19" height="3.81" x="648.46" y="324.21" class="decompiled"><title>void __cdecl WaitPrimaryBufferFlip(void);</title></rect>
<rect width="4.19" height="3.81" x="648.46" y="331.02" class="decompiled"><title>void __cdecl S_RemoveCtrlText(void);</title></rect>
<rect width="4.19" height="3.81" x="648.46" y="337.83" class="known"><title>void __cdecl TexturePageReleaseVidMemSurface(TEXPAGE_DESC *page);</title></rect>
<rect width="4.19" height="3.70" x="648.46" y="344.64" class="decompiled"><title>void __cdecl Gun_Pistols_UndrawMeshLeft(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="4.19" height="3.70" x="648.46" y="351.33" class="decompiled"><title>void __cdecl Gun_Pistols_UndrawMeshRight(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="4.19" height="3.70" x="648.46" y="358.03" class="known"><title>void __cdecl TrapDoorFloor(ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="4.19" height="3.70" x="648.46" y="364.72" class="decompiled"><title>void __cdecl WinVidHideGameWindow(void);</title></rect>
<rect width="4.19" height="3.58" x="648.46" y="371.42" class="decompiled"><title>void __cdecl Output_InitPolyList(void);</title></rect>
<rect width="3.77" height="3.99" x="655.65" y="283.23" class="decompiled"><title>void __cdecl Requester_SetSize(REQUEST_INFO *req, int32_t maxlines, int32_t ypos);</title></rect>
<rect width="3.77" height="3.99" x="662.43" y="283.23" class="decompiled"><title>int16_t __cdecl Item_Create(void);</title></rect>
<rect width="3.77" height="3.99" x="669.20" y="283.23" class="decompiled"><title>void __cdecl Lara_State_SwitchOn(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="3.77" height="3.99" x="675.97" y="283.23" class="known"><title>void __cdecl SwitchControl(int16_t item_num);</title></rect>
<rect width="3.77" height="3.99" x="682.75" y="283.23" class="decompiled"><title>uint32_t __cdecl Text_GetScaleV(uint32_t value);</title></rect>
<rect width="3.77" height="3.99" x="689.52" y="283.23" class="unused"><title>sub_447170</title></rect>
<rect width="3.77" height="3.99" x="696.29" y="283.23" class="known"><title>void __cdecl TempVideoRemove(void);</title></rect>
<rect width="3.77" height="3.99" x="703.06" y="283.23" class="unused"><title>sub_447B40</title></rect>
<rect width="3.77" height="3.99" x="709.84" y="283.23" class="decompiled"><title>int32_t __cdecl S_Audio_Sample_GetFreeTrackIndex(void);</title></rect>
<rect width="3.77" height="3.99" x="716.61" y="283.23" class="decompiled"><title>void __cdecl Shell_Shutdown(void);</title></rect>
<rect width="3.77" height="3.99" x="723.38" y="283.23" class="decompiled"><title>void __cdecl S_Audio_Sample_OutSetPanAndVolume(int32_t track_id, int32_t pan, uint16_t volume);</title></rect>
<rect width="3.77" height="3.99" x="730.16" y="283.23" class="decompiled"><title>void __cdecl Music_Stop(void);</title></rect>
<rect width="3.54" height="3.99" x="736.93" y="283.23" class="decompiled"><title>void __cdecl Output_DrawPolyGTMapPersp(const int16_t *obj_ptr);</title></rect>
<rect width="3.54" height="3.99" x="743.46" y="283.23" class="decompiled"><title>void __cdecl Output_DrawPolyWGTMapPersp(const int16_t *obj_ptr);</title></rect>
<rect width="3.73" height="3.78" x="655.65" y="290.21" class="decompiled"><title>void __cdecl Item_ShiftCol(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="3.73" height="3.78" x="655.65" y="296.99" class="decompiled"><title>int32_t __cdecl Game_DrawCinematic(void);</title></rect>
<rect width="3.73" height="3.78" x="655.65" y="303.78" class="decompiled"><title>int32_t __cdecl Game_Draw(void);</title></rect>
<rect width="3.73" height="3.78" x="655.65" y="310.56" class="known"><title>void __cdecl ControlLaraAlarm(int16_t item_num);</title></rect>
<rect width="3.73" height="3.78" x="655.65" y="317.34" class="decompiled"><title>void __cdecl Text_ChangeText(TEXTSTRING *string, const char *text);</title></rect>
<rect width="3.73" height="3.78" x="655.65" y="324.12" class="decompiled"><title>uint32_t __cdecl Text_GetScaleH(uint32_t value);</title></rect>
<rect width="3.73" height="3.78" x="655.65" y="330.90" class="decompiled"><title>bool __cdecl D3DIsSupported(LPD3DDEVICEDESC desc);</title></rect>
<rect width="3.73" height="3.78" x="655.65" y="337.68" class="known"><title>void __cdecl S_InitialiseScreen(GAMEFLOW_LEVEL_TYPE level_type);</title></rect>
<rect width="3.73" height="3.78" x="655.65" y="344.46" class="known"><title>LONG __cdecl SetRegistryBinaryValue(LPCTSTR lpValueName, LPBYTE value, DWORD valueSize);</title></rect>
<rect width="3.73" height="3.78" x="655.65" y="351.24" class="known"><title>void __thiscall SE_ReleaseBitmapResource(BITMAP_RESOURCE *bmpRsrc);</title></rect>
<rect width="3.73" height="3.66" x="655.65" y="358.03" class="decompiled"><title>void __cdecl Output_PrintPolyList(uint8_t *surface_ptr);</title></rect>
<rect width="3.73" height="3.66" x="655.65" y="364.68" class="decompiled"><title>void __cdecl Lara_Col_Default(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="3.73" height="3.66" x="655.65" y="371.34" class="known"><title>void __cdecl DrawBridgeFloor(ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="3.83" height="3.57" x="662.39" y="290.21" class="known"><title>void __cdecl ChangeFileNameExtension(char *file_name, const char *file_ext);</title></rect>
<rect width="3.83" height="3.57" x="669.21" y="290.21" class="known"><title>DWORD __cdecl S_DumpScreen(void);</title></rect>
<rect width="3.83" height="3.57" x="676.04" y="290.21" class="known"><title>LPVOID __cdecl UT_LoadResource(LPCTSTR lpName, LPCTSTR lpType);</title></rect>
<rect width="3.83" height="3.57" x="682.87" y="290.21" class="known"><title>LONG __cdecl SetRegistryFloatValue(LPCTSTR lpValueName, double value);</title></rect>
<rect width="3.70" height="3.57" x="689.69" y="290.21" class="decompiled"><title>void __cdecl Output_DrawPolyFlat(const int16_t *obj_ptr);</title></rect>
<rect width="3.70" height="3.57" x="696.39" y="290.21" class="decompiled"><title>void __cdecl Output_DrawPolyTrans(const int16_t *obj_ptr);</title></rect>
<rect width="3.70" height="3.57" x="703.10" y="290.21" class="decompiled"><title>void __cdecl Output_DrawPolyGouraud(const int16_t *obj_ptr);</title></rect>
<rect width="3.70" height="3.57" x="709.80" y="290.21" class="decompiled"><title>void __cdecl Creature_Tilt(ITEM *item, int16_t angle);</title></rect>
<rect width="3.70" height="3.57" x="716.50" y="290.21" class="decompiled"><title>FRAME_INFO *__cdecl Item_GetBestFrame(const ITEM *item);</title></rect>
<rect width="3.70" height="3.57" x="723.20" y="290.21" class="decompiled"><title>void __cdecl Lara_State_HangLeft(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="3.70" height="3.57" x="729.90" y="290.21" class="decompiled"><title>void __cdecl Lara_State_HangRight(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="3.70" height="3.57" x="736.60" y="290.21" class="decompiled"><title>void __cdecl Lara_State_ClimbLeft(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="3.70" height="3.57" x="743.30" y="290.21" class="decompiled"><title>void __cdecl Lara_State_ClimbRight(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="3.49" height="3.78" x="662.39" y="296.78" class="known"><title>void __cdecl InitialiseLift(int16_t item_num);</title></rect>
<rect width="3.49" height="3.78" x="662.39" y="303.56" class="known"><title>void __cdecl LiftFloor(ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="3.49" height="3.78" x="662.39" y="310.34" class="known"><title>void __cdecl LiftCeiling(ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="3.49" height="3.78" x="662.39" y="317.12" class="known"><title>void __cdecl BridgeTilt1Ceiling(ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="3.49" height="3.78" x="662.39" y="323.90" class="known"><title>void __cdecl ReadSG(void *pointer, int32_t size);</title></rect>
<rect width="3.49" height="3.78" x="662.39" y="330.67" class="decompiled"><title>void __cdecl WinVidSetGameWindowSize(int32_t width, int32_t height);</title></rect>
<rect width="3.49" height="3.78" x="662.39" y="337.45" class="decompiled"><title>void __thiscall S_FlaggedString_InitAdapter(DISPLAY_ADAPTER *adapter);</title></rect>
<rect width="3.49" height="3.78" x="662.39" y="344.23" class="known"><title>void __cdecl S_FadeInInventory(BOOL isFade);</title></rect>
<rect width="3.49" height="3.78" x="662.39" y="351.01" class="known"><title>void __cdecl S_DrawScreenLine(int32_t x, int32_t y, int32_t z, int32_t x_len, int32_t y_len, BYTE color_idx, D3DCOLOR *gour, uint16_t flags);</title></rect>
<rect width="3.49" height="3.78" x="662.39" y="357.79" class="decompiled"><title>void __cdecl HWR_GetPageHandles(void);</title></rect>
<rect width="3.49" height="3.78" x="662.39" y="364.57" class="known"><title>bool __cdecl ReloadTextures(bool reset);</title></rect>
<rect width="3.49" height="3.65" x="662.39" y="371.35" class="decompiled"><title>void __cdecl Matrix_InitInterpolate(int32_t frac, int32_t rate);</title></rect>
<rect width="3.86" height="3.29" x="668.88" y="296.78" class="known"><title>void __cdecl BridgeTilt2Ceiling(ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="3.86" height="3.29" x="675.73" y="296.78" class="known"><title>void __cdecl TempVideoAdjust(int32_t hires, double sizer);</title></rect>
<rect width="3.86" height="3.29" x="682.59" y="296.78" class="known"><title>void __cdecl game_free(size_t free_size);</title></rect>
<rect width="3.73" height="3.29" x="689.45" y="296.78" class="decompiled"><title>void __cdecl Output_SortPolyList(void);</title></rect>
<rect width="3.73" height="3.29" x="696.18" y="296.78" class="decompiled"><title>void __cdecl CutscenePlayerGen_Initialise(int16_t item_num);</title></rect>
<rect width="3.73" height="3.29" x="702.91" y="296.78" class="decompiled"><title>void __cdecl Lara_State_RightJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="3.73" height="3.29" x="709.64" y="296.78" class="decompiled"><title>void __cdecl Lara_State_LeftJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="3.73" height="3.29" x="716.36" y="296.78" class="decompiled"><title>void __cdecl Lara_Col_HangLeft(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="3.73" height="3.29" x="723.09" y="296.78" class="decompiled"><title>void __cdecl Lara_Col_HangRight(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="3.73" height="3.29" x="729.82" y="296.78" class="decompiled"><title>void __cdecl Gun_Rifle_DrawMeshes(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="3.73" height="3.29" x="736.55" y="296.78" class="known"><title>int32_t __cdecl PickupTrigger(int16_t item_num);</title></rect>
<rect width="3.73" height="3.29" x="743.27" y="296.78" class="decompiled"><title>void __cdecl DDrawRelease(void);</title></rect>
<rect width="3.62" height="3.39" x="668.88" y="303.07" class="decompiled"><title>void __cdecl Matrix_PushUnit(void);</title></rect>
<rect width="3.62" height="3.26" x="668.88" y="309.46" class="decompiled"><title>const int16_t *__cdecl Output_CalcSkyboxLight(const int16_t *obj_ptr);</title></rect>
<rect width="3.62" height="3.26" x="668.88" y="315.73" class="decompiled"><title>void __cdecl Inv_RingActive(void);</title></rect>
<rect width="3.62" height="3.26" x="668.88" y="321.99" class="decompiled"><title>void __cdecl Lara_GetCollisionInfo(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="3.62" height="3.26" x="668.88" y="328.26" class="decompiled"><title>void __cdecl Lara_Col_SurfSwim(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="3.62" height="3.26" x="668.88" y="334.52" class="known"><title>void __cdecl OpenThatDoor(DOORPOS_DATA *d);</title></rect>
<rect width="3.62" height="3.26" x="668.88" y="340.79" class="decompiled"><title>void __cdecl BGND_GetPageHandles(void);</title></rect>
<rect width="3.62" height="3.26" x="668.88" y="347.05" class="decompiled"><title>void __thiscall DisplayModeListDelete(DISPLAY_MODE_LIST *pList);</title></rect>
<rect width="3.62" height="3.26" x="668.88" y="353.32" class="known"><title>void __cdecl FreeTexturePage(int32_t page_idx);</title></rect>
<rect width="3.62" height="3.14" x="668.88" y="359.58" class="decompiled"><title>void __cdecl Matrix_RotY_I(int16_t ang);</title></rect>
<rect width="3.62" height="3.14" x="668.88" y="365.72" class="decompiled"><title>void __cdecl Matrix_RotX_I(int16_t ang);</title></rect>
<rect width="3.62" height="3.14" x="668.88" y="371.86" class="decompiled"><title>void __cdecl Matrix_RotZ_I(int16_t ang);</title></rect>
<rect width="3.30" height="3.45" x="675.50" y="303.07" class="known"><title>int32_t __cdecl Music_GetRealTrack(int32_t track);</title></rect>
<rect width="3.30" height="3.45" x="681.80" y="303.07" class="decompiled"><title>void __cdecl S_Audio_Sample_AdjustTrackPitch(int32_t track_id, int32_t pitch);</title></rect>
<rect width="3.30" height="3.45" x="688.11" y="303.07" class="known"><title>void __cdecl S_CalculateStaticLight(int16_t adder);</title></rect>
<rect width="3.18" height="3.45" x="694.41" y="303.07" class="known"><title>void __cdecl ControlRichochet1(int16_t fx_num);</title></rect>
<rect width="3.18" height="3.45" x="700.59" y="303.07" class="decompiled"><title>void __cdecl Effect_InitialiseArray(void);</title></rect>
<rect width="3.18" height="3.45" x="706.77" y="303.07" class="decompiled"><title>void __cdecl Lara_State_PushBlock(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="3.18" height="3.45" x="712.94" y="303.07" class="decompiled"><title>void __cdecl Lara_State_Pickup(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="3.18" height="3.45" x="719.12" y="303.07" class="decompiled"><title>void __cdecl Lara_State_UseKey(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="3.18" height="3.45" x="725.30" y="303.07" class="known"><title>void __cdecl BridgeTilt1Floor(ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="3.18" height="3.45" x="731.47" y="303.07" class="decompiled"><title>bool __cdecl BGND_Init(void);</title></rect>
<rect width="3.18" height="3.45" x="737.65" y="303.07" class="known"><title>void __cdecl CleanupTextures(void);</title></rect>
<rect width="3.18" height="3.45" x="743.82" y="303.07" class="known"><title>BOOL __cdecl OpenRegistryKey(LPCTSTR lpSubKey);</title></rect>
<rect width="3.24" height="3.25" x="675.50" y="309.52" class="decompiled"><title>void __cdecl Creature_Initialise(int16_t item_num);</title></rect>
<rect width="3.24" height="3.25" x="675.50" y="315.77" class="decompiled"><title>int32_t __cdecl Room_FindGridShift(int32_t src, int32_t dst);</title></rect>
<rect width="3.24" height="3.25" x="675.50" y="322.02" class="decompiled"><title>void __cdecl Inv_Ring_RotateLeft(RING_INFO *ring);</title></rect>
<rect width="3.24" height="3.25" x="675.50" y="328.27" class="decompiled"><title>void __cdecl Inv_Ring_RotateRight(RING_INFO *ring);</title></rect>
<rect width="3.24" height="3.25" x="675.50" y="334.52" class="decompiled"><title>void __cdecl Lara_State_SwanDive(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="3.24" height="3.25" x="675.50" y="340.77" class="known"><title>void __cdecl BridgeTilt2Floor(ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="3.24" height="3.25" x="675.50" y="347.02" class="unused"><title>sub_4471C0</title></rect>
<rect width="3.24" height="3.25" x="675.50" y="353.27" class="unused"><title>sub_447B90</title></rect>
<rect width="3.24" height="3.25" x="675.50" y="359.52" class="decompiled"><title>void __cdecl S_Audio_Sample_CloseTrack(int32_t track_id);</title></rect>
<rect width="3.24" height="3.12" x="675.50" y="365.77" class="decompiled"><title>void __cdecl S_Audio_Sample_CloseAllTracks(void);</title></rect>
<rect width="3.24" height="3.12" x="675.50" y="371.88" class="known"><title>void __cdecl S_DrawScreenFBox(int32_t sx, int32_t sy, int32_t z, int32_t width, int32_t height, BYTE color_idx, const GOURAUD_FILL *gour, uint16_t flags);</title></rect>
<rect width="3.31" height="2.92" x="681.74" y="309.52" class="decompiled"><title>void __cdecl Demo_GetInput(void);</title></rect>
<rect width="3.31" height="2.92" x="688.05" y="309.52" class="decompiled"><title>BOOL __cdecl Overlay_FlashCounter(void);</title></rect>
<rect width="3.31" height="2.92" x="694.36" y="309.52" class="known"><title>void __cdecl WinInStart(void);</title></rect>
<rect width="3.17" height="2.92" x="700.66" y="309.52" class="known"><title>void __cdecl ChandelierFX(ITEM *item);</title></rect>
<rect width="3.17" height="2.92" x="706.83" y="309.52" class="decompiled"><title>void __cdecl Overlay_DrawModeInfo(void);</title></rect>
<rect width="3.17" height="2.92" x="713" y="309.52" class="decompiled"><title>void __cdecl Inv_Ring_CalcAdders(RING_INFO *ring, int16_t rotation_duration);</title></rect>
<rect width="3.17" height="2.92" x="719.17" y="309.52" class="decompiled"><title>void __cdecl Inv_Ring_MotionSetup(RING_INFO *ring, int16_t status, int16_t status_target, int16_t frames);</title></rect>
<rect width="3.17" height="2.92" x="725.33" y="309.52" class="decompiled"><title>void __cdecl Lara_State_Fallback(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="3.17" height="2.92" x="731.50" y="309.52" class="known"><title>void __cdecl InitialiseMovingBlock(int16_t item_num);</title></rect>
<rect width="3.17" height="2.92" x="737.67" y="309.52" class="known"><title>void __cdecl DrawBridgeCollision(int16_t item_num, ITEM *lara_item, COLL_INFO *coll);</title></rect>
<rect width="3.17" height="2.92" x="743.83" y="309.52" class="decompiled"><title>void __cdecl Text_Init(void);</title></rect>
<rect width="2.72" height="3.39" x="681.74" y="315.45" class="decompiled"><title>void __cdecl S_Audio_Sample_AdjustTrackVolumeAndPan(int32_t track_id, int32_t volume, int32_t pan);</title></rect>
<rect width="2.72" height="3.39" x="681.74" y="321.83" class="known"><title>LPTSTR __cdecl UT_FindArg(LPCTSTR str);</title></rect>
<rect width="2.72" height="3.39" x="681.74" y="328.22" class="decompiled"><title>uint32_t  __fastcall Math_Sqrt(uint32_t n);</title></rect>
<rect width="2.72" height="3.24" x="681.74" y="334.60" class="decompiled"><title>void __cdecl Lara_State_Slide(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="2.72" height="3.24" x="681.74" y="340.84" class="decompiled"><title>void __cdecl Gun_Rifle_UndrawMeshes(LARA_GUN_TYPE weapon_type);</title></rect>
<rect width="2.72" height="3.24" x="681.74" y="347.09" class="decompiled"><title>void __cdecl Text_Flash(TEXTSTRING *string, int16_t enable, int16_t rate);</title></rect>
<rect width="2.72" height="3.24" x="681.74" y="353.33" class="decompiled"><title>DWORD __cdecl GetZBufferDepth(void);</title></rect>
<rect width="2.72" height="3.24" x="681.74" y="359.57" class="decompiled"><title>void __cdecl HWR_ResetColorKey(void);</title></rect>
<rect width="2.72" height="3.10" x="681.74" y="365.81" class="decompiled"><title>void __cdecl Output_InsertPolygons_I(int16_t *ptr, int32_t clip);</title></rect>
<rect width="2.72" height="3.10" x="681.74" y="371.90" class="decompiled"><title>void __cdecl Sound_Init(void);</title></rect>
<rect width="2.85" height="2.96" x="687.46" y="315.45" class="decompiled"><title>void __cdecl S_Audio_Sample_Shutdown(void);</title></rect>
<rect width="2.85" height="2.96" x="693.31" y="315.45" class="known"><title>void __cdecl S_UnloadLevelFile(void);</title></rect>
<rect width="2.85" height="2.96" x="699.16" y="315.45" class="decompiled"><title>int32_t __cdecl S_Audio_Sample_CalculateSampleVolume(int32_t volume);</title></rect>
<rect width="2.85" height="2.96" x="705.01" y="315.45" class="known"><title>LONG __cdecl SetRegistryBoolValue(LPCTSTR lpValueName, bool value);</title></rect>
<rect width="2.71" height="2.96" x="710.86" y="315.45" class="decompiled"><title>void __cdecl Text_AddOutline(TEXTSTRING *string, int16_t enable, int16_t color, uint16_t *gour_ptr, uint16_t flags);</title></rect>
<rect width="2.71" height="2.96" x="716.57" y="315.45" class="known"><title>void __cdecl DInputKeyboardRelease(void);</title></rect>
<rect width="2.71" height="2.96" x="722.28" y="315.45" class="decompiled"><title>void __cdecl HWR_ResetTexSource(void);</title></rect>
<rect width="2.57" height="2.96" x="727.99" y="315.45" class="decompiled"><title>void __cdecl Overlay_MakeAmmoString(char *string);</title></rect>
<rect width="2.57" height="2.96" x="733.56" y="315.45" class="decompiled"><title>int32_t __cdecl CalculateWindowHeight(int32_t width, int32_t height);</title></rect>
<rect width="2.43" height="2.96" x="739.14" y="315.45" class="decompiled"><title>void __cdecl Matrix_Push_I(void);</title></rect>
<rect width="2.43" height="2.96" x="744.57" y="315.45" class="decompiled"><title>void __cdecl Lara_State_PPReady(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="2.60" height="2.78" x="687.46" y="321.40" class="known"><title>void __cdecl InitialiseLevelFlags(void);</title></rect>
<rect width="2.60" height="2.78" x="687.46" y="327.18" class="decompiled"><title>void __cdecl Text_Draw(void);</title></rect>
<rect width="2.60" height="2.78" x="687.46" y="332.96" class="known"><title>void __cdecl S_FadeOutInventory(BOOL isFade);</title></rect>
<rect width="2.60" height="2.63" x="687.46" y="338.74" class="decompiled"><title>void __cdecl Inv_Ring_MotionRadius(RING_INFO *ring, int16_t target);</title></rect>
<rect width="2.60" height="2.63" x="687.46" y="344.37" class="known"><title>LPCTSTR __cdecl GetFullPath(LPCTSTR file_name);</title></rect>
<rect width="2.60" height="2.63" x="687.46" y="350" class="known"><title>void __cdecl ScreenClear(bool is_phd_win_size);</title></rect>
<rect width="2.60" height="2.63" x="687.46" y="355.63" class="decompiled"><title>int32_t __cdecl S_Audio_Sample_CalculateSamplePan(int16_t pan);</title></rect>
<rect width="2.60" height="2.63" x="687.46" y="361.26" class="known"><title>void __cdecl FreeTexturePages(void);</title></rect>
<rect width="2.60" height="2.63" x="687.46" y="366.89" class="known"><title>void __cdecl SE_PassMessageToImage(HWND hWnd, UINT uMsg, WPARAM wParam);</title></rect>
<rect width="2.60" height="2.48" x="687.46" y="372.52" class="decompiled"><title>void __cdecl Inv_Ring_MotionCameraPos(RING_INFO *ring, int16_t target);</title></rect>
<rect width="2.34" height="2.75" x="693.06" y="321.40" class="decompiled"><title>int32_t __cdecl Text_Remove(TEXTSTRING *string);</title></rect>
<rect width="2.34" height="2.75" x="693.06" y="327.16" class="decompiled"><title>HRESULT __cdecl WinVidBufferUnlock(LPDDS surface, LPDDSDESC desc);</title></rect>
<rect width="2.34" height="2.75" x="693.06" y="332.91" class="known"><title>LPDIRECT3DTEXTURE2 __cdecl Create3DTexture(LPDDS surface);</title></rect>
<rect width="2.34" height="2.75" x="693.06" y="338.66" class="known"><title>HRESULT __cdecl EnumerateTextureFormats(void);</title></rect>
<rect width="2.34" height="2.60" x="693.06" y="344.42" class="decompiled"><title>void __cdecl Room_TriggerMusicTrack(int16_t value, int16_t flags, int16_t type);</title></rect>
<rect width="2.34" height="2.60" x="693.06" y="350.01" class="known"><title>void __cdecl AssaultStart(ITEM *item);</title></rect>
<rect width="2.34" height="2.60" x="693.06" y="355.61" class="decompiled"><title>void __cdecl Inv_RemoveInventoryText(void);</title></rect>
<rect width="2.34" height="2.60" x="693.06" y="361.21" class="decompiled"><title>void __cdecl Sound_Shutdown(void);</title></rect>
<rect width="2.34" height="2.60" x="693.06" y="366.81" class="decompiled"><title>int16_t __cdecl Text_GetTextLength(const char *text);</title></rect>
<rect width="2.34" height="2.60" x="693.06" y="372.40" class="known"><title>bool __cdecl DInputEnumDevices(JOYSTICK_LIST *joystickList);</title></rect>
<rect width="2.29" height="2.65" x="698.40" y="321.40" class="decompiled"><title>void __cdecl HWR_TexSource(HWR_TEXTURE_HANDLE tex_source);</title></rect>
<rect width="2.14" height="2.65" x="703.70" y="321.40" class="known"><title>void __cdecl RubbleFX(ITEM *item);</title></rect>
<rect width="2.14" height="2.65" x="708.84" y="321.40" class="known"><title>void __cdecl ExplosionFX(ITEM *item);</title></rect>
<rect width="2.14" height="2.65" x="713.99" y="321.40" class="decompiled"><title>void __cdecl Lara_Col_BackJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="2.14" height="2.65" x="719.13" y="321.40" class="decompiled"><title>void __cdecl Lara_Col_RightJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="2.14" height="2.65" x="724.28" y="321.40" class="decompiled"><title>void __cdecl Lara_Col_LeftJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="2.14" height="2.65" x="729.42" y="321.40" class="decompiled"><title>void __cdecl Lara_Col_SlideBack(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="2.14" height="2.65" x="734.57" y="321.40" class="decompiled"><title>void __cdecl Lara_Col_SurfBack(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="2.14" height="2.65" x="739.71" y="321.40" class="decompiled"><title>void __cdecl Lara_Col_SurfLeft(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="2.14" height="2.65" x="744.86" y="321.40" class="decompiled"><title>void __cdecl Lara_Col_SurfRight(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="2.57" height="2.21" x="698.40" y="327.05" class="known"><title>void __cdecl SecretControl(int16_t item_num);</title></rect>
<rect width="2.57" height="2.21" x="698.40" y="332.27" class="known"><title>uint16_t __cdecl S_COLOR(int32_t red, int32_t green, int32_t blue);</title></rect>
<rect width="2.57" height="2.21" x="698.40" y="337.48" class="known"><title>void __cdecl FreePalette(int32_t palette_idx);</title></rect>
<rect width="2.57" height="2.07" x="698.40" y="342.69" class="decompiled"><title>void __cdecl Matrix_Pop_I(void);</title></rect>
<rect width="2.57" height="2.07" x="698.40" y="347.76" class="decompiled"><title>void __cdecl Inv_Ring_MotionRotation(RING_INFO *ring, int16_t rotation, int16_t target);</title></rect>
<rect width="2.57" height="2.07" x="698.40" y="352.82" class="known"><title>void __cdecl DrawMovableBlock(ITEM *item);</title></rect>
<rect width="2.57" height="2.07" x="698.40" y="357.89" class="decompiled"><title>void __cdecl WinVidFreeWindow(void);</title></rect>
<rect width="2.57" height="2.07" x="698.40" y="362.95" class="decompiled"><title>bool __cdecl DInputCreate(void);</title></rect>
<rect width="2.57" height="2.07" x="698.40" y="368.02" class="decompiled"><title>bool __cdecl HWR_Init(void);</title></rect>
<rect width="2.57" height="1.92" x="698.40" y="373.08" class="decompiled"><title>void __cdecl Lara_InitialiseLoad(int16_t item_num);</title></rect>
<rect width="2.33" height="2.14" x="703.97" y="327.05" class="known"><title>void __cdecl init_game_malloc(void);</title></rect>
<rect width="2.33" height="2.14" x="709.30" y="327.05" class="known"><title>void __cdecl S_SetupAboveWater(BOOL underwater);</title></rect>
<rect width="2.17" height="2.14" x="714.63" y="327.05" class="decompiled"><title>void __cdecl Inv_Ring_MotionCameraPitch(RING_INFO *ring, int16_t target);</title></rect>
<rect width="2.17" height="2.14" x="719.80" y="327.05" class="known"><title>void __cdecl SafeFreeTexturePage(int32_t page_idx);</title></rect>
<rect width="2.01" height="2.14" x="724.97" y="327.05" class="known"><title>void __cdecl AssaultStop(ITEM *item);</title></rect>
<rect width="2.01" height="2.14" x="729.98" y="327.05" class="decompiled"><title>int32_t __cdecl GF_DoFrontendSequence(void);</title></rect>
<rect width="2.01" height="2.14" x="734.98" y="327.05" class="decompiled"><title>bool __cdecl D3DCreate(void);</title></rect>
<rect width="2.01" height="2.14" x="739.99" y="327.05" class="decompiled"><title>void __thiscall S_FlaggedString_Create(STRING_FLAGGED *string, int32_t size);</title></rect>
<rect width="2.01" height="2.14" x="744.99" y="327.05" class="decompiled"><title>BOOL __cdecl S_Audio_Sample_OutIsTrackPlaying(int32_t track_id);</title></rect>
<rect width="1.91" height="2.24" x="703.97" y="332.19" class="known"><title>bool __cdecl InitTextures(void);</title></rect>
<rect width="1.91" height="2.07" x="703.97" y="337.43" class="decompiled"><title>void __cdecl Lara_Col_Slide(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="1.91" height="2.07" x="703.97" y="342.50" class="decompiled"><title>void __cdecl Lara_State_ClimbEnd(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="1.91" height="2.07" x="703.97" y="347.57" class="decompiled"><title>void __cdecl Lara_Col_SurfTread(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="1.91" height="2.07" x="703.97" y="352.64" class="decompiled"><title>void __cdecl Text_CentreH(TEXTSTRING *string, int16_t enable);</title></rect>
<rect width="1.91" height="2.07" x="703.97" y="357.72" class="decompiled"><title>void __cdecl Text_CentreV(TEXTSTRING *string, int16_t enable);</title></rect>
<rect width="1.91" height="2.07" x="703.97" y="362.79" class="decompiled"><title>void __cdecl Text_AlignRight(TEXTSTRING *string, int16_t enable);</title></rect>
<rect width="1.91" height="2.07" x="703.97" y="367.86" class="decompiled"><title>void __cdecl Text_AlignBottom(TEXTSTRING *string, int16_t enable);</title></rect>
<rect width="1.91" height="2.07" x="703.97" y="372.93" class="decompiled"><title>int32_t __cdecl Random_GetControl(void);</title></rect>
<rect width="2.32" height="1.68" x="708.89" y="332.19" class="decompiled"><title>int32_t __cdecl Random_GetDraw(void);</title></rect>
<rect width="2.32" height="1.68" x="714.20" y="332.19" class="known"><title>LONG __cdecl SetRegistryDwordValue(LPCTSTR lpValueName, DWORD value);</title></rect>
<rect width="2.32" height="1.68" x="719.52" y="332.19" class="decompiled"><title>void __cdecl Matrix_Push(void);</title></rect>
<rect width="2.14" height="1.68" x="724.84" y="332.19" class="decompiled"><title>void __cdecl Lara_State_Special(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="2.14" height="1.68" x="729.97" y="332.19" class="decompiled"><title>void __cdecl Lara_State_Extra_GongBong(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="1.96" height="1.68" x="735.11" y="332.19" class="known"><title>void __cdecl BoilerFX(ITEM *item);</title></rect>
<rect width="1.96" height="1.68" x="740.08" y="332.19" class="known"><title>void __cdecl PistonFX(ITEM *item);</title></rect>
<rect width="1.96" height="1.68" x="745.04" y="332.19" class="known"><title>void __cdecl CurtainFX(ITEM *item);</title></rect>
<rect width="1.57" height="2.09" x="708.89" y="336.88" class="known"><title>void __cdecl StatueFX(ITEM *item);</title></rect>
<rect width="1.57" height="2.09" x="713.45" y="336.88" class="known"><title>void __cdecl SetChangeFX(ITEM *item);</title></rect>
<rect width="1.57" height="2.09" x="718.02" y="336.88" class="decompiled"><title>void __cdecl Lara_State_Reach(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="1.57" height="2.09" x="722.59" y="336.88" class="decompiled"><title>bool __cdecl S_Audio_Sample_DSoundCreate(GUID *guid);</title></rect>
<rect width="1.57" height="2.09" x="727.16" y="336.88" class="known"><title>void __cdecl S_DontDisplayPicture(void);</title></rect>
<rect width="1.57" height="2.09" x="731.73" y="336.88" class="decompiled"><title>void __cdecl S_Audio_Sample_OutSetPitch(int32_t track_id, int32_t pitch);</title></rect>
<rect width="1.57" height="2.09" x="736.30" y="336.88" class="known"><title>int32_t __cdecl GetFreePaletteIndex(void);</title></rect>
<rect width="1.57" height="2.09" x="740.86" y="336.88" class="known"><title>int32_t __cdecl GetFreeTexturePageIndex(void);</title></rect>
<rect width="1.57" height="2.09" x="745.43" y="336.88" class="known"><title>void __thiscall SE_UpdateBitmapPalette(BITMAP_RESOURCE *bmpRsrc, HWND hWnd, HWND hSender);</title></rect>
<rect width="1.91" height="1.57" x="708.89" y="341.96" class="decompiled"><title>void __cdecl Inv_RemoveAllItems(void);</title></rect>
<rect width="1.91" height="1.57" x="708.89" y="346.53" class="decompiled"><title>void __cdecl Requester_Item_CenterAlign(REQUEST_INFO *req, TEXTSTRING *txt);</title></rect>
<rect width="1.91" height="1.57" x="708.89" y="351.10" class="decompiled"><title>void __cdecl Lara_ControlExtra(int16_t item_num);</title></rect>
<rect width="1.91" height="1.57" x="708.89" y="355.67" class="known"><title>void __cdecl BridgeFlatCeiling(ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="1.91" height="1.57" x="708.89" y="360.24" class="decompiled"><title>int32_t __fastcall Math_Sin(int16_t angle);</title></rect>
<rect width="1.91" height="1.40" x="708.89" y="364.80" class="decompiled"><title>bool __cdecl EnumerateDisplayAdapters(DISPLAY_ADAPTER_LIST *displayAdapterList);</title></rect>
<rect width="1.91" height="1.40" x="708.89" y="369.20" class="decompiled"><title>void __cdecl DInputRelease(void);</title></rect>
<rect width="1.91" height="1.40" x="708.89" y="373.60" class="decompiled"><title>bool __cdecl S_Audio_Sample_DSoundEnumerate(SOUND_ADAPTER_LIST *adapter_list);</title></rect>
<rect width="1.51" height="1.78" x="713.79" y="341.96" class="decompiled"><title>int32_t __fastcall Math_SinImpl(int16_t angle);</title></rect>
<rect width="1.51" height="1.60" x="713.79" y="346.74" class="decompiled"><title>int32_t __cdecl Input_GetDebounced(int32_t input);</title></rect>
<rect width="1.51" height="1.60" x="713.79" y="351.34" class="decompiled"><title>bool __cdecl HWR_VertexBufferFull(void);</title></rect>
<rect width="1.51" height="1.41" x="713.79" y="355.94" class="decompiled"><title>void __cdecl Lara_State_SlideBack(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="1.51" height="1.41" x="713.79" y="360.35" class="known"><title>void __cdecl Flare_DrawMeshes(void);</title></rect>
<rect width="1.51" height="1.41" x="713.79" y="364.76" class="known"><title>void __cdecl Flare_UndrawMeshes(void);</title></rect>
<rect width="1.51" height="1.41" x="713.79" y="369.17" class="unused"><title>sub_444990</title></rect>
<rect width="1.51" height="1.41" x="713.79" y="373.59" class="unused"><title>sub_444AA0</title></rect>
<rect width="1.55" height="1.37" x="718.31" y="341.96" class="unused"><title>sub_4470B0</title></rect>
<rect width="1.55" height="1.37" x="722.86" y="341.96" class="unused"><title>sub_447160</title></rect>
<rect width="1.55" height="1.37" x="727.42" y="341.96" class="unused"><title>sub_447A80</title></rect>
<rect width="1.55" height="1.37" x="731.97" y="341.96" class="unused"><title>sub_447B30</title></rect>
<rect width="1.55" height="1.37" x="736.53" y="341.96" class="known"><title>BOOL __cdecl S_LoadLevelFile(LPCTSTR file_name, int32_t level_num, GAMEFLOW_LEVEL_TYPE level_type);</title></rect>
<rect width="1.55" height="1.37" x="741.08" y="341.96" class="known"><title>int32_t __cdecl UT_MessageBox(LPCTSTR lpText, HWND hWnd);</title></rect>
<rect width="1.37" height="1.37" x="745.63" y="341.96" class="known"><title>void __cdecl AssaultReset(ITEM *item);</title></rect>
<rect width="1.17" height="1.58" x="718.31" y="346.34" class="decompiled"><title>void __cdecl Text_SetScale(TEXTSTRING *string, int32_t scale_h, int32_t scale_v);</title></rect>
<rect width="1.17" height="1.58" x="718.31" y="350.92" class="known"><title>void __cdecl WinInRunControlPanel(HWND hWnd);</title></rect>
<rect width="1.17" height="1.58" x="718.31" y="355.50" class="unused"><title>sub_44E860</title></rect>
<rect width="1.17" height="1.58" x="718.31" y="360.08" class="known"><title>void __cdecl SE_GraphicsAdapterSet(HWND hwndDlg, DISPLAY_ADAPTER_NODE *adapter);</title></rect>
<rect width="1.17" height="1.58" x="718.31" y="364.66" class="decompiled"><title>void __cdecl S_Audio_Sample_OutCloseTrack(int32_t track_id);</title></rect>
<rect width="1.17" height="1.38" x="718.31" y="369.24" class="known"><title>void __cdecl turn180_effect(ITEM *item);</title></rect>
<rect width="1.17" height="1.38" x="718.31" y="373.62" class="known"><title>void __cdecl invisibility_off(ITEM *item);</title></rect>
<rect width="1.12" height="1.43" x="722.47" y="346.34" class="known"><title>void __cdecl BridgeFlatFloor(ITEM *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="1.12" height="1.43" x="726.59" y="346.34" class="decompiled"><title>void __cdecl HWR_BeginScene(void);</title></rect>
<rect width="0.93" height="1.43" x="730.71" y="346.34" class="decompiled"><title>void __cdecl Overlay_InitialisePickUpDisplay(void);</title></rect>
<rect width="0.93" height="1.43" x="734.65" y="346.34" class="decompiled"><title>void __cdecl Lara_State_WaterOut(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="0.93" height="1.43" x="738.58" y="346.34" class="known"><title>void __cdecl ResetSG(void);</title></rect>
<rect width="0.74" height="1.43" x="742.51" y="346.34" class="decompiled"><title>void __cdecl Lara_State_Death(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="0.74" height="1.43" x="746.26" y="346.34" class="decompiled"><title>void __cdecl Lara_State_Climbing(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="1.18" height="0.98" x="722.47" y="350.77" class="decompiled"><title>void __cdecl Lara_State_ClimbDown(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="1.18" height="0.98" x="722.47" y="354.74" class="decompiled"><title>void __cdecl Lara_State_Dive(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="1.18" height="0.98" x="722.47" y="358.72" class="known"><title>void __cdecl S_AdjustTexelCoordinates(void);</title></rect>
<rect width="1.18" height="0.98" x="722.47" y="362.70" class="known"><title>void __cdecl SE_GraphicsTestFinish(void);</title></rect>
<rect width="1.18" height="0.78" x="722.47" y="366.67" class="decompiled"><title>void __cdecl Requester_RemoveAllItems(REQUEST_INFO *req);</title></rect>
<rect width="1.18" height="0.78" x="722.47" y="370.45" class="decompiled"><title>void __cdecl Lara_State_UpJump(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="1.18" height="0.78" x="722.47" y="374.22" class="decompiled"><title>void __cdecl Lara_State_Extra_Airlock(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="0.89" height="1.05" x="726.65" y="350.77" class="decompiled"><title>void __cdecl Lara_Col_TurnLeft(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="0.89" height="1.05" x="730.54" y="350.77" class="decompiled"><title>void __cdecl Lara_Col_Land(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="0.89" height="1.05" x="734.43" y="350.77" class="decompiled"><title>void __cdecl Lara_Col_StepLeft(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="0.89" height="1.05" x="738.33" y="350.77" class="decompiled"><title>void __cdecl Lara_Col_Null(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="0.89" height="1.05" x="742.22" y="350.77" class="decompiled"><title>void __cdecl Lara_Col_Swim(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="0.89" height="1.05" x="746.11" y="350.77" class="decompiled"><title>void __thiscall S_FlaggedString_Delete(STRING_FLAGGED *string);</title></rect>
<rect width="0.98" height="0.97" x="726.65" y="354.82" class="decompiled"><title>void __cdecl WinVidFinish(void);</title></rect>
<rect width="0.98" height="0.97" x="726.65" y="358.79" class="known"><title>bool __cdecl S_IntroFMV(const char *file_name1, const char *file_name2);</title></rect>
<rect width="0.98" height="0.97" x="726.65" y="362.76" class="known"><title>LONG __cdecl DeleteRegistryValue(LPCTSTR lpValueName);</title></rect>
<rect width="0.98" height="0.76" x="726.65" y="366.72" class="unused"><title>sub_4449A0</title></rect>
<rect width="0.98" height="0.76" x="726.65" y="370.48" class="decompiled"><title>DISPLAY_MODE *__thiscall InsertDisplayMode(DISPLAY_MODE_LIST *modeList, DISPLAY_MODE_NODE *before);</title></rect>
<rect width="0.98" height="0.76" x="726.65" y="374.24" class="unused"><title>sub_4470C0</title></rect>
<rect width="1.01" height="0.73" x="730.63" y="354.82" class="unused"><title>sub_447A90</title></rect>
<rect width="1.01" height="0.73" x="734.63" y="354.82" class="known"><title>void __cdecl SafeFreePalette(int32_t palette_idx);</title></rect>
<rect width="0.79" height="0.73" x="738.64" y="354.82" class="decompiled"><title>HWND __cdecl WinVidFindGameWindow(void);</title></rect>
<rect width="0.79" height="0.73" x="742.43" y="354.82" class="known"><title>void __cdecl GameBuf_Shutdown(void);</title></rect>
<rect width="0.79" height="0.73" x="746.21" y="354.82" class="known"><title>HWND __cdecl SE_FindSetupDialog(void);</title></rect>
<rect width="0.92" height="0.38" x="730.63" y="358.55" class="decompiled"><title>void __cdecl Text_RemoveBackground(TEXTSTRING *string);</title></rect>
<rect width="0.92" height="0.38" x="734.55" y="358.55" class="decompiled"><title>void __cdecl Text_RemoveOutline(TEXTSTRING *string);</title></rect>
<rect width="0.92" height="0.38" x="738.47" y="358.55" class="unused"><title>sub_44E880</title></rect>
<rect width="0.92" height="0.38" x="742.40" y="358.55" class="known"><title>void __cdecl ScreenPartialDump(void);</title></rect>
<rect width="0.68" height="0.38" x="746.32" y="358.55" class="known"><title>void __cdecl WinInFinish(void);</title></rect>
<rect width="0.67" height="0.39" x="730.63" y="361.93" class="known"><title>void __cdecl S_FinishInventory(void);</title></rect>
<rect width="0.67" height="0.39" x="730.63" y="365.33" class="known"><title>bool __cdecl IsNewRegistryKeyCreated(void);</title></rect>
<rect width="0.67" height="0.17" x="730.63" y="368.72" class="known"><title>bool __cdecl S_PlayFMV(const char *file_name);</title></rect>
<rect width="0.67" height="0.17" x="730.63" y="371.89" class="known"><title>void __cdecl SE_AdvancedDlgInit(HWND hwndDlg);</title></rect>
<rect width="0.67" height="0.10" x="730.63" y="375.06" class="decompiled"><title>void __thiscall DisplayModeListInit(DISPLAY_MODE_LIST *pList);</title></rect>
<rect width="0.40" height="0.17" x="734.29" y="361.93" class="known"><title>void __cdecl ScreenDump(void);</title></rect>
<rect width="0.40" height="0.17" x="737.70" y="361.93" class="known"><title>LONG __cdecl CloseRegistryKey(void);</title></rect>
<rect width="0.14" height="0.17" x="741.10" y="361.93" class="decompiled"><title>LPCTSTR __cdecl DecodeErrorMessage(DWORD error_code);</title></rect>
<rect width="0.10" height="0.17" x="744.24" y="361.93" class="known"><title>void __cdecl finish_level_effect(ITEM *item);</title></rect>
<rect width="0.10" height="0.17" x="747.12" y="361.93" class="known"><title>void __cdecl dynamic_light_off(ITEM *item);</title></rect>
<rect width="0.10" height="0.30" x="734.29" y="365.10" class="decompiled"><title>void __cdecl Lara_State_Null(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="0.10" height="0.30" x="734.29" y="368.40" class="decompiled"><title>void __cdecl Lara_State_UWTwist(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="0.10" height="0.30" x="734.29" y="371.70" class="known"><title>void __cdecl S_ClearScreen(void);</title></rect>
<rect width="0.10" height="0.10" x="734.29" y="375" class="decompiled"><title>void __cdecl Game_SetCutsceneTrack(int32_t track);</title></rect>
<rect width="0.22" height="0.10" x="737.06" y="365.10" class="known"><title>void __cdecl lara_hands_free(ITEM *item);</title></rect>
<rect width="0.22" height="0.10" x="737.06" y="367.68" class="decompiled"><title>void __cdecl Lara_State_Splat(ITEM *item, COLL_INFO *coll);</title></rect>
<rect width="0.22" height="0.10" x="737.06" y="370.26" class="decompiled"><title>void __cdecl Random_SeedControl(int32_t seed);</title></rect>
<rect width="0.22" height="0.10" x="737.06" y="372.84" class="decompiled"><title>void __cdecl Random_SeedDraw(int32_t seed);</title></rect>
<rect width="0.22" height="0.10" x="737.06" y="375.42" class="known"><title>void __cdecl SE_SoundAdapterSet(HWND hwndDlg, SOUND_ADAPTER_NODE *adapter);</title></rect>
<rect width="0.35" height="0.10" x="740.28" y="365.10" class="known"><title>void __cdecl SE_ControlsJoystickSet(HWND hwndDlg, JOYSTICK_NODE *joystick);</title></rect>
<rect width="0.35" height="0.10" x="743.63" y="365.10" class="decompiled"><title>void __cdecl Sound_SetMasterVolume(int32_t volume);</title></rect>
<rect width="0.10" height="0.10" x="746.98" y="365.10" class="known"><title>void __cdecl invisibility_on(ITEM *item);</title></rect>
<rect width="0.10" height="0.10" x="740.28" y="367.58" class="known"><title>void __cdecl dynamic_light_on(ITEM *item);</title></rect>
<rect width="0.10" height="0.10" x="743.10" y="367.58" class="decompiled"><title>void __cdecl WinVidClearMinWindowSize(void);</title></rect>
<rect width="0.10" height="0.10" x="745.61" y="367.58" class="decompiled"><title>void __cdecl WinVidClearMaxWindowSize(void);</title></rect>
<rect width="0.10" height="0.10" x="748.12" y="367.58" class="decompiled"><title>bool __cdecl Direct3DInit(void);</title></rect>
<rect width="0.10" height="0.10" x="740.28" y="370.23" class="decompiled"><title>bool __cdecl S_Audio_Sample_IsEnabled(void);</title></rect>
<rect width="0.10" height="0.10" x="740.28" y="372.17" class="decompiled"><title>int32_t __cdecl LevelCompleteSequence(void);</title></rect>
<rect width="0.10" height="0.10" x="740.28" y="374.11" class="known"><title>int32_t __cdecl GetRenderHeight(void);</title></rect>
<rect width="0.10" height="0.10" x="740.28" y="376.06" class="known"><title>int32_t __cdecl GetRenderWidth(void);</title></rect>
<rect width="0.10" height="0.10" x="742.84" y="370.23" class="decompiled"><title>int32_t __fastcall Math_Cos(int16_t angle);</title></rect>
<rect width="0.10" height="0.10" x="744.89" y="370.23" class="known"><title>void __cdecl flip_map_effect(ITEM *item);</title></rect>
<rect width="0.10" height="0.10" x="746.59" y="370.23" class="known"><title>void __cdecl reset_hair(ITEM *item);</title></rect>
<rect width="0.10" height="0.10" x="748.30" y="370.23" class="decompiled"><title>void __cdecl Inv_DoInventoryPicture(void);</title></rect>
<rect width="0.10" height="0.10" x="742.84" y="372.66" class="unused"><title>sub_444BB0</title></rect>
<rect width="0.10" height="0.10" x="742.84" y="374.44" class="unused"><title>sub_4473A0</title></rect>
<rect width="0.10" height="0.10" x="742.84" y="376.22" class="unused"><title>sub_447FA0</title></rect>
<rect width="0.10" height="0.10" x="745.18" y="372.66" class="unused"><title>sub_448410</title></rect>
<rect width="0.10" height="0.10" x="747.59" y="372.66" class="unused"><title>sub_4523A0</title></rect>
<rect width="0.10" height="0.10" x="745.18" y="374.39" class="known"><title>LONG __cdecl CloseGameRegistryKey(void);</title></rect>
<rect width="0.10" height="0.10" x="745.18" y="376.19" class="known"><title>void __cdecl SE_SoundTestFinish(void);</title></rect>
<rect width="0.10" height="0.10" x="747.47" y="374.39" class="decompiled"><title>bool __cdecl RenderInit(void);</title></rect>
<rect width="0.10" height="0.10" x="748.74" y="374.39" class="known"><title>int32_t __cdecl SE_GraphicsTestExecute(void);</title></rect>
<rect width="0.10" height="0.10" x="747.47" y="376.36" class="unused"><title>void __cdecl Output_InsertInventoryBackground(const int16_t *obj_ptr);</title></rect>
<rect width="0.10" height="0.10" x="747.47" y="377.18" class="unused"><title>sub_444BC0</title></rect>
<rect width="0.10" height="0.10" x="748.48" y="376.36" class="unused"><title>sub_448420</title></rect>
<rect width="0.10" height="0.10" x="749.24" y="376.36" class="unused"><title>sub_44E6F0</title></rect>
<rect width="0.10" height="0.10" x="748.48" y="377.45" class="unused"><title>sub_4523B0</title></rect>
</g>
</g>
</svg>
