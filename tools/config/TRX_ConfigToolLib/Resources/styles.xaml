<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <Style
        TargetType="{x:Type Button}"
        x:Key="ButtonStyle">
        <Setter
            Property="MinWidth"
            Value="70"/>
        <Setter
            Property="Padding"
            Value="10,5" />
    </Style>

    <Style
        x:Key="SeparatorBorderStyle"
        TargetType="{x:Type UserControl}">
        <Setter
            Property="BorderBrush"
            Value="#DEDEDE" />
        <Setter
            Property="BorderThickness"
            Value="0,1,0,0" />
        <Setter
            Property="Margin"
            Value="0,8,0,0" />
        <Setter
            Property="Padding"
            Value="0,6,0,0" />
        <Setter
            Property="SnapsToDevicePixels"
            Value="True" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}, Path=(ItemsControl.AlternationIndex)}"
                Value="0">
                <Setter
                    Property="BorderThickness"
                    Value="0"/>
                <Setter
                    Property="Margin"
                    Value="0"/>
                <Setter
                    Property="Padding"
                    Value="0"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="PropertyTitleStyle"
        TargetType="{x:Type TextBlock}">
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
        <Setter
            Property="FontSize"
            Value="14"/>
        <Setter
            Property="FontWeight"
            Value="DemiBold"/>
        <Setter
            Property="Margin"
            Value="0,0,0,2" />
    </Style>

    <Style
        x:Key="PropertyDescriptionStyle"
        TargetType="{x:Type TextBlock}">
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
        <Setter
            Property="VerticalAlignment"
            Value="Top" />
        <Setter
            Property="Margin"
            Value="0,0,0,10" />
    </Style>

    <Style
        x:Key="PropertyCheckboxStyle"
        TargetType="{x:Type CheckBox}">
        <Setter
            Property="VerticalContentAlignment"
            Value="Center" />
    </Style>

    <Style
        x:Key="PropertyComboBoxStyle"
        TargetType="{x:Type ComboBox}">
        <Setter
            Property="MinWidth"
            Value="150" />
    </Style>

    <Style
        x:Key="PropertyNumericUpDownStyle"
        TargetType="{x:Type UserControl}">
        <Setter
            Property="MinWidth"
            Value="100" />
    </Style>

    <Style
        TargetType="{x:Type TextBox}"
        x:Key="NumericTextBoxStyle">
        <Setter
            Property="HorizontalContentAlignment"
            Value="Right"/>
        <Setter
            Property="VerticalAlignment"
            Value="Center"/>
        <Setter
            Property="BorderThickness"
            Value="0"/>
        <Setter
            Property="Margin"
            Value="3,0"/>
        <Setter
            Property="ToolTipService.InitialShowDelay"
            Value="0"/>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter
                    Property="ToolTip"
                    Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        TargetType="ToolTip">
        <Style.Triggers>
            <Trigger Property="Content" Value="{x:Static sys:String.Empty}">
                <Setter
                    Property="Visibility"
                    Value="Collapsed" />
            </Trigger>
            <Trigger Property="Content" Value="{x:Null}">
                <Setter
                    Property="Visibility"
                    Value="Collapsed" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        TargetType="{x:Type RepeatButton}"
        x:Key="FlatRepeatButtonStyle">
        <Setter
            Property="Background"
            Value="#333"/>
        <Setter
            Property="Foreground"
            Value="#FFF"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type RepeatButton}">
                    <Border
                        Background="{TemplateBinding Background}"
                        Padding="0,2"
                        BorderThickness="1,0,0,0"
                        BorderBrush="#666">
                        <Image
                            Source="{Binding Content, RelativeSource={RelativeSource AncestorType=RepeatButton}}"
                            Height="6"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter
                    Property="Background"
                    Value="#121212"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter
                    Property="Background"
                    Value="#858585"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
